!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
-adjust-vma	Makefile	/^	objdump --adjust-vma=$(BASEADDR) -rtd -b binary -m i386 --disassemble-all test.dat > test.dat-32bit.alt.S$/;"	m
-adjust-vma	Makefile	/^	objdump --adjust-vma=$(BASEADDR) -rtd -b binary -m i386:intel --disassemble-all test.dat > test.dat-32bit.S$/;"	m
-adjust-vma	Makefile	/^	objdump --adjust-vma=$(BASEADDR) -rtd -b binary -m i386:x86-64 --disassemble-all test.dat > test.dat-64bit.alt.S$/;"	m
-adjust-vma	Makefile	/^	objdump --adjust-vma=$(BASEADDR) -rtd -b binary -m i386:x86-64:intel --disassemble-all test.dat > test.dat-64bit.S$/;"	m
A	ooocore-amd-k8.h	105;"	d
A	ooocore-amd-k8.h	280;"	d
A	ooocore.h	103;"	d
A	ooocore.h	287;"	d
ABS	mathlib.cpp	25;"	d	file:
ADD2	mathlib.cpp	550;"	d	file:
ADD2A	mathlib.cpp	599;"	d	file:
ADDRESS_SPACE_BITS	kernel.h	84;"	d
ADDRESS_SPACE_BITS	kernel.h	90;"	d
ADDRESS_SPACE_SIZE	kernel.h	85;"	d
ADDRESS_SPACE_SIZE	kernel.h	91;"	d
ALU0	ooocore-amd-k8.h	284;"	d
ALU0	ooocore.h	291;"	d
ALU0	ooocore.h	95;"	d
ALU1	ooocore-amd-k8.h	285;"	d
ALU1	ooocore-amd-k8.h	96;"	d
ALU1	ooocore.h	292;"	d
ALU1	ooocore.h	96;"	d
ALU2	ooocore-amd-k8.h	97;"	d
ALU3	ooocore-amd-k8.h	98;"	d
ALUC	ooocore-amd-k8.h	99;"	d
AMD_BR_INST_MISPRED	perfctrs.cpp	/^  AMD_BR_INST_MISPRED                         = 0xc3,$/;"	e	enum:__anon69	file:
AMD_BR_INST_RETIRED	perfctrs.cpp	/^  AMD_BR_INST_RETIRED                         = 0xc2,$/;"	e	enum:__anon69	file:
AMD_INST_RETIRED	perfctrs.cpp	/^  AMD_INST_RETIRED                            = 0xc0,$/;"	e	enum:__anon69	file:
AMD_L1D_ACCESSES	perfctrs.cpp	/^  AMD_L1D_ACCESSES                            = 0x40,$/;"	e	enum:__anon69	file:
AMD_L1D_MISSES	perfctrs.cpp	/^  AMD_L1D_MISSES                              = 0x41, \/\/ only counts first miss on an outstanding line$/;"	e	enum:__anon69	file:
AMD_L1_DTLB_AND_L2_DTLB_MISS	perfctrs.cpp	/^  AMD_L1_DTLB_AND_L2_DTLB_MISS                = 0x46, \/\/ relative to L1D_ACCESSES$/;"	e	enum:__anon69	file:
AMD_L1_DTLB_MISS_AND_L2_DTLB_HIT	perfctrs.cpp	/^  AMD_L1_DTLB_MISS_AND_L2_DTLB_HIT            = 0x45, \/\/ relative to L1D_ACCESSES$/;"	e	enum:__anon69	file:
AMD_L2_CACHE_MISS	perfctrs.cpp	/^  AMD_L2_CACHE_MISS                           = 0x7e  \/\/ all misses through L2 (including page walk traffic)$/;"	e	enum:__anon69	file:
AMD_MSR_PERFCTR_BASE	perfctrs.cpp	/^  AMD_MSR_PERFCTR_BASE                        = 0xc0010004,$/;"	e	enum:__anon68	file:
AMD_MSR_PERFEVTSEL_BASE	perfctrs.cpp	/^  AMD_MSR_PERFEVTSEL_BASE                     = 0xc0010000,$/;"	e	enum:__anon68	file:
AMD_UNHALTED_CYCLES	perfctrs.cpp	/^  AMD_UNHALTED_CYCLES                         = 0x76,$/;"	e	enum:__anon69	file:
AMD_UOPS_RETIRED	perfctrs.cpp	/^  AMD_UOPS_RETIRED                            = 0xc1,$/;"	e	enum:__anon69	file:
ANYALU	ooocore-amd-k8.h	294;"	d
ANYALU	ooocore.h	106;"	d
ANYALU	ooocore.h	301;"	d
ANYFPU	ooocore-amd-k8.h	297;"	d
ANYFPU	ooocore.h	109;"	d
ANYFPU	ooocore.h	304;"	d
ANYINT	ooocore-amd-k8.h	298;"	d
ANYINT	ooocore.h	110;"	d
ANYINT	ooocore.h	305;"	d
ANYLDU	ooocore-amd-k8.h	295;"	d
ANYLDU	ooocore.h	107;"	d
ANYLDU	ooocore.h	302;"	d
ANYSTU	ooocore-amd-k8.h	296;"	d
ANYSTU	ooocore.h	108;"	d
ANYSTU	ooocore.h	303;"	d
APR_COUNT	decode.h	/^  APR_rip, APR_zero, APR_COUNT,$/;"	e	enum:__anon139
APR_ah	decode.h	/^  APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh,$/;"	e	enum:__anon139
APR_al	decode.h	/^  APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh,$/;"	e	enum:__anon139
APR_ax	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_bh	decode.h	/^  APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh,$/;"	e	enum:__anon139
APR_bl	decode.h	/^  APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh,$/;"	e	enum:__anon139
APR_bp	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_bpl	decode.h	/^  APR_spl, APR_bpl, APR_sil, APR_dil,$/;"	e	enum:__anon139
APR_bx	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_ch	decode.h	/^  APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh,$/;"	e	enum:__anon139
APR_cl	decode.h	/^  APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh,$/;"	e	enum:__anon139
APR_cs	decode.h	/^  APR_es, APR_cs, APR_ss, APR_ds, APR_fs, APR_gs,$/;"	e	enum:__anon139
APR_cx	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_dh	decode.h	/^  APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh,$/;"	e	enum:__anon139
APR_di	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_dil	decode.h	/^  APR_spl, APR_bpl, APR_sil, APR_dil,$/;"	e	enum:__anon139
APR_dl	decode.h	/^  APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh,$/;"	e	enum:__anon139
APR_ds	decode.h	/^  APR_es, APR_cs, APR_ss, APR_ds, APR_fs, APR_gs,$/;"	e	enum:__anon139
APR_dx	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_eax	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_ebp	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_ebx	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_ecx	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_edi	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_edx	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_es	decode.h	/^  APR_es, APR_cs, APR_ss, APR_ds, APR_fs, APR_gs,$/;"	e	enum:__anon139
APR_esi	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_esp	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_fs	decode.h	/^  APR_es, APR_cs, APR_ss, APR_ds, APR_fs, APR_gs,$/;"	e	enum:__anon139
APR_gs	decode.h	/^  APR_es, APR_cs, APR_ss, APR_ds, APR_fs, APR_gs,$/;"	e	enum:__anon139
APR_r10	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_r10b	decode.h	/^  APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b,$/;"	e	enum:__anon139
APR_r10d	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_r10w	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_r11	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_r11b	decode.h	/^  APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b,$/;"	e	enum:__anon139
APR_r11d	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_r11w	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_r12	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_r12b	decode.h	/^  APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b,$/;"	e	enum:__anon139
APR_r12d	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_r12w	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_r13	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_r13b	decode.h	/^  APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b,$/;"	e	enum:__anon139
APR_r13d	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_r13w	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_r14	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_r14b	decode.h	/^  APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b,$/;"	e	enum:__anon139
APR_r14d	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_r14w	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_r15	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_r15b	decode.h	/^  APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b,$/;"	e	enum:__anon139
APR_r15d	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_r15w	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_r8	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_r8b	decode.h	/^  APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b,$/;"	e	enum:__anon139
APR_r8d	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_r8w	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_r9	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_r9b	decode.h	/^  APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b,$/;"	e	enum:__anon139
APR_r9d	decode.h	/^  APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d,$/;"	e	enum:__anon139
APR_r9w	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_rax	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_rbp	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_rbx	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_rcx	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_rdi	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_rdx	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_rip	decode.h	/^  APR_rip, APR_zero, APR_COUNT,$/;"	e	enum:__anon139
APR_rsi	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_rsp	decode.h	/^  APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15,$/;"	e	enum:__anon139
APR_si	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_sil	decode.h	/^  APR_spl, APR_bpl, APR_sil, APR_dil,$/;"	e	enum:__anon139
APR_sp	decode.h	/^  APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w,$/;"	e	enum:__anon139
APR_spl	decode.h	/^  APR_spl, APR_bpl, APR_sil, APR_dil,$/;"	e	enum:__anon139
APR_ss	decode.h	/^  APR_es, APR_cs, APR_ss, APR_ds, APR_fs, APR_gs,$/;"	e	enum:__anon139
APR_xmm0	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm1	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm10	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm11	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm12	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm13	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm14	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm15	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm2	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm3	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm4	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm5	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm6	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm7	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm8	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_xmm9	decode.h	/^  APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15, $/;"	e	enum:__anon139
APR_zero	decode.h	/^  APR_rip, APR_zero, APR_COUNT,$/;"	e	enum:__anon139
ARCHREG_COUNT	ptlhwdef.h	67;"	d
ARCHREG_INT_BASE	ptlhwdef.h	61;"	d
ARCHREG_NULL	ptlhwdef.h	159;"	d
ARCHREG_SSE_BASE	ptlhwdef.h	62;"	d
ARCH_ENABLE_EXIT_HOOK	kernel.cpp	714;"	d	file:
ARCH_SET_EXIT_HOOK_ADDR	kernel.cpp	715;"	d	file:
ASSIST_CLD	decode.h	/^  ASSIST_CLD,$/;"	e	enum:__anon148
ASSIST_COUNT	decode.h	/^  ASSIST_COUNT,$/;"	e	enum:__anon148
ASSIST_CPUID	decode.h	/^  ASSIST_CPUID,$/;"	e	enum:__anon148
ASSIST_DIV16	decode.h	/^  ASSIST_DIV16,$/;"	e	enum:__anon148
ASSIST_DIV32	decode.h	/^  ASSIST_DIV32,$/;"	e	enum:__anon148
ASSIST_DIV64	decode.h	/^  ASSIST_DIV64,$/;"	e	enum:__anon148
ASSIST_DIV8	decode.h	/^  ASSIST_DIV8,$/;"	e	enum:__anon148
ASSIST_EXEC_PAGE_FAULT	decode.h	/^  ASSIST_EXEC_PAGE_FAULT,$/;"	e	enum:__anon148
ASSIST_FXRSTOR	decode.h	/^  ASSIST_FXRSTOR,$/;"	e	enum:__anon148
ASSIST_FXSAVE	decode.h	/^  ASSIST_FXSAVE,$/;"	e	enum:__anon148
ASSIST_GP_FAULT	decode.h	/^  ASSIST_GP_FAULT,$/;"	e	enum:__anon148
ASSIST_HYPERCALL	decode.h	/^  ASSIST_HYPERCALL,$/;"	e	enum:__anon148
ASSIST_IDIV16	decode.h	/^  ASSIST_IDIV16,$/;"	e	enum:__anon148
ASSIST_IDIV32	decode.h	/^  ASSIST_IDIV32,$/;"	e	enum:__anon148
ASSIST_IDIV64	decode.h	/^  ASSIST_IDIV64,$/;"	e	enum:__anon148
ASSIST_IDIV8	decode.h	/^  ASSIST_IDIV8,$/;"	e	enum:__anon148
ASSIST_INT	decode.h	/^  ASSIST_INT,$/;"	e	enum:__anon148
ASSIST_INVALID_OPCODE	decode.h	/^  ASSIST_INVALID_OPCODE,$/;"	e	enum:__anon148
ASSIST_IOPORT_IN	decode.h	/^  ASSIST_IOPORT_IN,$/;"	e	enum:__anon148
ASSIST_IOPORT_OUT	decode.h	/^  ASSIST_IOPORT_OUT,$/;"	e	enum:__anon148
ASSIST_IRET16	decode.h	/^  ASSIST_IRET16,$/;"	e	enum:__anon148
ASSIST_IRET32	decode.h	/^  ASSIST_IRET32,$/;"	e	enum:__anon148
ASSIST_IRET64	decode.h	/^  ASSIST_IRET64,$/;"	e	enum:__anon148
ASSIST_LDMXCSR	decode.h	/^  ASSIST_LDMXCSR,$/;"	e	enum:__anon148
ASSIST_POPF	decode.h	/^  ASSIST_POPF,$/;"	e	enum:__anon148
ASSIST_PTLCALL	decode.h	/^  ASSIST_PTLCALL,$/;"	e	enum:__anon148
ASSIST_RDMSR	decode.h	/^  ASSIST_RDMSR,$/;"	e	enum:__anon148
ASSIST_RDTSC	decode.h	/^  ASSIST_RDTSC,$/;"	e	enum:__anon148
ASSIST_STD	decode.h	/^  ASSIST_STD,$/;"	e	enum:__anon148
ASSIST_SYSCALL	decode.h	/^  ASSIST_SYSCALL,$/;"	e	enum:__anon148
ASSIST_SYSENTER	decode.h	/^  ASSIST_SYSENTER,$/;"	e	enum:__anon148
ASSIST_WRITE_CR0	decode.h	/^  ASSIST_WRITE_CR0,$/;"	e	enum:__anon148
ASSIST_WRITE_CR2	decode.h	/^  ASSIST_WRITE_CR2,$/;"	e	enum:__anon148
ASSIST_WRITE_CR3	decode.h	/^  ASSIST_WRITE_CR3,$/;"	e	enum:__anon148
ASSIST_WRITE_CR4	decode.h	/^  ASSIST_WRITE_CR4,$/;"	e	enum:__anon148
ASSIST_WRITE_DEBUG_REG	decode.h	/^  ASSIST_WRITE_DEBUG_REG,$/;"	e	enum:__anon148
ASSIST_WRITE_SEGREG	decode.h	/^  ASSIST_WRITE_SEGREG,$/;"	e	enum:__anon148
ASSIST_WRMSR	decode.h	/^  ASSIST_WRMSR,$/;"	e	enum:__anon148
ASSIST_X87_F2XM1	decode.h	/^  ASSIST_X87_F2XM1,$/;"	e	enum:__anon148
ASSIST_X87_FCLEX	decode.h	/^  ASSIST_X87_FCLEX,$/;"	e	enum:__anon148
ASSIST_X87_FCOS	decode.h	/^  ASSIST_X87_FCOS,$/;"	e	enum:__anon148
ASSIST_X87_FINIT	decode.h	/^  ASSIST_X87_FINIT,$/;"	e	enum:__anon148
ASSIST_X87_FLD80	decode.h	/^  ASSIST_X87_FLD80,$/;"	e	enum:__anon148
ASSIST_X87_FPATAN	decode.h	/^  ASSIST_X87_FPATAN,$/;"	e	enum:__anon148
ASSIST_X87_FPREM	decode.h	/^  ASSIST_X87_FPREM,$/;"	e	enum:__anon148
ASSIST_X87_FPREM1	decode.h	/^  ASSIST_X87_FPREM1,$/;"	e	enum:__anon148
ASSIST_X87_FPTAN	decode.h	/^  ASSIST_X87_FPTAN,$/;"	e	enum:__anon148
ASSIST_X87_FRNDINT	decode.h	/^  ASSIST_X87_FRNDINT,$/;"	e	enum:__anon148
ASSIST_X87_FRSTOR	decode.h	/^  ASSIST_X87_FRSTOR,$/;"	e	enum:__anon148
ASSIST_X87_FSAVE	decode.h	/^  ASSIST_X87_FSAVE,$/;"	e	enum:__anon148
ASSIST_X87_FSCALE	decode.h	/^  ASSIST_X87_FSCALE,$/;"	e	enum:__anon148
ASSIST_X87_FSIN	decode.h	/^  ASSIST_X87_FSIN,$/;"	e	enum:__anon148
ASSIST_X87_FSINCOS	decode.h	/^  ASSIST_X87_FSINCOS,$/;"	e	enum:__anon148
ASSIST_X87_FSQRT	decode.h	/^  ASSIST_X87_FSQRT,$/;"	e	enum:__anon148
ASSIST_X87_FSTP80	decode.h	/^  ASSIST_X87_FSTP80,$/;"	e	enum:__anon148
ASSIST_X87_FXAM	decode.h	/^  ASSIST_X87_FXAM,$/;"	e	enum:__anon148
ASSIST_X87_FXTRACT	decode.h	/^  ASSIST_X87_FXTRACT,$/;"	e	enum:__anon148
ASSIST_X87_FYL2X	decode.h	/^  ASSIST_X87_FYL2X,$/;"	e	enum:__anon148
ASSIST_X87_FYL2XP1	decode.h	/^  ASSIST_X87_FYL2XP1,$/;"	e	enum:__anon148
AddScaleOperator	datastore.h	/^  AddScaleOperator(double coeff_): coeff(coeff_) { }; $/;"	f	struct:AddScaleOperator
AddScaleOperator	datastore.h	/^struct AddScaleOperator {$/;"	s
AddrPair	ptlsim.h	/^struct AddrPair {$/;"	s
AddressSizeSpan	mm.cpp	/^  AddressSizeSpan() { }$/;"	f	struct:AddressSizeSpan
AddressSizeSpan	mm.cpp	/^  AddressSizeSpan(void* address, Waddr size) {$/;"	f	struct:AddressSizeSpan
AddressSizeSpan	mm.cpp	/^struct AddressSizeSpan {$/;"	s	file:
AddressSpace	kernel.cpp	/^AddressSpace::AddressSpace() { }$/;"	f	class:AddressSpace
AddressSpace	kernel.h	/^class AddressSpace {$/;"	c
ArchPseudoRegInfo	decode.h	/^struct ArchPseudoRegInfo {$/;"	s
ArrayConstructor	superstl.h	/^  template <typename T, bool> struct ArrayConstructor {$/;"	s	namespace:superstl
ArrayConstructor	superstl.h	/^  template <typename T> struct ArrayConstructor<T, true> {$/;"	s	namespace:superstl
ArrayInitializer	superstl.h	/^  template <typename T, bool> struct ArrayInitializer {$/;"	s	namespace:superstl
ArrayInitializer	superstl.h	/^  template <typename T> struct ArrayInitializer<T, true> {$/;"	s	namespace:superstl
AssociativeArray	logic.h	/^  AssociativeArray() {$/;"	f	struct:AssociativeArray
AssociativeArray	logic.h	/^struct AssociativeArray {$/;"	s
B	decode-sse.cpp	200;"	d	file:
B	decode-sse.cpp	216;"	d	file:
B	decode-sse.cpp	421;"	d	file:
B	decode-sse.cpp	431;"	d	file:
BASEADDR	Makefile	/^BASEADDR = 0$/;"	m
BASEOBJS	Makefile	/^BASEOBJS = superstl.o config.o mathlib.o syscalls.o$/;"	m
BB_CACHE_SIZE	decode.h	/^static const int BB_CACHE_SIZE = 16384;$/;"	v
BB_PTRS_PER_CHUNK	ptlhwdef.h	1372;"	d
BB_PTRS_PER_CHUNK	ptlhwdef.h	1374;"	d
BB_TYPE_ASSIST	ptlhwdef.h	/^enum { BB_TYPE_COND, BB_TYPE_UNCOND, BB_TYPE_INDIR, BB_TYPE_ASSIST, BB_TYPE_COUNT };$/;"	e	enum:__anon137
BB_TYPE_COND	ptlhwdef.h	/^enum { BB_TYPE_COND, BB_TYPE_UNCOND, BB_TYPE_INDIR, BB_TYPE_ASSIST, BB_TYPE_COUNT };$/;"	e	enum:__anon137
BB_TYPE_COUNT	ptlhwdef.h	/^enum { BB_TYPE_COND, BB_TYPE_UNCOND, BB_TYPE_INDIR, BB_TYPE_ASSIST, BB_TYPE_COUNT };$/;"	e	enum:__anon137
BB_TYPE_INDIR	ptlhwdef.h	/^enum { BB_TYPE_COND, BB_TYPE_UNCOND, BB_TYPE_INDIR, BB_TYPE_ASSIST, BB_TYPE_COUNT };$/;"	e	enum:__anon137
BB_TYPE_UNCOND	ptlhwdef.h	/^enum { BB_TYPE_COND, BB_TYPE_UNCOND, BB_TYPE_INDIR, BB_TYPE_ASSIST, BB_TYPE_COUNT };$/;"	e	enum:__anon137
BIG_ROB	ooocore-amd-k8.h	318;"	d
BIG_ROB	ooocore.h	325;"	d
BITS_PER_LONG	xen-types.h	58;"	d
BITS_PER_LONG	xen-types.h	62;"	d
BITS_PER_WORD	superstl.h	1504;"	d
BITS_PER_WORD	superstl.h	2214;"	d
BITS_TO_LONGS	xen-types.h	73;"	d
BITVEC_WORDS	superstl.h	1505;"	d
BITVEC_WORDS	superstl.h	2213;"	d
BRANCH_HINT_CALL	branchpred.h	19;"	d
BRANCH_HINT_COND	branchpred.h	17;"	d
BRANCH_HINT_INDIRECT	branchpred.h	18;"	d
BRANCH_HINT_POP_RAS	ptlhwdef.h	1264;"	d
BRANCH_HINT_PUSH_RAS	ptlhwdef.h	1263;"	d
BRANCH_HINT_RET	branchpred.h	20;"	d
BRANCH_HINT_UNCOND	branchpred.h	16;"	d
BRTYPE_BARRIER	ptlhwdef.h	/^  BRTYPE_BARRIER    = 4,$/;"	e	enum:__anon138
BRTYPE_BRU_IMM32	ptlhwdef.h	/^  BRTYPE_BRU_IMM32  = 1,$/;"	e	enum:__anon138
BRTYPE_BRU_IMM8	ptlhwdef.h	/^  BRTYPE_BRU_IMM8   = 0,$/;"	e	enum:__anon138
BRTYPE_BR_IMM32	ptlhwdef.h	/^  BRTYPE_BR_IMM32   = 3,$/;"	e	enum:__anon138
BRTYPE_BR_IMM8	ptlhwdef.h	/^  BRTYPE_BR_IMM8    = 2,$/;"	e	enum:__anon138
BRTYPE_JMP	ptlhwdef.h	/^  BRTYPE_JMP        = 7$/;"	e	enum:__anon138
BRTYPE_REP	ptlhwdef.h	/^  BRTYPE_REP        = 6,$/;"	e	enum:__anon138
BRTYPE_SPLIT	ptlhwdef.h	/^  BRTYPE_SPLIT      = 5,$/;"	e	enum:__anon138
BTBEntry	branchpred.cpp	/^struct BTBEntry {$/;"	s	file:
BYTES_PER_LONG	xen-types.h	59;"	d
BYTES_PER_LONG	xen-types.h	63;"	d
BackupCacheLine	logic.h	/^  struct BackupCacheLine {$/;"	s	struct:CommitRollbackCache
BasicBlock	ptlhwdef.h	/^struct BasicBlock: public BasicBlockBase {$/;"	s
BasicBlockBase	ptlhwdef.h	/^struct BasicBlockBase {$/;"	s
BasicBlockCache	decode.h	/^  BasicBlockCache(): SelfHashtable<RIPVirtPhys, BasicBlock, BB_CACHE_SIZE, BasicBlockHashtableLinkManager>() { }$/;"	f	struct:BasicBlockCache
BasicBlockCache	decode.h	/^struct BasicBlockCache: public SelfHashtable<RIPVirtPhys, BasicBlock, BB_CACHE_SIZE, BasicBlockHashtableLinkManager> {$/;"	s
BasicBlockChunkList	ptlhwdef.h	/^  BasicBlockChunkList(): ChunkList<BasicBlockPtr, BB_PTRS_PER_CHUNK>() { refcount = 0; }$/;"	f	struct:BasicBlockChunkList
BasicBlockChunkList	ptlhwdef.h	/^  BasicBlockChunkList(W64 mfn): ChunkList<BasicBlockPtr, BB_PTRS_PER_CHUNK>() { this->mfn = mfn; refcount = 0; }$/;"	f	struct:BasicBlockChunkList
BasicBlockChunkList	ptlhwdef.h	/^struct BasicBlockChunkList: public ChunkList<BasicBlockPtr, BB_PTRS_PER_CHUNK> {$/;"	s
BasicBlockChunkListHashtableLinkManager	decode-core.cpp	/^struct BasicBlockChunkListHashtableLinkManager {$/;"	s	file:
BasicBlockHashtableLinkManager	decode.h	/^struct BasicBlockHashtableLinkManager {$/;"	s
BasicBlockPageCache	decode-core.cpp	/^typedef SelfHashtable<W64, BasicBlockChunkList, 16384, BasicBlockChunkListHashtableLinkManager> BasicBlockPageCache;$/;"	t	file:
BasicBlockPtr	ptlhwdef.h	/^typedef shortptr<BasicBlock, W32, PTLSIM_VIRT_BASE> BasicBlockPtr;$/;"	t
BasicBlockPtr	ptlhwdef.h	/^typedef shortptr<BasicBlock> BasicBlockPtr;$/;"	t
BimodalPredictor	branchpred.cpp	/^struct BimodalPredictor {$/;"	s	file:
BitmapAllocator3Level	superstl.h	/^  struct BitmapAllocator3Level {$/;"	s	namespace:superstl
BranchPredictorImplementation	branchpred.cpp	/^struct BranchPredictorImplementation: public CombinedPredictor<65536, 65536, 1, 65536, 16, 1, 1024, 4, 1024> { };$/;"	s	file:
BranchPredictorInterface	branchpred.h	/^  BranchPredictorInterface() { impl = null; }$/;"	f	struct:BranchPredictorInterface
BranchPredictorInterface	branchpred.h	/^struct BranchPredictorInterface {$/;"	s
BranchPredictorUpdateInfo	ooocore-amd-k8.h	/^  struct BranchPredictorUpdateInfo: public PredictorUpdate {$/;"	s	namespace:OutOfOrderModel
BranchPredictorUpdateInfo	ooocore.h	/^  struct BranchPredictorUpdateInfo: public PredictorUpdate {$/;"	s	namespace:OutOfOrderModel
BranchTargetBuffer	branchpred.cpp	/^struct BranchTargetBuffer: public AssociativeArray<W64, BTBEntry, SETCOUNT, WAYCOUNT, 1> { };$/;"	s	file:
CC	Makefile	/^CC = g++$/;"	m
CCC	ptlstats.cpp	1045;"	d	file:
CCC	ptlstats.cpp	1063;"	d	file:
CCLINK	spec2000/eon/Makefile	/^CCLINK = g++ -O3$/;"	m
CF	uopimpl.cpp	105;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -O99 -g -fomit-frame-pointer -march=pentium4 -falign-functions=16$/;"	m
CFLAGS	Makefile	/^CFLAGS = -O99 -g -fomit-frame-pointer -pipe -march=k8 -falign-functions=16 -funroll-loops -funit-at-a-time -minline-all-stringops$/;"	m
CFLAGS32BIT	Makefile	/^CFLAGS32BIT = $(CFLAGS) $/;"	m
CFLAGS32BIT	Makefile	/^CFLAGS32BIT = $(CFLAGS) -m32$/;"	m
CN	mathlib.cpp	503;"	d	file:
COMMAND	spec2000/ammp/Makefile	/^COMMAND = ammp < ammp.in > ammp.out$/;"	m
COMMAND	spec2000/applu/Makefile	/^COMMAND = applu < applu-test.in$/;"	m
COMMAND	spec2000/apsi/Makefile	/^COMMAND = apsi < apsi-test.in$/;"	m
COMMAND	spec2000/art/Makefile	/^COMMAND = art -scanfile c756hel.in -trainfile1 a10.img -trainfile2 hc.img -stride 2 -startx 110 -starty 200 -endx 160 -endy 240 -objects 10 > ref.out$/;"	m
COMMAND	spec2000/bzip2/Makefile	/^COMMAND = bzip2 $(FILENAME) 1$/;"	m
COMMAND	spec2000/crafty/Makefile	/^COMMAND = crafty < crafty.in > crafty.out$/;"	m
COMMAND	spec2000/eon/Makefile	/^COMMAND = eon chair.control.kajiya chair.camera chair.surfaces chair.kajiya.ppm ppm pixels_out.kajiya$/;"	m
COMMAND	spec2000/equake/Makefile	/^COMMAND = equake < inp.in > inp.out$/;"	m
COMMAND	spec2000/facerec/Makefile	/^COMMAND = facerec < ref.in$/;"	m
COMMAND	spec2000/fma3d/Makefile	/^COMMAND = fma3d$/;"	m
COMMAND	spec2000/galgel/Makefile	/^COMMAND = galgel < galgel.in$/;"	m
COMMAND	spec2000/gap/Makefile	/^COMMAND = gap -q -m 192M -l data < data\/test.in$/;"	m
COMMAND	spec2000/gcc/Makefile	/^COMMAND = .\/gcc -quiet integrate.reduced.i -o integrate.S$/;"	m
COMMAND	spec2000/gzip/Makefile	/^COMMAND = gzip $(FILENAME)$/;"	m
COMMAND	spec2000/lucas/Makefile	/^COMMAND = lucas < lucas2.in$/;"	m
COMMAND	spec2000/mcf/Makefile	/^COMMAND = mcf mcf.in$/;"	m
COMMAND	spec2000/mesa/Makefile	/^COMMAND = mesa -frames 1 -meshfile mesa.ref.in -ppmfile mesa.ppm$/;"	m
COMMAND	spec2000/mgrid/Makefile	/^COMMAND = mgrid < mgrid.test.in$/;"	m
COMMAND	spec2000/parser/Makefile	/^COMMAND = parser 2.1.dict -batch < ref.in$/;"	m
COMMAND	spec2000/perlbmk/Makefile	/^COMMAND = perlbmk -I.\/lib splitmail.pl 1 5 19 18 1500$/;"	m
COMMAND	spec2000/sixtrack/Makefile	/^COMMAND = sixtrack fort.2$/;"	m
COMMAND	spec2000/swim/Makefile	/^COMMAND = swim < swim.test.in$/;"	m
COMMAND	spec2000/twolf/Makefile	/^COMMAND = twolf ref$/;"	m
COMMAND	spec2000/vortex/Makefile	/^COMMAND = vortex lendian.raw > lendian.out$/;"	m
COMMAND	spec2000/vpr/Makefile	/^COMMAND = vpr testdata\/net.in testdata\/arch.in placed.out routed.out -nodisp -place_only -init_t 5 -exit_t 0.005 -alpha_t 0.9412 -inner_num 2$/;"	m
COMMAND	spec2000/wupwise/Makefile	/^COMMAND = wupwise < wupwise.in$/;"	m
COMMIT_RESULT_BARRIER	ooocore-amd-k8.h	/^    COMMIT_RESULT_BARRIER = 3,\/\/ barrier; branch to microcode (brp uop)$/;"	e	enum:OutOfOrderModel::__anon40
COMMIT_RESULT_BARRIER	ooocore.h	/^    COMMIT_RESULT_BARRIER = 3,\/\/ barrier; branch to microcode (brp uop)$/;"	e	enum:OutOfOrderModel::__anon4
COMMIT_RESULT_EXCEPTION	ooocore-amd-k8.h	/^    COMMIT_RESULT_EXCEPTION = 2, \/\/ exception$/;"	e	enum:OutOfOrderModel::__anon40
COMMIT_RESULT_EXCEPTION	ooocore.h	/^    COMMIT_RESULT_EXCEPTION = 2, \/\/ exception$/;"	e	enum:OutOfOrderModel::__anon4
COMMIT_RESULT_INTERRUPT	ooocore-amd-k8.h	/^    COMMIT_RESULT_INTERRUPT = 5, \/\/ interrupt pending$/;"	e	enum:OutOfOrderModel::__anon40
COMMIT_RESULT_INTERRUPT	ooocore.h	/^    COMMIT_RESULT_INTERRUPT = 5, \/\/ interrupt pending$/;"	e	enum:OutOfOrderModel::__anon4
COMMIT_RESULT_NONE	ooocore-amd-k8.h	/^    COMMIT_RESULT_NONE = 0,   \/\/ no instructions committed: some uops not ready$/;"	e	enum:OutOfOrderModel::__anon40
COMMIT_RESULT_NONE	ooocore.h	/^    COMMIT_RESULT_NONE = 0,   \/\/ no instructions committed: some uops not ready$/;"	e	enum:OutOfOrderModel::__anon4
COMMIT_RESULT_OK	ooocore-amd-k8.h	/^    COMMIT_RESULT_OK = 1,     \/\/ committed$/;"	e	enum:OutOfOrderModel::__anon40
COMMIT_RESULT_OK	ooocore.h	/^    COMMIT_RESULT_OK = 1,     \/\/ committed$/;"	e	enum:OutOfOrderModel::__anon4
COMMIT_RESULT_SMC	ooocore-amd-k8.h	/^    COMMIT_RESULT_SMC = 4,    \/\/ self modifying code detected$/;"	e	enum:OutOfOrderModel::__anon40
COMMIT_RESULT_SMC	ooocore.h	/^    COMMIT_RESULT_SMC = 4,    \/\/ self modifying code detected$/;"	e	enum:OutOfOrderModel::__anon4
COMMIT_RESULT_STOP	ooocore-amd-k8.h	/^    COMMIT_RESULT_STOP = 6    \/\/ stop processor model (shutdown)$/;"	e	enum:OutOfOrderModel::__anon40
COMMIT_RESULT_STOP	ooocore.h	/^    COMMIT_RESULT_STOP = 6    \/\/ stop processor model (shutdown)$/;"	e	enum:OutOfOrderModel::__anon4
COMMIT_WIDTH	ooocore-amd-k8.h	/^  const int COMMIT_WIDTH = 3;$/;"	v
COMMIT_WIDTH	ooocore.h	/^  const int COMMIT_WIDTH = 4;$/;"	v
COMMON	klibc.cpp	248;"	d	file:
COMMON	klibc.cpp	265;"	d	file:
COMMONCPPFILES	Makefile	/^COMMONCPPFILES = ptlsim.cpp kernel.cpp mm.cpp superstl.cpp ptlhwdef.cpp decode-core.cpp decode-fast.cpp decode-complex.cpp decode-x87.cpp decode-sse.cpp lowlevel-64bit.S lowlevel-32bit.S linkstart.S linkend.S uopimpl.cpp dcache.cpp config.cpp datastore.cpp injectcode.cpp ptlcalls.c cpuid.cpp ptlstats.cpp klibc.cpp glibc.cpp mathlib.cpp syscalls.cpp makeusage.cpp$/;"	m
COMMONINCLUDES	Makefile	/^COMMONINCLUDES = logic.h ptlhwdef.h decode.h seqexec.h dcache.h dcache-amd-k8.h config.h ptlsim.h datastore.h superstl.h globals.h kernel.h mm.h ptlcalls.h loader.h mathlib.h klibc.h syscalls.h ptlxen.h stats.h xen-types.h$/;"	m
COMMONOBJS	Makefile	/^COMMONOBJS = linkstart.o lowlevel-32bit.o ptlsim.o kernel.o mm.o ptlhwdef.o decode-core.o decode-fast.o decode-complex.o decode-x87.o decode-sse.o uopimpl.o seqcore.o datastore.o injectcode-32bit.o $(BASEOBJS) klibc.o ptlsim.dst.o linkend.o$/;"	m
COMMONOBJS	Makefile	/^COMMONOBJS = linkstart.o lowlevel-64bit-xen.o ptlsim.o ptlxen.o ptlxen-memory.o ptlxen-events.o ptlxen-common.o perfctrs.o mm.o superstl.o config.o mathlib.o klibc.o ptlhwdef.o datastore.o decode-core.o decode-fast.o decode-complex.o decode-x87.o decode-sse.o uopimpl.o seqcore.o ptlsim.dst.o linkend.o$/;"	m
COMMONOBJS	Makefile	/^COMMONOBJS = linkstart.o lowlevel-64bit.o ptlsim.o kernel.o mm.o ptlhwdef.o decode-core.o decode-fast.o decode-complex.o decode-x87.o decode-sse.o uopimpl.o datastore.o injectcode-64bit.o seqcore.o $(BASEOBJS) klibc.o ptlsim.dst.o linkend.o$/;"	m
CONCAT64	globals.h	570;"	d
COND_ae	ptlhwdef.h	56;"	d
COND_b	ptlhwdef.h	59;"	d
COND_be	ptlhwdef.h	42;"	d
COND_c	ptlhwdef.h	38;"	d
COND_e	ptlhwdef.h	40;"	d
COND_ge	ptlhwdef.h	57;"	d
COND_l	ptlhwdef.h	48;"	d
COND_le	ptlhwdef.h	50;"	d
COND_nbe	ptlhwdef.h	43;"	d
COND_nc	ptlhwdef.h	39;"	d
COND_ne	ptlhwdef.h	41;"	d
COND_nl	ptlhwdef.h	49;"	d
COND_nle	ptlhwdef.h	51;"	d
COND_no	ptlhwdef.h	37;"	d
COND_np	ptlhwdef.h	47;"	d
COND_ns	ptlhwdef.h	45;"	d
COND_nz	ptlhwdef.h	54;"	d
COND_o	ptlhwdef.h	36;"	d
COND_p	ptlhwdef.h	46;"	d
COND_s	ptlhwdef.h	44;"	d
COND_z	ptlhwdef.h	53;"	d
CONFIG_ONLY	makeusage.cpp	1;"	d	file:
CORRECT	ooocore-amd-k8.h	/^  enum { MISPRED = 0, CORRECT = 1 };$/;"	e	enum:OutOfOrderModel::__anon41
CORRECT	ooocore.h	/^  enum { MISPRED = 0, CORRECT = 1 };$/;"	e	enum:OutOfOrderModel::__anon5
COUNT	ptlxen.h	/^    COUNT = 8,$/;"	e	enum:PageFrameType::__anon110
CPPFILES	Makefile	/^CPPFILES = $(COMMONCPPFILES) $(OOOCPPFILES)$/;"	m
CPPFILES	Makefile	/^CPPFILES = $(COMMONCPPFILES) $(PT2XCPPFILES) $(OOOCPPFILES)$/;"	m
CPT_STATS	ptlsim.cpp	11;"	d	file:
CPT_STATS	ptlsim.cpp	13;"	d	file:
CPUVendorID	cpuid.cpp	/^union CPUVendorID {$/;"	u	file:
CPUVendorID	ptlxen.h	/^union CPUVendorID {$/;"	u
CPU_TYPE_AMD_K8	ptlxen.h	/^  CPU_TYPE_AMD_K8 = 1,$/;"	e	enum:__anon97
CPU_TYPE_COUNT	ptlxen.h	/^  CPU_TYPE_COUNT = 4$/;"	e	enum:__anon97
CPU_TYPE_INTEL_CORE2	ptlxen.h	/^  CPU_TYPE_INTEL_CORE2 = 2,$/;"	e	enum:__anon97
CPU_TYPE_INTEL_PENTIUM4	ptlxen.h	/^  CPU_TYPE_INTEL_PENTIUM4 = 3,$/;"	e	enum:__anon97
CPU_TYPE_UNKNOWN	ptlxen.h	/^  CPU_TYPE_UNKNOWN = 0,$/;"	e	enum:__anon97
CR0	ptlhwdef.h	/^struct CR0 {$/;"	s
CR4	ptlhwdef.h	/^struct CR4 {$/;"	s
CRC32	superstl.h	/^    CRC32() {$/;"	f	struct:superstl::CRC32
CRC32	superstl.h	/^    CRC32(W32 newcrc) {$/;"	f	struct:superstl::CRC32
CRC32	superstl.h	/^  struct CRC32 {$/;"	s	namespace:superstl
CRCCacheIndexingFunction	logic.h	/^struct CRCCacheIndexingFunction {$/;"	s
CSOURCES	spec2000/gcc/Makefile	/^CSOURCES = c-parse.c c-lang.c c-lex.c c-pragma.c c-decl.c \\$/;"	m
CSOURCES	spec2000/gzip/Makefile	/^CSOURCES = bits.c deflate.c gzip.c getopt.c inflate.c lzw.c trees.c unlzh.c unlzw.c unpack.c unzip.c util.c zip.c spec.c$/;"	m
CUTTER	mathlib.cpp	1022;"	d	file:
CacheHierarchy	dcache-amd-k8.h	/^    CacheHierarchy(): lfrq(*this), missbuf(*this) { callback = null; }$/;"	f	struct:CacheSubsystem::CacheHierarchy
CacheHierarchy	dcache-amd-k8.h	/^  struct CacheHierarchy {$/;"	s	namespace:CacheSubsystem
CacheHierarchy	dcache.h	/^    CacheHierarchy(): lfrq(*this), missbuf(*this) { callback = null; }$/;"	f	struct:CacheSubsystem::CacheHierarchy
CacheHierarchy	dcache.h	/^  struct CacheHierarchy {$/;"	s	namespace:CacheSubsystem
CacheInfo	cpuid.cpp	/^union CacheInfo {$/;"	u	file:
CacheLine	dcache-amd-k8.h	/^  struct CacheLine {$/;"	s	namespace:CacheSubsystem
CacheLine	dcache.h	/^  struct CacheLine {$/;"	s	namespace:CacheSubsystem
CacheLineWithValidMask	dcache-amd-k8.h	/^  struct CacheLineWithValidMask {$/;"	s	namespace:CacheSubsystem
CacheLineWithValidMask	dcache.h	/^  struct CacheLineWithValidMask {$/;"	s	namespace:CacheSubsystem
CacheSubsystem	dcache-amd-k8.h	/^namespace CacheSubsystem {$/;"	n
CacheSubsystem	dcache.h	/^namespace CacheSubsystem {$/;"	n
Chunk	superstl.h	/^      Chunk() { link.reset(); freemap++; }$/;"	f	struct:superstl::ChunkList::Chunk
Chunk	superstl.h	/^    struct Chunk {$/;"	s	struct:superstl::ChunkList
ChunkList	superstl.h	/^    ChunkList() { head = null; elemcount = 0; }$/;"	f	struct:superstl::ChunkList
ChunkList	superstl.h	/^  struct ChunkList {$/;"	s	namespace:superstl
ClearList	logic.h	/^  struct ClearList {$/;"	s	struct:LockableCommitRollbackAssociativeArray
Cluster	ooocore-amd-k8.h	/^  struct Cluster {$/;"	s	namespace:OutOfOrderModel
Cluster	ooocore.h	/^  struct Cluster {$/;"	s	namespace:OutOfOrderModel
CombinedPredictor	branchpred.cpp	/^struct CombinedPredictor {$/;"	s	file:
CommitRecord	seqcore.h	/^PrintOperator(CommitRecord);$/;"	v
CommitRecord	seqcore.h	/^struct CommitRecord: public Context {$/;"	s
CommitRollbackCache	logic.h	/^  CommitRollbackCache() {$/;"	f	struct:CommitRollbackCache
CommitRollbackCache	logic.h	/^struct CommitRollbackCache: public LockableCommitRollbackAssociativeArray<T, V, setcount, waycount, linesize, stats> {$/;"	s
CondCodeToFlagRegs	ptlhwdef.h	/^struct CondCodeToFlagRegs {$/;"	s
ConfigurationOption	config.h	/^  ConfigurationOption() { }$/;"	f	struct:ConfigurationOption
ConfigurationOption	config.h	/^  ConfigurationOption(const char* name, const char* description, int type, Waddr offset, int fieldsize = 0) {$/;"	f	struct:ConfigurationOption
ConfigurationOption	config.h	/^struct ConfigurationOption {$/;"	s
ConfigurationParser	config.h	/^  ConfigurationParser() { }$/;"	f	struct:ConfigurationParser
ConfigurationParser	config.h	/^struct ConfigurationParser: public T {$/;"	s
ConfigurationParserBase	config.h	/^  ConfigurationParserBase() { options = null; lastoption = null; }$/;"	f	struct:ConfigurationParserBase
ConfigurationParserBase	config.h	/^struct ConfigurationParserBase {$/;"	s
Context	ptlhwdef.h	/^  Context() { }$/;"	f	struct:Context
Context	ptlhwdef.h	/^struct Context: public ContextBase {$/;"	s
ContextBase	ptlhwdef.h	/^struct ContextBase {$/;"	s
CounterConfig	perfctrs.cpp	/^struct CounterConfig {$/;"	s	file:
CounterPairConfig	perfctrs.cpp	/^struct CounterPairConfig {$/;"	s	file:
CycleTimer	superstl.h	/^    CycleTimer() { total = 0; tstart = 0; iterations = 0; title = "(generic)"; running = 0; }$/;"	f	class:superstl::CycleTimer
CycleTimer	superstl.h	/^    CycleTimer(const char* title) { total = 0; tstart = 0; iterations = 1; this->title = title; running = 0; }$/;"	f	class:superstl::CycleTimer
CycleTimer	superstl.h	/^  class CycleTimer {$/;"	c	namespace:superstl
CycleTimerScope	superstl.h	/^    CycleTimerScope(CycleTimer& ct_): ct(ct_) { ct.start(); }$/;"	f	struct:superstl::CycleTimerScope
CycleTimerScope	superstl.h	/^  struct CycleTimerScope {$/;"	s	namespace:superstl
D	decode-sse.cpp	202;"	d	file:
D	decode-sse.cpp	218;"	d	file:
D	decode-sse.cpp	423;"	d	file:
D	decode-sse.cpp	433;"	d	file:
DATATYPE_COUNT	ptlhwdef.h	/^  DATATYPE_VEC_128BIT, DATATYPE_COUNT$/;"	e	enum:__anon135
DATATYPE_DOUBLE	ptlhwdef.h	/^  DATATYPE_DOUBLE, DATATYPE_VEC_DOUBLE, $/;"	e	enum:__anon135
DATATYPE_FLOAT	ptlhwdef.h	/^  DATATYPE_INT, DATATYPE_FLOAT, DATATYPE_VEC_FLOAT, $/;"	e	enum:__anon135
DATATYPE_INT	ptlhwdef.h	/^  DATATYPE_INT, DATATYPE_FLOAT, DATATYPE_VEC_FLOAT, $/;"	e	enum:__anon135
DATATYPE_VEC_128BIT	ptlhwdef.h	/^  DATATYPE_VEC_128BIT, DATATYPE_COUNT$/;"	e	enum:__anon135
DATATYPE_VEC_16BIT	ptlhwdef.h	/^  DATATYPE_VEC_8BIT, DATATYPE_VEC_16BIT, $/;"	e	enum:__anon135
DATATYPE_VEC_32BIT	ptlhwdef.h	/^  DATATYPE_VEC_32BIT, DATATYPE_VEC_64BIT, $/;"	e	enum:__anon135
DATATYPE_VEC_64BIT	ptlhwdef.h	/^  DATATYPE_VEC_32BIT, DATATYPE_VEC_64BIT, $/;"	e	enum:__anon135
DATATYPE_VEC_8BIT	ptlhwdef.h	/^  DATATYPE_VEC_8BIT, DATATYPE_VEC_16BIT, $/;"	e	enum:__anon135
DATATYPE_VEC_DOUBLE	ptlhwdef.h	/^  DATATYPE_DOUBLE, DATATYPE_VEC_DOUBLE, $/;"	e	enum:__anon135
DATATYPE_VEC_FLOAT	ptlhwdef.h	/^  DATATYPE_INT, DATATYPE_FLOAT, DATATYPE_VEC_FLOAT, $/;"	e	enum:__anon135
DATA_OBJ_TYPE	Makefile	/^DATA_OBJ_TYPE = elf32-i386$/;"	m
DATA_OBJ_TYPE	Makefile	/^DATA_OBJ_TYPE = elf64-x86-64$/;"	m
DCACHE_L1I_LINE_DEADTIME_INTERVAL	dcache-amd-k8.h	98;"	d
DCACHE_L1I_LINE_DEADTIME_INTERVAL	dcache.h	102;"	d
DCACHE_L1I_LINE_DEADTIME_SLOTS	dcache-amd-k8.h	101;"	d
DCACHE_L1I_LINE_DEADTIME_SLOTS	dcache.h	105;"	d
DCACHE_L1I_LINE_HITCOUNT_INTERVAL	dcache-amd-k8.h	99;"	d
DCACHE_L1I_LINE_HITCOUNT_INTERVAL	dcache.h	103;"	d
DCACHE_L1I_LINE_HITCOUNT_SLOTS	dcache-amd-k8.h	102;"	d
DCACHE_L1I_LINE_HITCOUNT_SLOTS	dcache.h	106;"	d
DCACHE_L1I_LINE_LIFETIME_INTERVAL	dcache-amd-k8.h	97;"	d
DCACHE_L1I_LINE_LIFETIME_INTERVAL	dcache.h	101;"	d
DCACHE_L1I_LINE_LIFETIME_SLOTS	dcache-amd-k8.h	100;"	d
DCACHE_L1I_LINE_LIFETIME_SLOTS	dcache.h	104;"	d
DCACHE_L1_LINE_DEADTIME_INTERVAL	dcache-amd-k8.h	91;"	d
DCACHE_L1_LINE_DEADTIME_INTERVAL	dcache.h	95;"	d
DCACHE_L1_LINE_DEADTIME_SLOTS	dcache-amd-k8.h	94;"	d
DCACHE_L1_LINE_DEADTIME_SLOTS	dcache.h	98;"	d
DCACHE_L1_LINE_HITCOUNT_INTERVAL	dcache-amd-k8.h	92;"	d
DCACHE_L1_LINE_HITCOUNT_INTERVAL	dcache.h	96;"	d
DCACHE_L1_LINE_HITCOUNT_SLOTS	dcache-amd-k8.h	95;"	d
DCACHE_L1_LINE_HITCOUNT_SLOTS	dcache.h	99;"	d
DCACHE_L1_LINE_LIFETIME_INTERVAL	dcache-amd-k8.h	90;"	d
DCACHE_L1_LINE_LIFETIME_INTERVAL	dcache.h	94;"	d
DCACHE_L1_LINE_LIFETIME_SLOTS	dcache-amd-k8.h	93;"	d
DCACHE_L1_LINE_LIFETIME_SLOTS	dcache.h	97;"	d
DCACHE_L2_LINE_DEADTIME_INTERVAL	dcache-amd-k8.h	105;"	d
DCACHE_L2_LINE_DEADTIME_INTERVAL	dcache.h	109;"	d
DCACHE_L2_LINE_DEADTIME_SLOTS	dcache-amd-k8.h	108;"	d
DCACHE_L2_LINE_DEADTIME_SLOTS	dcache.h	112;"	d
DCACHE_L2_LINE_HITCOUNT_INTERVAL	dcache-amd-k8.h	106;"	d
DCACHE_L2_LINE_HITCOUNT_INTERVAL	dcache.h	110;"	d
DCACHE_L2_LINE_HITCOUNT_SLOTS	dcache-amd-k8.h	109;"	d
DCACHE_L2_LINE_HITCOUNT_SLOTS	dcache.h	113;"	d
DCACHE_L2_LINE_LIFETIME_INTERVAL	dcache-amd-k8.h	104;"	d
DCACHE_L2_LINE_LIFETIME_INTERVAL	dcache.h	108;"	d
DCACHE_L2_LINE_LIFETIME_SLOTS	dcache-amd-k8.h	107;"	d
DCACHE_L2_LINE_LIFETIME_SLOTS	dcache.h	111;"	d
DCACHE_L3_LINE_DEADTIME_INTERVAL	dcache-amd-k8.h	112;"	d
DCACHE_L3_LINE_DEADTIME_INTERVAL	dcache.h	116;"	d
DCACHE_L3_LINE_DEADTIME_SLOTS	dcache-amd-k8.h	115;"	d
DCACHE_L3_LINE_DEADTIME_SLOTS	dcache.h	119;"	d
DCACHE_L3_LINE_HITCOUNT_INTERVAL	dcache-amd-k8.h	113;"	d
DCACHE_L3_LINE_HITCOUNT_INTERVAL	dcache.h	117;"	d
DCACHE_L3_LINE_HITCOUNT_SLOTS	dcache-amd-k8.h	116;"	d
DCACHE_L3_LINE_HITCOUNT_SLOTS	dcache.h	120;"	d
DCACHE_L3_LINE_LIFETIME_INTERVAL	dcache-amd-k8.h	111;"	d
DCACHE_L3_LINE_LIFETIME_INTERVAL	dcache.h	115;"	d
DCACHE_L3_LINE_LIFETIME_SLOTS	dcache-amd-k8.h	114;"	d
DCACHE_L3_LINE_LIFETIME_SLOTS	dcache.h	118;"	d
DEBUG	ptlmon.cpp	35;"	d	file:
DEBUGREG_SIZE_1	ptlhwdef.h	/^  DEBUGREG_SIZE_1 = 0,$/;"	e	enum:__anon129
DEBUGREG_SIZE_2	ptlhwdef.h	/^  DEBUGREG_SIZE_2 = 1,$/;"	e	enum:__anon129
DEBUGREG_SIZE_4	ptlhwdef.h	/^  DEBUGREG_SIZE_4 = 3,$/;"	e	enum:__anon129
DEBUGREG_SIZE_8	ptlhwdef.h	/^  DEBUGREG_SIZE_8 = 2, $/;"	e	enum:__anon129
DEBUGREG_TYPE_EXEC	ptlhwdef.h	/^  DEBUGREG_TYPE_EXEC = 0,$/;"	e	enum:__anon128
DEBUGREG_TYPE_IO	ptlhwdef.h	/^  DEBUGREG_TYPE_IO = 2,$/;"	e	enum:__anon128
DEBUGREG_TYPE_RW	ptlhwdef.h	/^  DEBUGREG_TYPE_RW = 3,$/;"	e	enum:__anon128
DEBUGREG_TYPE_WRITE	ptlhwdef.h	/^  DEBUGREG_TYPE_WRITE = 1,$/;"	e	enum:__anon128
DECLARE_BITMAP	xen-types.h	75;"	d
DECLARE_STRUCTURES	ooocore.cpp	19;"	d	file:
DECODE	decode-core.cpp	1976;"	d	file:
DECODE	decode.h	256;"	d
DECODE_OUTCOME_ENTRY_PAGE_FAULT	decode.h	/^  DECODE_OUTCOME_ENTRY_PAGE_FAULT   = 1,$/;"	e	enum:__anon146
DECODE_OUTCOME_GP_FAULT	decode.h	/^  DECODE_OUTCOME_GP_FAULT           = 4,$/;"	e	enum:__anon146
DECODE_OUTCOME_INVALID_OPCODE	decode.h	/^  DECODE_OUTCOME_INVALID_OPCODE     = 3,$/;"	e	enum:__anon146
DECODE_OUTCOME_OK	decode.h	/^  DECODE_OUTCOME_OK                 = 0,$/;"	e	enum:__anon146
DECODE_OUTCOME_OVERLAP_PAGE_FAULT	decode.h	/^  DECODE_OUTCOME_OVERLAP_PAGE_FAULT = 2,$/;"	e	enum:__anon146
DECODE_TYPE_ASSIST	decode.h	/^  DECODE_TYPE_FAST, DECODE_TYPE_COMPLEX, DECODE_TYPE_X87, DECODE_TYPE_SSE, DECODE_TYPE_ASSIST, DECODE_TYPE_COUNT,$/;"	e	enum:__anon147
DECODE_TYPE_COMPLEX	decode.h	/^  DECODE_TYPE_FAST, DECODE_TYPE_COMPLEX, DECODE_TYPE_X87, DECODE_TYPE_SSE, DECODE_TYPE_ASSIST, DECODE_TYPE_COUNT,$/;"	e	enum:__anon147
DECODE_TYPE_COUNT	decode.h	/^  DECODE_TYPE_FAST, DECODE_TYPE_COMPLEX, DECODE_TYPE_X87, DECODE_TYPE_SSE, DECODE_TYPE_ASSIST, DECODE_TYPE_COUNT,$/;"	e	enum:__anon147
DECODE_TYPE_FAST	decode.h	/^  DECODE_TYPE_FAST, DECODE_TYPE_COMPLEX, DECODE_TYPE_X87, DECODE_TYPE_SSE, DECODE_TYPE_ASSIST, DECODE_TYPE_COUNT,$/;"	e	enum:__anon147
DECODE_TYPE_SSE	decode.h	/^  DECODE_TYPE_FAST, DECODE_TYPE_COMPLEX, DECODE_TYPE_X87, DECODE_TYPE_SSE, DECODE_TYPE_ASSIST, DECODE_TYPE_COUNT,$/;"	e	enum:__anon147
DECODE_TYPE_X87	decode.h	/^  DECODE_TYPE_FAST, DECODE_TYPE_COMPLEX, DECODE_TYPE_X87, DECODE_TYPE_SSE, DECODE_TYPE_ASSIST, DECODE_TYPE_COUNT,$/;"	e	enum:__anon147
DETERMINISTIC_PHYSADDRS	ptlxen-memory.cpp	346;"	d	file:
DISPATCH_DEADLOCK_COUNTDOWN_CYCLES	ooocore-amd-k8.h	/^  static const int DISPATCH_DEADLOCK_COUNTDOWN_CYCLES = 256;$/;"	v
DISPATCH_DEADLOCK_COUNTDOWN_CYCLES	ooocore.h	/^  static const int DISPATCH_DEADLOCK_COUNTDOWN_CYCLES = 256;$/;"	v
DISPATCH_WIDTH	ooocore-amd-k8.h	/^  const int DISPATCH_WIDTH = 3;$/;"	v
DISPATCH_WIDTH	ooocore.h	/^  const int DISPATCH_WIDTH = 4;$/;"	v
DISTFILES	Makefile	/^DISTFILES = $(CPPFILES) $(INCLUDEFILES) Makefile *.lds dstbuild COPYING README $/;"	m
DIV2	mathlib.cpp	587;"	d	file:
DO_ERROR	ptlxen.cpp	751;"	d	file:
DP	uopimpl.cpp	1068;"	d	file:
DSN_MAGIC_VER_3	datastore.cpp	659;"	d	file:
DS_NODE_TYPE_FLOAT	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING };$/;"	e	enum:DataStoreNode::NodeType
DS_NODE_TYPE_FLOAT	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING, DS_NODE_TYPE_LABELED_HISTOGRAM };$/;"	e	enum:DataStoreNodeTemplate::NodeType
DS_NODE_TYPE_INT	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING };$/;"	e	enum:DataStoreNode::NodeType
DS_NODE_TYPE_INT	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING, DS_NODE_TYPE_LABELED_HISTOGRAM };$/;"	e	enum:DataStoreNodeTemplate::NodeType
DS_NODE_TYPE_LABELED_HISTOGRAM	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING, DS_NODE_TYPE_LABELED_HISTOGRAM };$/;"	e	enum:DataStoreNodeTemplate::NodeType
DS_NODE_TYPE_NODE	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING };$/;"	e	enum:DataStoreNode::NodeType
DS_NODE_TYPE_NODE	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING, DS_NODE_TYPE_LABELED_HISTOGRAM };$/;"	e	enum:DataStoreNodeTemplate::NodeType
DS_NODE_TYPE_NULL	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING };$/;"	e	enum:DataStoreNode::NodeType
DS_NODE_TYPE_NULL	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING, DS_NODE_TYPE_LABELED_HISTOGRAM };$/;"	e	enum:DataStoreNodeTemplate::NodeType
DS_NODE_TYPE_STRING	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING };$/;"	e	enum:DataStoreNode::NodeType
DS_NODE_TYPE_STRING	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING, DS_NODE_TYPE_LABELED_HISTOGRAM };$/;"	e	enum:DataStoreNodeTemplate::NodeType
DTLB	dcache-amd-k8.h	/^  typedef TranslationLookasideBuffer<0, DTLB_SIZE> DTLB;$/;"	t	namespace:CacheSubsystem
DTLB	dcache.h	/^  typedef TranslationLookasideBuffer<0, DTLB_SIZE> DTLB;$/;"	t	namespace:CacheSubsystem
DTLB_SIZE	dcache-amd-k8.h	/^  const int DTLB_SIZE = 32;$/;"	v
DTLB_SIZE	dcache.h	/^  const int DTLB_SIZE = 32;$/;"	v
DataCache	dcache-amd-k8.h	/^  struct DataCache: public AssociativeArray<W64, V, setcount, waycount, linesize, stats> {$/;"	s	namespace:CacheSubsystem
DataCache	dcache.h	/^  struct DataCache: public AssociativeArray<W64, V, setcount, waycount, linesize, stats> {$/;"	s	namespace:CacheSubsystem
DataCacheStats	dcache-amd-k8.h	/^struct DataCacheStats { \/\/ rootnode:$/;"	s
DataCacheStats	dcache.h	/^struct DataCacheStats { \/\/ rootnode:$/;"	s
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode() {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(const char* name) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(const char* name, NodeType type, int count) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(const char* name, W64s value) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(const char* name, const W64s* values, int count, bool histogram) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(const char* name, const char* value) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(const char* name, const char** values, int count) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(const char* name, const double* values, int count) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(const char* name, double data) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.cpp	/^DataStoreNode::DataStoreNode(idstream& is) {$/;"	f	class:DataStoreNode
DataStoreNode	datastore.h	/^struct DataStoreNode {$/;"	s
DataStoreNodeArrayHeader	datastore.cpp	/^struct DataStoreNodeArrayHeader {$/;"	s	file:
DataStoreNodeDirectory	datastore.h	/^typedef dynarray< KeyValuePair<const char*, DataStoreNode*> > DataStoreNodeDirectory;$/;"	t
DataStoreNodeHeader	datastore.cpp	/^struct DataStoreNodeHeader {$/;"	s	file:
DataStoreNodeLinkManager	datastore.h	/^struct DataStoreNodeLinkManager {$/;"	s
DataStoreNodePrintSettings	datastore.h	/^  DataStoreNodePrintSettings() {$/;"	f	struct:DataStoreNodePrintSettings
DataStoreNodePrintSettings	datastore.h	/^struct DataStoreNodePrintSettings {$/;"	s
DataStoreNodeTemplate	datastore.cpp	/^DataStoreNodeTemplate::DataStoreNodeTemplate(const DataStoreNodeTemplate& base, const char* newname) {$/;"	f	class:DataStoreNodeTemplate
DataStoreNodeTemplate	datastore.cpp	/^DataStoreNodeTemplate::DataStoreNodeTemplate(const char* name, int type, int count, const char** labels) {$/;"	f	class:DataStoreNodeTemplate
DataStoreNodeTemplate	datastore.cpp	/^DataStoreNodeTemplate::DataStoreNodeTemplate(idstream& is) {$/;"	f	class:DataStoreNodeTemplate
DataStoreNodeTemplate	datastore.h	/^  DataStoreNodeTemplate() { name = null; labels = null; parent = null; }$/;"	f	struct:DataStoreNodeTemplate
DataStoreNodeTemplate	datastore.h	/^struct DataStoreNodeTemplate: public DataStoreNodeTemplateBase {$/;"	s
DataStoreNodeTemplateBase	datastore.h	/^struct DataStoreNodeTemplateBase {$/;"	s
DataType	datastore.h	/^  union DataType {$/;"	u	struct:DataStoreNode
DebugReg	ptlhwdef.h	/^struct DebugReg {$/;"	s
DeclareOperator	datastore.h	38;"	d
DeclareOperator	datastore.h	55;"	d
DeclareOperator	datastore.h	60;"	d
DeclareOperator	datastore.h	76;"	d
DeclareStringBufToStream	superstl.h	304;"	d
DecodedOperand	decode.h	/^struct DecodedOperand {$/;"	s
DefaultCacheIndexingFunction	logic.h	/^struct DefaultCacheIndexingFunction {$/;"	s
DefaultComparator	superstl.h	/^  struct DefaultComparator {$/;"	s	namespace:superstl
DefineFloatInserter	superstl.h	131;"	d
DefineInserter	superstl.h	145;"	d
DefineIntegerInserter	superstl.h	115;"	d
DefinePTESetField	ptlhwdef.h	575;"	d
DescriptorTablePointer	cpuid.cpp	/^struct DescriptorTablePointer {$/;"	s	file:
DescriptorTablePointer	ptlxen.cpp	/^struct DescriptorTablePointer {$/;"	s	file:
Disassembly	main.s	/^Disassembly of section .fini:$/;"	l
Disassembly	main.s	/^Disassembly of section .init:$/;"	l
Disassembly	main.s	/^Disassembly of section .plt:$/;"	l
Disassembly	main.s	/^Disassembly of section .text:$/;"	l
DoubleToW64	globals.h	/^static inline const W64 DoubleToW64(double x) { union W64orDouble c; c.d = x; return c.w; }$/;"	f
EADD	mathlib.cpp	510;"	d	file:
EFER	ptlhwdef.h	/^struct EFER {$/;"	s
EMULATE_64BIT	uopimpl.cpp	16;"	d	file:
EMULV	mathlib.cpp	527;"	d	file:
ENABLE_CHECKS	ooocore.h	14;"	d
ENABLE_CHECKS	seqcore.cpp	17;"	d	file:
ENABLE_L3_CACHE	dcache.h	60;"	d
ENABLE_LOGGING	ooocore.h	15;"	d
ENABLE_LOGGING	seqcore.cpp	18;"	d	file:
ENABLE_MM_LOGGING	mm.cpp	22;"	d	file:
ENABLE_SMT	ooocore.h	26;"	d
ENFORCE_L1_DCACHE_BANK_CONFLICTS	dcache-amd-k8.h	47;"	d
ESUB	mathlib.cpp	518;"	d	file:
ET_PTLSIM	loader.h	35;"	d
EVENT_ALIGNMENT_FIXUP	ooocore-amd-k8.h	/^    EVENT_ALIGNMENT_FIXUP,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ALIGNMENT_FIXUP	ooocore.h	/^    EVENT_ALIGNMENT_FIXUP,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ALIGNMENT_FIXUP	seqcore.cpp	/^  EVENT_ALIGNMENT_FIXUP,$/;"	e	enum:__anon85	file:
EVENT_ANNUL_EACH_ROB	ooocore-amd-k8.h	/^    EVENT_ANNUL_EACH_ROB,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ANNUL_EACH_ROB	ooocore.h	/^    EVENT_ANNUL_EACH_ROB,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ANNUL_FETCHQ	ooocore-amd-k8.h	/^    EVENT_ANNUL_FETCHQ,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ANNUL_FETCHQ	ooocore.h	/^    EVENT_ANNUL_FETCHQ,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ANNUL_FETCHQ_RAS	ooocore-amd-k8.h	/^    EVENT_ANNUL_FETCHQ_RAS,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ANNUL_FETCHQ_RAS	ooocore.h	/^    EVENT_ANNUL_FETCHQ_RAS,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ANNUL_FLUSH	ooocore-amd-k8.h	/^    EVENT_ANNUL_FLUSH,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ANNUL_FLUSH	ooocore.h	/^    EVENT_ANNUL_FLUSH,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ANNUL_MISSPECULATION	ooocore-amd-k8.h	/^    EVENT_ANNUL_MISSPECULATION,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ANNUL_MISSPECULATION	ooocore.h	/^    EVENT_ANNUL_MISSPECULATION,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ANNUL_NO_FUTURE_UOPS	ooocore-amd-k8.h	/^    EVENT_ANNUL_NO_FUTURE_UOPS,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ANNUL_NO_FUTURE_UOPS	ooocore.h	/^    EVENT_ANNUL_NO_FUTURE_UOPS,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ANNUL_PSEUDOCOMMIT	ooocore-amd-k8.h	/^    EVENT_ANNUL_PSEUDOCOMMIT,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ANNUL_PSEUDOCOMMIT	ooocore.h	/^    EVENT_ANNUL_PSEUDOCOMMIT,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ASSIST	seqcore.cpp	/^  EVENT_ASSIST,$/;"	e	enum:__anon85	file:
EVENT_BRANCH	seqcore.cpp	/^  EVENT_BRANCH,$/;"	e	enum:__anon85	file:
EVENT_BROADCAST	ooocore-amd-k8.h	/^    EVENT_BROADCAST,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_BROADCAST	ooocore.h	/^    EVENT_BROADCAST,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_CLUSTER_NO_CLUSTER	ooocore-amd-k8.h	/^    EVENT_CLUSTER_NO_CLUSTER,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_CLUSTER_NO_CLUSTER	ooocore.h	/^    EVENT_CLUSTER_NO_CLUSTER,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_CLUSTER_OK	ooocore-amd-k8.h	/^    EVENT_CLUSTER_OK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_CLUSTER_OK	ooocore.h	/^    EVENT_CLUSTER_OK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMMIT_ASSIST	ooocore-amd-k8.h	/^    EVENT_COMMIT_ASSIST,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMMIT_ASSIST	ooocore.h	/^    EVENT_COMMIT_ASSIST,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMMIT_EXCEPTION_ACKNOWLEDGED	ooocore-amd-k8.h	/^    EVENT_COMMIT_EXCEPTION_ACKNOWLEDGED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMMIT_EXCEPTION_ACKNOWLEDGED	ooocore.h	/^    EVENT_COMMIT_EXCEPTION_ACKNOWLEDGED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMMIT_EXCEPTION_DETECTED	ooocore-amd-k8.h	/^    EVENT_COMMIT_EXCEPTION_DETECTED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMMIT_EXCEPTION_DETECTED	ooocore.h	/^    EVENT_COMMIT_EXCEPTION_DETECTED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMMIT_FENCE_COMPLETED	ooocore-amd-k8.h	/^    EVENT_COMMIT_FENCE_COMPLETED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMMIT_FENCE_COMPLETED	ooocore.h	/^    EVENT_COMMIT_FENCE_COMPLETED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMMIT_MEM_LOCKED	ooocore-amd-k8.h	/^    EVENT_COMMIT_MEM_LOCKED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMMIT_MEM_LOCKED	ooocore.h	/^    EVENT_COMMIT_MEM_LOCKED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMMIT_OK	ooocore-amd-k8.h	/^    EVENT_COMMIT_OK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMMIT_OK	ooocore.h	/^    EVENT_COMMIT_OK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMMIT_SKIPBLOCK	ooocore-amd-k8.h	/^    EVENT_COMMIT_SKIPBLOCK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMMIT_SKIPBLOCK	ooocore.h	/^    EVENT_COMMIT_SKIPBLOCK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMMIT_SMC_DETECTED	ooocore-amd-k8.h	/^    EVENT_COMMIT_SMC_DETECTED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMMIT_SMC_DETECTED	ooocore.h	/^    EVENT_COMMIT_SMC_DETECTED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COMPLETE	ooocore-amd-k8.h	/^    EVENT_COMPLETE,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_COMPLETE	ooocore.h	/^    EVENT_COMPLETE,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_COUNT	seqcore.cpp	/^  EVENT_COUNT,$/;"	e	enum:__anon85	file:
EVENT_DISPATCH_DEADLOCK	ooocore-amd-k8.h	/^    EVENT_DISPATCH_DEADLOCK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_DISPATCH_DEADLOCK	ooocore.h	/^    EVENT_DISPATCH_DEADLOCK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_DISPATCH_NO_CLUSTER	ooocore-amd-k8.h	/^    EVENT_DISPATCH_NO_CLUSTER,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_DISPATCH_NO_CLUSTER	ooocore.h	/^    EVENT_DISPATCH_NO_CLUSTER,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_DISPATCH_OK	ooocore-amd-k8.h	/^    EVENT_DISPATCH_OK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_DISPATCH_OK	ooocore.h	/^    EVENT_DISPATCH_OK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_EXECUTE_BB	seqcore.cpp	/^  EVENT_EXECUTE_BB,$/;"	e	enum:__anon85	file:
EVENT_FENCE_ISSUED	ooocore-amd-k8.h	/^    EVENT_FENCE_ISSUED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FENCE_ISSUED	ooocore.h	/^    EVENT_FENCE_ISSUED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_ASSIST	ooocore-amd-k8.h	/^    EVENT_FETCH_ASSIST,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_ASSIST	ooocore.h	/^    EVENT_FETCH_ASSIST,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_BOGUS_RIP	ooocore-amd-k8.h	/^    EVENT_FETCH_BOGUS_RIP,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_BOGUS_RIP	ooocore.h	/^    EVENT_FETCH_BOGUS_RIP,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_FETCHQ_FULL	ooocore-amd-k8.h	/^    EVENT_FETCH_FETCHQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_FETCHQ_FULL	ooocore.h	/^    EVENT_FETCH_FETCHQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_ICACHE_MISS	ooocore-amd-k8.h	/^    EVENT_FETCH_ICACHE_MISS,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_ICACHE_MISS	ooocore.h	/^    EVENT_FETCH_ICACHE_MISS,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_ICACHE_WAIT	ooocore-amd-k8.h	/^    EVENT_FETCH_ICACHE_WAIT,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_ICACHE_WAIT	ooocore.h	/^    EVENT_FETCH_ICACHE_WAIT,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_IQ_QUOTA_FULL	ooocore-amd-k8.h	/^    EVENT_FETCH_IQ_QUOTA_FULL,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_IQ_QUOTA_FULL	ooocore.h	/^    EVENT_FETCH_IQ_QUOTA_FULL,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_OK	ooocore-amd-k8.h	/^    EVENT_FETCH_OK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_OK	ooocore.h	/^    EVENT_FETCH_OK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_SPLIT	ooocore-amd-k8.h	/^    EVENT_FETCH_SPLIT,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_SPLIT	ooocore.h	/^    EVENT_FETCH_SPLIT,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_STALLED	ooocore-amd-k8.h	/^    EVENT_FETCH_STALLED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_STALLED	ooocore.h	/^    EVENT_FETCH_STALLED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FETCH_TRANSLATE	ooocore-amd-k8.h	/^    EVENT_FETCH_TRANSLATE,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FETCH_TRANSLATE	ooocore.h	/^    EVENT_FETCH_TRANSLATE,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FORWARD	ooocore-amd-k8.h	/^    EVENT_FORWARD,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FORWARD	ooocore.h	/^    EVENT_FORWARD,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_FRONTEND	ooocore-amd-k8.h	/^    EVENT_FRONTEND,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_FRONTEND	ooocore.h	/^    EVENT_FRONTEND,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_INVALID	ooocore-amd-k8.h	/^    EVENT_INVALID = 0,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_INVALID	ooocore.h	/^    EVENT_INVALID = 0,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_INVALID	seqcore.cpp	/^  EVENT_INVALID = 0,$/;"	e	enum:__anon85	file:
EVENT_ISSUE	seqcore.cpp	/^  EVENT_ISSUE,$/;"	e	enum:__anon85	file:
EVENT_ISSUE_NO_FU	ooocore-amd-k8.h	/^    EVENT_ISSUE_NO_FU,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ISSUE_NO_FU	ooocore.h	/^    EVENT_ISSUE_NO_FU,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_ISSUE_OK	ooocore-amd-k8.h	/^    EVENT_ISSUE_OK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_ISSUE_OK	ooocore.h	/^    EVENT_ISSUE_OK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD	seqcore.cpp	/^  EVENT_LOAD,$/;"	e	enum:__anon85	file:
EVENT_LOAD_ANNUL	seqcore.cpp	/^  EVENT_LOAD_ANNUL,$/;"	e	enum:__anon85	file:
EVENT_LOAD_BANK_CONFLICT	ooocore-amd-k8.h	/^    EVENT_LOAD_BANK_CONFLICT,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_BANK_CONFLICT	ooocore.h	/^    EVENT_LOAD_BANK_CONFLICT,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_EXCEPTION	ooocore-amd-k8.h	/^    EVENT_LOAD_EXCEPTION,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_EXCEPTION	ooocore.h	/^    EVENT_LOAD_EXCEPTION,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_HIGH_ANNULLED	ooocore-amd-k8.h	/^    EVENT_LOAD_HIGH_ANNULLED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_HIGH_ANNULLED	ooocore.h	/^    EVENT_LOAD_HIGH_ANNULLED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_HIT	ooocore-amd-k8.h	/^    EVENT_LOAD_HIT,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_HIT	ooocore.h	/^    EVENT_LOAD_HIT,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_LFRQ_FULL	ooocore-amd-k8.h	/^    EVENT_LOAD_LFRQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_LFRQ_FULL	ooocore.h	/^    EVENT_LOAD_LFRQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_LOCK_ACQUIRED	ooocore-amd-k8.h	/^    EVENT_LOAD_LOCK_ACQUIRED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_LOCK_ACQUIRED	ooocore.h	/^    EVENT_LOAD_LOCK_ACQUIRED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_LOCK_OVERFLOW	ooocore-amd-k8.h	/^    EVENT_LOAD_LOCK_OVERFLOW,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_LOCK_OVERFLOW	ooocore.h	/^    EVENT_LOAD_LOCK_OVERFLOW,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_LOCK_REPLAY	ooocore-amd-k8.h	/^    EVENT_LOAD_LOCK_REPLAY,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_LOCK_REPLAY	ooocore.h	/^    EVENT_LOAD_LOCK_REPLAY,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_MISS	ooocore-amd-k8.h	/^    EVENT_LOAD_MISS,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_MISS	ooocore.h	/^    EVENT_LOAD_MISS,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_STORE_UNALIGNED	seqcore.cpp	/^  EVENT_LOAD_STORE_UNALIGNED,$/;"	e	enum:__anon85	file:
EVENT_LOAD_TLB_MISS	ooocore-amd-k8.h	/^    EVENT_LOAD_TLB_MISS,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_TLB_MISS	ooocore.h	/^    EVENT_LOAD_TLB_MISS,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_WAIT	ooocore-amd-k8.h	/^    EVENT_LOAD_WAIT,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_WAIT	ooocore.h	/^    EVENT_LOAD_WAIT,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_LOAD_WAKEUP	ooocore-amd-k8.h	/^    EVENT_LOAD_WAKEUP,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_LOAD_WAKEUP	ooocore.h	/^    EVENT_LOAD_WAKEUP,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_PTE_UPDATE	seqcore.cpp	/^  EVENT_PTE_UPDATE,$/;"	e	enum:__anon85	file:
EVENT_RECLAIM_PHYSREG	ooocore-amd-k8.h	/^    EVENT_RECLAIM_PHYSREG,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RECLAIM_PHYSREG	ooocore.h	/^    EVENT_RECLAIM_PHYSREG,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_REDISPATCH_DEPENDENTS	ooocore-amd-k8.h	/^    EVENT_REDISPATCH_DEPENDENTS,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_REDISPATCH_DEPENDENTS	ooocore.h	/^    EVENT_REDISPATCH_DEPENDENTS,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_REDISPATCH_DEPENDENTS_DONE	ooocore-amd-k8.h	/^    EVENT_REDISPATCH_DEPENDENTS_DONE,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_REDISPATCH_DEPENDENTS_DONE	ooocore.h	/^    EVENT_REDISPATCH_DEPENDENTS_DONE,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_REDISPATCH_EACH_ROB	ooocore-amd-k8.h	/^    EVENT_REDISPATCH_EACH_ROB,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_REDISPATCH_EACH_ROB	ooocore.h	/^    EVENT_REDISPATCH_EACH_ROB,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_RELEASE_MEM_LOCK	ooocore-amd-k8.h	/^    EVENT_RELEASE_MEM_LOCK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RELEASE_MEM_LOCK	ooocore.h	/^    EVENT_RELEASE_MEM_LOCK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_RENAME_FETCHQ_EMPTY	ooocore-amd-k8.h	/^    EVENT_RENAME_FETCHQ_EMPTY,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RENAME_FETCHQ_EMPTY	ooocore.h	/^    EVENT_RENAME_FETCHQ_EMPTY,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_RENAME_LDQ_FULL	ooocore-amd-k8.h	/^    EVENT_RENAME_LDQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RENAME_LDQ_FULL	ooocore.h	/^    EVENT_RENAME_LDQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_RENAME_MEMQ_FULL	ooocore-amd-k8.h	/^    EVENT_RENAME_MEMQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RENAME_MEMQ_FULL	ooocore.h	/^    EVENT_RENAME_MEMQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_RENAME_OK	ooocore-amd-k8.h	/^    EVENT_RENAME_OK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RENAME_OK	ooocore.h	/^    EVENT_RENAME_OK,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_RENAME_PHYSREGS_FULL	ooocore-amd-k8.h	/^    EVENT_RENAME_PHYSREGS_FULL,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RENAME_PHYSREGS_FULL	ooocore.h	/^    EVENT_RENAME_PHYSREGS_FULL,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_RENAME_ROB_FULL	ooocore-amd-k8.h	/^    EVENT_RENAME_ROB_FULL,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RENAME_ROB_FULL	ooocore.h	/^    EVENT_RENAME_ROB_FULL,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_RENAME_STQ_FULL	ooocore-amd-k8.h	/^    EVENT_RENAME_STQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_RENAME_STQ_FULL	ooocore.h	/^    EVENT_RENAME_STQ_FULL,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_REPLAY	ooocore-amd-k8.h	/^    EVENT_REPLAY,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_REPLAY	ooocore.h	/^    EVENT_REPLAY,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_SKIPBLOCK	seqcore.cpp	/^  EVENT_SKIPBLOCK,$/;"	e	enum:__anon85	file:
EVENT_SMC	seqcore.cpp	/^  EVENT_SMC,$/;"	e	enum:__anon85	file:
EVENT_STORE	seqcore.cpp	/^  EVENT_STORE,$/;"	e	enum:__anon85	file:
EVENT_STORE_ALIASED_LOAD	ooocore-amd-k8.h	/^    EVENT_STORE_ALIASED_LOAD,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_STORE_ALIASED_LOAD	ooocore.h	/^    EVENT_STORE_ALIASED_LOAD,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_STORE_EXCEPTION	ooocore-amd-k8.h	/^    EVENT_STORE_EXCEPTION,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_STORE_EXCEPTION	ooocore.h	/^    EVENT_STORE_EXCEPTION,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_STORE_ISSUED	ooocore-amd-k8.h	/^    EVENT_STORE_ISSUED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_STORE_ISSUED	ooocore.h	/^    EVENT_STORE_ISSUED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_STORE_LOCK_ANNULLED	ooocore-amd-k8.h	/^    EVENT_STORE_LOCK_ANNULLED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_STORE_LOCK_ANNULLED	ooocore.h	/^    EVENT_STORE_LOCK_ANNULLED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_STORE_LOCK_RELEASED	ooocore-amd-k8.h	/^    EVENT_STORE_LOCK_RELEASED,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_STORE_LOCK_RELEASED	ooocore.h	/^    EVENT_STORE_LOCK_RELEASED,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_STORE_LOCK_REPLAY	ooocore-amd-k8.h	/^    EVENT_STORE_LOCK_REPLAY,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_STORE_LOCK_REPLAY	ooocore.h	/^    EVENT_STORE_LOCK_REPLAY,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_STORE_PARALLEL_FORWARDING_MATCH	ooocore-amd-k8.h	/^    EVENT_STORE_PARALLEL_FORWARDING_MATCH,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_STORE_PARALLEL_FORWARDING_MATCH	ooocore.h	/^    EVENT_STORE_PARALLEL_FORWARDING_MATCH,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_STORE_WAIT	ooocore-amd-k8.h	/^    EVENT_STORE_WAIT,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_STORE_WAIT	ooocore.h	/^    EVENT_STORE_WAIT,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_TLBWALK_COMPLETE	ooocore-amd-k8.h	/^    EVENT_TLBWALK_COMPLETE,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_TLBWALK_COMPLETE	ooocore.h	/^    EVENT_TLBWALK_COMPLETE,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_TLBWALK_HIT	ooocore-amd-k8.h	/^    EVENT_TLBWALK_HIT,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_TLBWALK_HIT	ooocore.h	/^    EVENT_TLBWALK_HIT,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_TLBWALK_MISS	ooocore-amd-k8.h	/^    EVENT_TLBWALK_MISS,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_TLBWALK_MISS	ooocore.h	/^    EVENT_TLBWALK_MISS,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_TLBWALK_NO_LFRQ_MB	ooocore-amd-k8.h	/^    EVENT_TLBWALK_NO_LFRQ_MB,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_TLBWALK_NO_LFRQ_MB	ooocore.h	/^    EVENT_TLBWALK_NO_LFRQ_MB,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_TLBWALK_WAKEUP	ooocore-amd-k8.h	/^    EVENT_TLBWALK_WAKEUP,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_TLBWALK_WAKEUP	ooocore.h	/^    EVENT_TLBWALK_WAKEUP,$/;"	e	enum:OutOfOrderModel::__anon6
EVENT_TRANSLATE	seqcore.cpp	/^  EVENT_TRANSLATE,$/;"	e	enum:__anon85	file:
EVENT_WRITEBACK	ooocore-amd-k8.h	/^    EVENT_WRITEBACK,$/;"	e	enum:OutOfOrderModel::__anon42
EVENT_WRITEBACK	ooocore.h	/^    EVENT_WRITEBACK,$/;"	e	enum:OutOfOrderModel::__anon6
EX	mathlib.cpp	1499;"	d	file:
EX	mathlib.cpp	995;"	d	file:
EXCEPTION_BranchMispredict	ptlhwdef.h	/^  EXCEPTION_BranchMispredict,$/;"	e	enum:__anon113
EXCEPTION_COUNT	ptlhwdef.h	/^  EXCEPTION_COUNT$/;"	e	enum:__anon113
EXCEPTION_CheckFailed	ptlhwdef.h	/^  EXCEPTION_CheckFailed,$/;"	e	enum:__anon113
EXCEPTION_DivideOverflow	ptlhwdef.h	/^  EXCEPTION_DivideOverflow,$/;"	e	enum:__anon113
EXCEPTION_FloatingPoint	ptlhwdef.h	/^  EXCEPTION_FloatingPoint,$/;"	e	enum:__anon113
EXCEPTION_FloatingPointNotAvailable	ptlhwdef.h	/^  EXCEPTION_FloatingPointNotAvailable,$/;"	e	enum:__anon113
EXCEPTION_LFRQFull	ptlhwdef.h	/^  EXCEPTION_LFRQFull,$/;"	e	enum:__anon113
EXCEPTION_LoadStoreAliasing	ptlhwdef.h	/^  EXCEPTION_LoadStoreAliasing,$/;"	e	enum:__anon113
EXCEPTION_NoException	ptlhwdef.h	/^  EXCEPTION_NoException = 0,$/;"	e	enum:__anon113
EXCEPTION_PageFaultOnExec	ptlhwdef.h	/^  EXCEPTION_PageFaultOnExec,$/;"	e	enum:__anon113
EXCEPTION_PageFaultOnRead	ptlhwdef.h	/^  EXCEPTION_PageFaultOnRead,$/;"	e	enum:__anon113
EXCEPTION_PageFaultOnWrite	ptlhwdef.h	/^  EXCEPTION_PageFaultOnWrite,$/;"	e	enum:__anon113
EXCEPTION_Propagate	ptlhwdef.h	/^  EXCEPTION_Propagate,$/;"	e	enum:__anon113
EXCEPTION_SkipBlock	ptlhwdef.h	/^  EXCEPTION_SkipBlock,$/;"	e	enum:__anon113
EXCEPTION_StoreStoreAliasing	ptlhwdef.h	/^  EXCEPTION_StoreStoreAliasing,$/;"	e	enum:__anon113
EXCEPTION_UnalignedAccess	ptlhwdef.h	/^  EXCEPTION_UnalignedAccess,$/;"	e	enum:__anon113
EXCEPTION_x86_bounds	ptlhwdef.h	/^  EXCEPTION_x86_bounds          = 5,$/;"	e	enum:__anon124
EXCEPTION_x86_breakpoint	ptlhwdef.h	/^  EXCEPTION_x86_breakpoint      = 3,$/;"	e	enum:__anon124
EXCEPTION_x86_coproc_overrun	ptlhwdef.h	/^  EXCEPTION_x86_coproc_overrun  = 9,$/;"	e	enum:__anon124
EXCEPTION_x86_count	ptlhwdef.h	/^  EXCEPTION_x86_count           = 20,$/;"	e	enum:__anon124
EXCEPTION_x86_debug	ptlhwdef.h	/^  EXCEPTION_x86_debug           = 1,$/;"	e	enum:__anon124
EXCEPTION_x86_divide	ptlhwdef.h	/^  EXCEPTION_x86_divide          = 0,$/;"	e	enum:__anon124
EXCEPTION_x86_double_fault	ptlhwdef.h	/^  EXCEPTION_x86_double_fault    = 8,$/;"	e	enum:__anon124
EXCEPTION_x86_fpu	ptlhwdef.h	/^  EXCEPTION_x86_fpu             = 16,$/;"	e	enum:__anon124
EXCEPTION_x86_fpu_not_avail	ptlhwdef.h	/^  EXCEPTION_x86_fpu_not_avail   = 7,$/;"	e	enum:__anon124
EXCEPTION_x86_gp_fault	ptlhwdef.h	/^  EXCEPTION_x86_gp_fault        = 13,$/;"	e	enum:__anon124
EXCEPTION_x86_invalid_opcode	ptlhwdef.h	/^  EXCEPTION_x86_invalid_opcode  = 6,$/;"	e	enum:__anon124
EXCEPTION_x86_invalid_tss	ptlhwdef.h	/^  EXCEPTION_x86_invalid_tss     = 10,$/;"	e	enum:__anon124
EXCEPTION_x86_machine_check	ptlhwdef.h	/^  EXCEPTION_x86_machine_check   = 18,$/;"	e	enum:__anon124
EXCEPTION_x86_nmi	ptlhwdef.h	/^  EXCEPTION_x86_nmi             = 2,$/;"	e	enum:__anon124
EXCEPTION_x86_overflow	ptlhwdef.h	/^  EXCEPTION_x86_overflow        = 4,$/;"	e	enum:__anon124
EXCEPTION_x86_page_fault	ptlhwdef.h	/^  EXCEPTION_x86_page_fault      = 14,$/;"	e	enum:__anon124
EXCEPTION_x86_seg_not_present	ptlhwdef.h	/^  EXCEPTION_x86_seg_not_present = 11,$/;"	e	enum:__anon124
EXCEPTION_x86_spurious_int	ptlhwdef.h	/^  EXCEPTION_x86_spurious_int    = 15,$/;"	e	enum:__anon124
EXCEPTION_x86_sse	ptlhwdef.h	/^  EXCEPTION_x86_sse             = 19,$/;"	e	enum:__anon124
EXCEPTION_x86_stack_fault	ptlhwdef.h	/^  EXCEPTION_x86_stack_fault     = 12,$/;"	e	enum:__anon124
EXCEPTION_x86_unaligned	ptlhwdef.h	/^  EXCEPTION_x86_unaligned       = 17,$/;"	e	enum:__anon124
EY	mathlib.cpp	1500;"	d	file:
EY	mathlib.cpp	996;"	d	file:
EZ	mathlib.cpp	1501;"	d	file:
EZ	mathlib.cpp	997;"	d	file:
Elf32_auxv_32bit	kernel.cpp	/^struct Elf32_auxv_32bit {$/;"	s	file:
Elf_Ehdr	injectcode.cpp	71;"	d	file:
Elf_Ehdr	injectcode.cpp	76;"	d	file:
Elf_Phdr	injectcode.cpp	72;"	d	file:
Elf_Phdr	injectcode.cpp	77;"	d	file:
EndOfDecode	decode.h	257;"	d
Entry	dcache-amd-k8.h	/^    struct Entry {$/;"	s	struct:CacheSubsystem::MissBuffer
Entry	dcache.h	/^    struct Entry {$/;"	s	struct:CacheSubsystem::MissBuffer
EventLog	ooocore-amd-k8.h	/^    EventLog() { start = null; end = null; tail = null; logfile = null; }$/;"	f	struct:OutOfOrderModel::EventLog
EventLog	ooocore-amd-k8.h	/^  struct EventLog {$/;"	s	namespace:OutOfOrderModel
EventLog	ooocore.h	/^    EventLog() { start = null; end = null; tail = null; logfile = null; }$/;"	f	struct:OutOfOrderModel::EventLog
EventLog	ooocore.h	/^  struct EventLog {$/;"	s	namespace:OutOfOrderModel
EventsInMode	stats.h	/^struct EventsInMode { \/\/ rootnode: summable$/;"	s
ExitCallbacks	superstl.cpp	/^    ExitCallbacks(bool x) { assert(atexit(close_streams) == 0); }$/;"	f	struct:superstl::ExitCallbacks
ExitCallbacks	superstl.cpp	/^  struct ExitCallbacks {$/;"	s	namespace:superstl	file:
ExtentAllocator	mm.cpp	/^struct ExtentAllocator {$/;"	s	file:
F	ooocore-amd-k8.h	282;"	d
F	ooocore.h	289;"	d
FADD	ooocore-amd-k8.h	102;"	d
FCVT	ooocore-amd-k8.h	104;"	d
FETCH_QUEUE_SIZE	ooocore-amd-k8.h	/^  const int FETCH_QUEUE_SIZE = 36;$/;"	v
FETCH_QUEUE_SIZE	ooocore.h	/^  const int FETCH_QUEUE_SIZE = 32;$/;"	v
FETCH_WIDTH	ooocore-amd-k8.h	/^  const int FETCH_WIDTH = 3;$/;"	v
FETCH_WIDTH	ooocore.h	/^  const int FETCH_WIDTH = 4;$/;"	v
FILENAME	spec2000/bzip2/Makefile	/^FILENAME = input.source$/;"	m
FILENAME	spec2000/gzip/Makefile	/^FILENAME = input.source$/;"	m
FLAGS_DEFAULT_ALU	decode.h	56;"	d
FLAG_AC	ptlhwdef.h	/^  FLAG_AC = (1 << 18),$/;"	e	enum:__anon130
FLAG_AF	ptlhwdef.h	27;"	d
FLAG_BR_TK	ptlhwdef.h	31;"	d
FLAG_CF	ptlhwdef.h	23;"	d
FLAG_COUNT	ptlhwdef.h	/^  FLAG_COUNT = 22,$/;"	e	enum:__anon130
FLAG_DF	ptlhwdef.h	/^  FLAG_DF = (1 << 10),$/;"	e	enum:__anon130
FLAG_ID	ptlhwdef.h	/^  FLAG_ID = (1 << 21),$/;"	e	enum:__anon130
FLAG_IF	ptlhwdef.h	/^  FLAG_IF = (1 << 9),$/;"	e	enum:__anon130
FLAG_INV	ptlhwdef.h	24;"	d
FLAG_IOPL	ptlhwdef.h	/^  FLAG_IOPL = (1 << 12) | (1 << 13),$/;"	e	enum:__anon130
FLAG_NOT_WAIT_INV	ptlhwdef.h	34;"	d
FLAG_NT	ptlhwdef.h	/^  FLAG_NT = (1 << 14),$/;"	e	enum:__anon130
FLAG_OF	ptlhwdef.h	30;"	d
FLAG_PF	ptlhwdef.h	25;"	d
FLAG_RF	ptlhwdef.h	/^  FLAG_RF = (1 << 16),$/;"	e	enum:__anon130
FLAG_SF	ptlhwdef.h	29;"	d
FLAG_SF_ZF	ptlhwdef.h	32;"	d
FLAG_TF	ptlhwdef.h	/^  FLAG_TF = (1 << 8),$/;"	e	enum:__anon130
FLAG_VIF	ptlhwdef.h	/^  FLAG_VIF = (1 << 19),$/;"	e	enum:__anon130
FLAG_VIP	ptlhwdef.h	/^  FLAG_VIP = (1 << 20),$/;"	e	enum:__anon130
FLAG_VM	ptlhwdef.h	/^  FLAG_VM = (1 << 17),$/;"	e	enum:__anon130
FLAG_WAIT	ptlhwdef.h	26;"	d
FLAG_ZAPS	ptlhwdef.h	33;"	d
FLAG_ZF	ptlhwdef.h	28;"	d
FMT_LARGE	superstl.h	26;"	d
FMT_LEFT	superstl.h	24;"	d
FMT_PLUS	superstl.h	22;"	d
FMT_SIGN	superstl.h	21;"	d
FMT_SPACE	superstl.h	23;"	d
FMT_SPECIAL	superstl.h	25;"	d
FMT_ZEROPAD	superstl.h	20;"	d
FMUL	ooocore-amd-k8.h	103;"	d
FORCE_DEBUG	dcache-amd-k8.h	/^    static const bool FORCE_DEBUG = 0;$/;"	m	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
FORCE_DEBUG	dcache.h	/^    static const bool FORCE_DEBUG = 0;$/;"	m	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
FPU0	ooocore-amd-k8.h	290;"	d
FPU0	ooocore.h	101;"	d
FPU0	ooocore.h	297;"	d
FPU1	ooocore-amd-k8.h	291;"	d
FPU1	ooocore.h	102;"	d
FPU1	ooocore.h	298;"	d
FP_INFINITE	mathlib.h	/^    FP_INFINITE,$/;"	e	enum:math::__anon26
FP_NAN	mathlib.h	/^    FP_NAN,$/;"	e	enum:math::__anon26
FP_NORMAL	mathlib.h	/^    FP_NORMAL$/;"	e	enum:math::__anon26
FP_STACK_MASK	decode-x87.cpp	14;"	d	file:
FP_SUBNORMAL	mathlib.h	/^    FP_SUBNORMAL,$/;"	e	enum:math::__anon26
FP_ZERO	mathlib.h	/^    FP_ZERO,$/;"	e	enum:math::__anon26
FREE_PAGE_HI_THRESH	mm.cpp	/^  static const int FREE_PAGE_HI_THRESH = 4;$/;"	m	struct:SlabAllocator	file:
FREE_PAGE_LO_THRESH	mm.cpp	/^  static const int FREE_PAGE_LO_THRESH = 1;$/;"	m	struct:SlabAllocator	file:
FRONTEND_STAGES	ooocore-amd-k8.h	/^  const int FRONTEND_STAGES = 7;$/;"	v
FRONTEND_STAGES	ooocore.h	/^  const int FRONTEND_STAGES = 5;$/;"	v
FRONTEND_WIDTH	ooocore-amd-k8.h	/^  const int FRONTEND_WIDTH = 3;$/;"	v
FRONTEND_WIDTH	ooocore.h	/^  const int FRONTEND_WIDTH = 4;$/;"	v
FU_ALU0	ooocore.h	/^    FU_ALU0       = (1 << 4),$/;"	e	enum:OutOfOrderModel::__anon1
FU_ALU1	ooocore-amd-k8.h	/^    FU_ALU1       = (1 << 0),$/;"	e	enum:OutOfOrderModel::__anon37
FU_ALU1	ooocore.h	/^    FU_ALU1       = (1 << 6),$/;"	e	enum:OutOfOrderModel::__anon1
FU_ALU2	ooocore-amd-k8.h	/^    FU_ALU2       = (1 << 2),$/;"	e	enum:OutOfOrderModel::__anon37
FU_ALU3	ooocore-amd-k8.h	/^    FU_ALU3       = (1 << 4),$/;"	e	enum:OutOfOrderModel::__anon37
FU_ALUC	ooocore-amd-k8.h	/^    FU_ALUC       = (1 << 1),$/;"	e	enum:OutOfOrderModel::__anon37
FU_COUNT	ooocore-amd-k8.h	/^  static const int FU_COUNT = 9;$/;"	v
FU_COUNT	ooocore.h	/^  static const int FU_COUNT = 8;$/;"	v
FU_FADD	ooocore-amd-k8.h	/^    FU_FADD       = (1 << 6),$/;"	e	enum:OutOfOrderModel::__anon37
FU_FCVT	ooocore-amd-k8.h	/^    FU_FCVT       = (1 << 8),$/;"	e	enum:OutOfOrderModel::__anon37
FU_FMUL	ooocore-amd-k8.h	/^    FU_FMUL       = (1 << 7),$/;"	e	enum:OutOfOrderModel::__anon37
FU_FPU0	ooocore.h	/^    FU_FPU0       = (1 << 5),$/;"	e	enum:OutOfOrderModel::__anon1
FU_FPU1	ooocore.h	/^    FU_FPU1       = (1 << 7),$/;"	e	enum:OutOfOrderModel::__anon1
FU_LDU0	ooocore.h	/^    FU_LDU0       = (1 << 0),$/;"	e	enum:OutOfOrderModel::__anon1
FU_LDU1	ooocore.h	/^    FU_LDU1       = (1 << 2),$/;"	e	enum:OutOfOrderModel::__anon1
FU_LSU1	ooocore-amd-k8.h	/^    FU_LSU1       = (1 << 3),$/;"	e	enum:OutOfOrderModel::__anon37
FU_LSU2	ooocore-amd-k8.h	/^    FU_LSU2       = (1 << 5),$/;"	e	enum:OutOfOrderModel::__anon37
FU_STU0	ooocore.h	/^    FU_STU0       = (1 << 1),$/;"	e	enum:OutOfOrderModel::__anon1
FU_STU1	ooocore.h	/^    FU_STU1       = (1 << 3),$/;"	e	enum:OutOfOrderModel::__anon1
FXSAVEStruct	ptlhwdef.h	/^struct FXSAVEStruct {$/;"	s
FarJumpDescriptor	injectcode.cpp	/^struct FarJumpDescriptor {$/;"	s	file:
FarJumpDescriptor	kernel.cpp	/^  FarJumpDescriptor() { }$/;"	f	struct:FarJumpDescriptor
FarJumpDescriptor	kernel.cpp	/^  FarJumpDescriptor(void* target) {$/;"	f	struct:FarJumpDescriptor
FarJumpDescriptor	kernel.cpp	/^struct FarJumpDescriptor {$/;"	s	file:
FetchBufferEntry	ooocore-amd-k8.h	/^    FetchBufferEntry() { }$/;"	f	struct:OutOfOrderModel::FetchBufferEntry
FetchBufferEntry	ooocore-amd-k8.h	/^    FetchBufferEntry(const TransOp& transop) {$/;"	f	struct:OutOfOrderModel::FetchBufferEntry
FetchBufferEntry	ooocore-amd-k8.h	/^  struct FetchBufferEntry: public TransOp {$/;"	s	namespace:OutOfOrderModel
FetchBufferEntry	ooocore.h	/^    FetchBufferEntry() { }$/;"	f	struct:OutOfOrderModel::FetchBufferEntry
FetchBufferEntry	ooocore.h	/^    FetchBufferEntry(const TransOp& transop) {$/;"	f	struct:OutOfOrderModel::FetchBufferEntry
FetchBufferEntry	ooocore.h	/^  struct FetchBufferEntry: public TransOp {$/;"	s	namespace:OutOfOrderModel
FixedIntegerQueueSet	superstl.h	/^    FixedIntegerQueueSet() { reset(); }$/;"	f	struct:superstl::FixedIntegerQueueSet
FixedIntegerQueueSet	superstl.h	/^  struct FixedIntegerQueueSet {$/;"	s	namespace:superstl
FixedKeyValueHashtable	superstl.h	/^    FixedKeyValueHashtable() {$/;"	f	struct:superstl::FixedKeyValueHashtable
FixedKeyValueHashtable	superstl.h	/^  struct FixedKeyValueHashtable {$/;"	s	namespace:superstl
FixedQueue	logic.h	/^  FixedQueue() {$/;"	f	struct:FixedQueue
FixedQueue	logic.h	/^struct FixedQueue: public array<T, SIZE> {$/;"	s
FixedValueHashtable	superstl.h	/^    FixedValueHashtable() {$/;"	f	struct:superstl::FixedValueHashtable
FixedValueHashtable	superstl.h	/^  struct FixedValueHashtable {$/;"	s	namespace:superstl
FloatToW32	globals.h	/^static inline const W32 FloatToW32(float x) { union W32orFloat c; c.f = x; return c.w; }$/;"	f
FreeExtent	mm.cpp	/^  struct FreeExtent: public FreeExtentBase {$/;"	s	struct:ExtentAllocator	file:
FreeExtentBase	mm.cpp	/^  struct FreeExtentBase {$/;"	s	struct:ExtentAllocator	file:
FreeObjectHeader	mm.cpp	/^  struct FreeObjectHeader: public selflistlink { };$/;"	s	struct:SlabAllocator	file:
FullyAssociativeArray	logic.h	/^  FullyAssociativeArray() {$/;"	f	struct:FullyAssociativeArray
FullyAssociativeArray	logic.h	/^struct FullyAssociativeArray {$/;"	s
FullyAssociativeTags	logic.h	/^  FullyAssociativeTags() {$/;"	f	struct:FullyAssociativeTags
FullyAssociativeTags	logic.h	/^struct FullyAssociativeTags {$/;"	s
FullyAssociativeTags16bit	logic.h	/^  FullyAssociativeTags16bit() {$/;"	f	struct:FullyAssociativeTags16bit
FullyAssociativeTags16bit	logic.h	/^struct FullyAssociativeTags16bit {$/;"	s
FullyAssociativeTags8bit	logic.h	/^  FullyAssociativeTags8bit() {$/;"	f	struct:FullyAssociativeTags8bit
FullyAssociativeTags8bit	logic.h	/^struct FullyAssociativeTags8bit {$/;"	s
FullyAssociativeTagsNbitOneHot	logic.h	/^  FullyAssociativeTagsNbitOneHot() {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
FullyAssociativeTagsNbitOneHot	logic.h	/^struct FullyAssociativeTagsNbitOneHot {$/;"	s
FunctionalUnitInfo	ooocore-amd-k8.h	/^  struct FunctionalUnitInfo {$/;"	s	namespace:OutOfOrderModel
FunctionalUnitInfo	ooocore.h	/^  struct FunctionalUnitInfo {$/;"	s	namespace:OutOfOrderModel
GCCVER_SPECIFIC	Makefile	/^GCCVER_SPECIFIC =$/;"	m
GENERIC_PERFCTR_BRANCH_MISPREDICT_RATE	perfctrs.cpp	/^  GENERIC_PERFCTR_BRANCH_MISPREDICT_RATE = 5,$/;"	e	enum:__anon60	file:
GENERIC_PERFCTR_COUNT	perfctrs.cpp	/^  GENERIC_PERFCTR_COUNT                  = 6$/;"	e	enum:__anon60	file:
GENERIC_PERFCTR_DTLB_MISS_RATE	perfctrs.cpp	/^  GENERIC_PERFCTR_DTLB_MISS_RATE         = 3,$/;"	e	enum:__anon60	file:
GENERIC_PERFCTR_L1D_MISS_RATE	perfctrs.cpp	/^  GENERIC_PERFCTR_L1D_MISS_RATE          = 1,$/;"	e	enum:__anon60	file:
GENERIC_PERFCTR_L1I_MISS_RATE	perfctrs.cpp	/^  GENERIC_PERFCTR_L1I_MISS_RATE          = 2,$/;"	e	enum:__anon60	file:
GENERIC_PERFCTR_L2_MISS_RATE	perfctrs.cpp	/^  GENERIC_PERFCTR_L2_MISS_RATE           = 4,$/;"	e	enum:__anon60	file:
GENERIC_PERFCTR_UOPS_PER_X86_INSN	perfctrs.cpp	/^  GENERIC_PERFCTR_UOPS_PER_X86_INSN      = 0,$/;"	e	enum:__anon60	file:
GEN_ALLOC_CHUNK_SIZE	mm.cpp	/^static const int GEN_ALLOC_CHUNK_SIZE = 64*1024; \/\/ 64 KB (16 pages)$/;"	v	file:
GEN_ALLOC_GRANULARITY	mm.cpp	/^static const int GEN_ALLOC_GRANULARITY = 64;$/;"	v	file:
GRANULARITY	mm.cpp	/^  static const int GRANULARITY = sizeof(FreeObjectHeader);$/;"	m	struct:SlabAllocator	file:
GUEST_CS32	ptlxen.cpp	/^  GUEST_CS32      = 0xe023, \/\/ ring 3 code, 32-bit$/;"	e	enum:__anon111	file:
GUEST_CS64	ptlxen.cpp	/^  GUEST_CS64      = 0xe033  \/\/ ring 3 code, 64-bit$/;"	e	enum:__anon111	file:
GUEST_DS	ptlxen.cpp	/^  GUEST_DS        = 0xe02b, \/\/ ring 3 data$/;"	e	enum:__anon111	file:
GUEST_KERNEL_RPL	ptlxen.cpp	1059;"	d	file:
GUEST_KERNEL_RPL	ptlxen.cpp	1061;"	d	file:
GenericChunkList	superstl.h	/^    GenericChunkList() {$/;"	f	struct:superstl::GenericChunkList
GenericChunkList	superstl.h	/^  struct GenericChunkList {$/;"	s	namespace:superstl
HI32	globals.h	568;"	d
HIGH_HALF	mathlib.cpp	15;"	d	file:
HYPERVISOR_CS32	ptlxen.cpp	/^  HYPERVISOR_CS32 = 0xe008, \/\/ ring 0 code, 32-bit$/;"	e	enum:__anon111	file:
HYPERVISOR_CS64	ptlxen.cpp	/^  HYPERVISOR_CS64 = 0xe010, \/\/ ring 0 code, 64-bit$/;"	e	enum:__anon111	file:
HYPERVISOR_DS32	ptlxen.cpp	/^  HYPERVISOR_DS32 = 0xe018, \/\/ ring 0 data$/;"	e	enum:__anon111	file:
HYPERVISOR_RESERVED	ptlxen.cpp	/^  HYPERVISOR_RESERVED = 0,$/;"	e	enum:__anon111	file:
HYPERVISOR_callback_op	ptlxen.cpp	/^int HYPERVISOR_callback_op(int cmd, void *arg) {$/;"	f
HYPERVISOR_console_io	ptlxen.cpp	/^int HYPERVISOR_console_io(int cmd, int count, char *str) {$/;"	f
HYPERVISOR_domctl_op	ptlxen.cpp	/^int HYPERVISOR_domctl_op(xen_domctl_t *domctl_op) {$/;"	f
HYPERVISOR_event_channel_op	ptlxen.cpp	/^int HYPERVISOR_event_channel_op(int cmd, void *arg) {$/;"	f
HYPERVISOR_fpu_taskswitch	ptlxen.cpp	/^int HYPERVISOR_fpu_taskswitch(int set) {$/;"	f
HYPERVISOR_get_debugreg	ptlxen.cpp	/^unsigned long HYPERVISOR_get_debugreg(int reg) {$/;"	f
HYPERVISOR_grant_table_op	ptlxen.cpp	/^int HYPERVISOR_grant_table_op(unsigned int cmd, void *uop, unsigned int count) {$/;"	f
HYPERVISOR_memory_op	ptlxen.cpp	/^int HYPERVISOR_memory_op(unsigned int cmd, void *arg) {$/;"	f
HYPERVISOR_mmu_update	ptlxen.cpp	/^int HYPERVISOR_mmu_update(mmu_update_t *req, int count, int *success_count, domid_t domid) {$/;"	f
HYPERVISOR_mmuext_op	ptlxen.cpp	/^int HYPERVISOR_mmuext_op(struct mmuext_op *op, int count, int *success_count, domid_t domid) {$/;"	f
HYPERVISOR_multicall	ptlxen.cpp	/^int HYPERVISOR_multicall(void *call_list, int nr_calls) {$/;"	f
HYPERVISOR_nmi_op	ptlxen.cpp	/^int HYPERVISOR_nmi_op(unsigned long op, void *arg) {$/;"	f
HYPERVISOR_physdev_op	ptlxen.cpp	/^int HYPERVISOR_physdev_op(int cmd, void *arg) {$/;"	f
HYPERVISOR_sched_op	ptlxen.cpp	/^int HYPERVISOR_sched_op(int cmd, void *arg) {$/;"	f
HYPERVISOR_sched_op_compat	ptlxen.cpp	/^int HYPERVISOR_sched_op_compat(int cmd, unsigned long arg) {$/;"	f
HYPERVISOR_set_callbacks	ptlxen.cpp	/^int HYPERVISOR_set_callbacks(unsigned long event_address, unsigned long failsafe_address, unsigned long syscall_address) {$/;"	f
HYPERVISOR_set_debugreg	ptlxen.cpp	/^int HYPERVISOR_set_debugreg(int reg, unsigned long value) {$/;"	f
HYPERVISOR_set_gdt	ptlxen.cpp	/^int HYPERVISOR_set_gdt(unsigned long *frame_list, int entries) {$/;"	f
HYPERVISOR_set_segment_base	ptlxen.cpp	/^int HYPERVISOR_set_segment_base(int reg, unsigned long value) {$/;"	f
HYPERVISOR_set_timer_op	ptlxen.cpp	/^long HYPERVISOR_set_timer_op(u64 abs_nsecs) {$/;"	f
HYPERVISOR_set_trap_table	ptlxen.cpp	/^int HYPERVISOR_set_trap_table(trap_info_t *table) {$/;"	f
HYPERVISOR_stack_switch	ptlxen.cpp	/^int HYPERVISOR_stack_switch(unsigned long ss, unsigned long esp) {$/;"	f
HYPERVISOR_update_descriptor	ptlxen.cpp	/^int HYPERVISOR_update_descriptor(unsigned long ma, unsigned long word) {$/;"	f
HYPERVISOR_update_va_mapping	ptlxen.cpp	/^int HYPERVISOR_update_va_mapping(unsigned long va, pte_t new_val, unsigned long flags) {$/;"	f
HYPERVISOR_update_va_mapping_otherdomain	ptlxen.cpp	/^int HYPERVISOR_update_va_mapping_otherdomain(unsigned long va, pte_t new_val, unsigned long flags, domid_t domid) {$/;"	f
HYPERVISOR_vcpu_op	ptlxen.cpp	/^int HYPERVISOR_vcpu_op(int cmd, int vcpuid, void *extra_args) {$/;"	f
HYPERVISOR_vm_assist	ptlxen.cpp	/^int HYPERVISOR_vm_assist(unsigned int cmd, unsigned int type) {$/;"	f
HYPERVISOR_xen_version	ptlxen.cpp	/^int HYPERVISOR_xen_version(int cmd, void *arg) {$/;"	f
HYPERVISOR_xenoprof_op	ptlxen.cpp	/^int HYPERVISOR_xenoprof_op(int op, void *arg) {$/;"	f
Hashtable	superstl.h	/^  struct Hashtable: public SelfHashtable<K, ObjectHashtableEntry<K, T, KM>, setcount, ObjectHashtableLinkManager<K, T, KM> > {$/;"	s	namespace:superstl
HashtableKeyManager	decode.h	/^  struct HashtableKeyManager<RIPVirtPhys, setcount> {$/;"	s	namespace:superstl
HashtableKeyManager	superstl.h	/^  struct HashtableKeyManager {$/;"	s	namespace:superstl
HashtableKeyManager	superstl.h	/^  struct HashtableKeyManager<W64, setcount> {$/;"	s	namespace:superstl
HashtableKeyManager	superstl.h	/^  struct HashtableKeyManager<const char*, setcount> {$/;"	s	namespace:superstl
HashtableLinkManager	superstl.h	/^  struct HashtableLinkManager {$/;"	s	namespace:superstl
HistogramAssociativeArrayStatisticsCollector	dcache-amd-k8.h	/^    HistogramAssociativeArrayStatisticsCollector() {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
HistogramAssociativeArrayStatisticsCollector	dcache-amd-k8.h	/^  struct HistogramAssociativeArrayStatisticsCollector {$/;"	s	namespace:CacheSubsystem
HistogramAssociativeArrayStatisticsCollector	dcache.h	/^    HistogramAssociativeArrayStatisticsCollector() {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
HistogramAssociativeArrayStatisticsCollector	dcache.h	/^  struct HistogramAssociativeArrayStatisticsCollector {$/;"	s	namespace:CacheSubsystem
HistoryBuffer	logic.h	/^  HistoryBuffer() {$/;"	f	struct:HistoryBuffer
HistoryBuffer	logic.h	/^struct HistoryBuffer: public array<T, size> {$/;"	s
ICACHE_FETCH_GRANULARITY	ooocore-amd-k8.h	/^  static const int ICACHE_FETCH_GRANULARITY = 16;$/;"	v
ICACHE_FETCH_GRANULARITY	ooocore.h	/^  static const int ICACHE_FETCH_GRANULARITY = 16;$/;"	v
IEEE754_DOUBLE_BIAS	mathlib.cpp	3749;"	d	file:
IEEE754_FLOAT_BIAS	mathlib.cpp	3729;"	d	file:
INCFLAGS	Makefile	/^INCFLAGS = -I. -DBUILDHOST="`hostname -f`" -DSVNREV="$(SVNREV)" -DSVNDATE="$(SVNDATE)"$/;"	m
INCLUDEFILES	Makefile	/^INCLUDEFILES = $(COMMONINCLUDES) $(OOOINCLUDES)$/;"	m
INCLUDEFILES	Makefile	/^INCLUDEFILES = $(COMMONINCLUDES) $(PT2XINCLUDES) $(OOOINCLUDES)$/;"	m
INLINED_SYSCALLS	injectcode.cpp	8;"	d	file:
INSIDE_OOOCORE	ooocore.cpp	18;"	d	file:
INSIDE_OOOCORE	oooexec.cpp	18;"	d	file:
INSIDE_OOOCORE	ooopipe.cpp	18;"	d	file:
INTEL_BR_INST_MISPRED	perfctrs.cpp	/^  INTEL_BR_INST_MISPRED                       = 0xc5,$/;"	e	enum:__anon62	file:
INTEL_BR_INST_RETIRED	perfctrs.cpp	/^  INTEL_BR_INST_RETIRED                       = 0xc4,$/;"	e	enum:__anon62	file:
INTEL_INST_RETIRED	perfctrs.cpp	/^  INTEL_INST_RETIRED                          = 0xc0,$/;"	e	enum:__anon62	file:
INTEL_INST_RETIRED_ANY	perfctrs.cpp	/^  INTEL_INST_RETIRED_ANY                      = 0x00,$/;"	e	enum:__anon64	file:
INTEL_INST_RETIRED_LOADS	perfctrs.cpp	/^  INTEL_INST_RETIRED_LOADS                    = 0x01,$/;"	e	enum:__anon64	file:
INTEL_INST_RETIRED_OTHER	perfctrs.cpp	/^  INTEL_INST_RETIRED_OTHER                    = 0x04,$/;"	e	enum:__anon64	file:
INTEL_INST_RETIRED_STORES	perfctrs.cpp	/^  INTEL_INST_RETIRED_STORES                   = 0x02,$/;"	e	enum:__anon64	file:
INTEL_ITLB_MISSES	perfctrs.cpp	/^  INTEL_ITLB_MISSES                           = 0x82,$/;"	e	enum:__anon62	file:
INTEL_L1D_REPL	perfctrs.cpp	/^  INTEL_L1D_REPL                              = 0x45,$/;"	e	enum:__anon62	file:
INTEL_L1I_MISSES	perfctrs.cpp	/^  INTEL_L1I_MISSES                            = 0x81,$/;"	e	enum:__anon62	file:
INTEL_L1I_READS	perfctrs.cpp	/^  INTEL_L1I_READS                             = 0x80,$/;"	e	enum:__anon62	file:
INTEL_L2_REQUESTS	perfctrs.cpp	/^  INTEL_L2_REQUESTS                           = 0x2e,$/;"	e	enum:__anon62	file:
INTEL_L2_REQUESTS_ALL	perfctrs.cpp	/^  INTEL_L2_REQUESTS_ALL                       = 0x4f,$/;"	e	enum:__anon67	file:
INTEL_L2_REQUESTS_MISSES	perfctrs.cpp	/^  INTEL_L2_REQUESTS_MISSES                    = 0x41,$/;"	e	enum:__anon67	file:
INTEL_MEM_LOAD_RETIRED	perfctrs.cpp	/^  INTEL_MEM_LOAD_RETIRED                      = 0xcb,$/;"	e	enum:__anon62	file:
INTEL_MEM_LOAD_RETIRED_DTLB_MISS	perfctrs.cpp	/^  INTEL_MEM_LOAD_RETIRED_DTLB_MISS            = 0x10,$/;"	e	enum:__anon65	file:
INTEL_MEM_LOAD_RETIRED_L1D_LINE_MISS	perfctrs.cpp	/^  INTEL_MEM_LOAD_RETIRED_L1D_LINE_MISS        = 0x02,$/;"	e	enum:__anon65	file:
INTEL_MEM_LOAD_RETIRED_L1D_MISS	perfctrs.cpp	/^  INTEL_MEM_LOAD_RETIRED_L1D_MISS             = 0x01,$/;"	e	enum:__anon65	file:
INTEL_MEM_LOAD_RETIRED_L2_LINE_MISS	perfctrs.cpp	/^  INTEL_MEM_LOAD_RETIRED_L2_LINE_MISS         = 0x08,$/;"	e	enum:__anon65	file:
INTEL_MEM_LOAD_RETIRED_L2_MISS	perfctrs.cpp	/^  INTEL_MEM_LOAD_RETIRED_L2_MISS              = 0x04,$/;"	e	enum:__anon65	file:
INTEL_MSR_PERFCTR_BASE	perfctrs.cpp	/^  INTEL_MSR_PERFCTR_BASE                      = 0xc1,$/;"	e	enum:__anon61	file:
INTEL_MSR_PERFEVTSEL_BASE	perfctrs.cpp	/^  INTEL_MSR_PERFEVTSEL_BASE                   = 0x186,$/;"	e	enum:__anon61	file:
INTEL_UNHALTED_CYCLES	perfctrs.cpp	/^  INTEL_UNHALTED_CYCLES                       = 0x3c,$/;"	e	enum:__anon62	file:
INTEL_UNHALTED_CYCLES_BUS	perfctrs.cpp	/^  INTEL_UNHALTED_CYCLES_BUS                   = 0x02,$/;"	e	enum:__anon63	file:
INTEL_UNHALTED_CYCLES_BUS_OTHER_CORE	perfctrs.cpp	/^  INTEL_UNHALTED_CYCLES_BUS_OTHER_CORE        = 0x04,$/;"	e	enum:__anon63	file:
INTEL_UNHALTED_CYCLES_CORE	perfctrs.cpp	/^  INTEL_UNHALTED_CYCLES_CORE                  = 0x01,$/;"	e	enum:__anon63	file:
INTEL_UOPS_RETIRED	perfctrs.cpp	/^  INTEL_UOPS_RETIRED                          = 0xc2,$/;"	e	enum:__anon62	file:
INTEL_UOPS_RETIRED_ANY	perfctrs.cpp	/^  INTEL_UOPS_RETIRED_ANY                      = 0x0f,$/;"	e	enum:__anon66	file:
INTEL_UOPS_RETIRED_CMP_BR	perfctrs.cpp	/^  INTEL_UOPS_RETIRED_CMP_BR                   = 0x04,$/;"	e	enum:__anon66	file:
INTEL_UOPS_RETIRED_LD_ALU	perfctrs.cpp	/^  INTEL_UOPS_RETIRED_LD_ALU                   = 0x01,$/;"	e	enum:__anon66	file:
INTEL_UOPS_RETIRED_NON_FUSED	perfctrs.cpp	/^  INTEL_UOPS_RETIRED_NON_FUSED                = 0x08,$/;"	e	enum:__anon66	file:
INTEL_UOPS_RETIRED_STD_STA	perfctrs.cpp	/^  INTEL_UOPS_RETIRED_STD_STA                  = 0x02,$/;"	e	enum:__anon66	file:
INT_MAX	xen-types.h	83;"	d
INT_MIN	xen-types.h	87;"	d
INVALID	logic.h	/^  static const T INVALID = InvalidTag<T>::INVALID;$/;"	m	struct:FullyAssociativeTags
INVALID	logic.h	/^  static const T INVALID = InvalidTag<T>::INVALID;$/;"	m	struct:LockableFullyAssociativeTags
INVALID	logic.h	/^template <> struct InvalidTag<W16> { static const W16 INVALID = 0xffff; };$/;"	m	struct:InvalidTag
INVALID	logic.h	/^template <> struct InvalidTag<W32> { static const W32 INVALID = 0xffffffff; };$/;"	m	struct:InvalidTag
INVALID	logic.h	/^template <> struct InvalidTag<W64> { static const W64 INVALID = 0xffffffffffffffffULL; };$/;"	m	struct:InvalidTag
INVALID	logic.h	/^template <> struct InvalidTag<W8> { static const W8 INVALID = 0xff; };$/;"	m	struct:InvalidTag
INVALID	logic.h	/^template <typename T> struct InvalidTag { static const T INVALID; };$/;"	m	struct:InvalidTag
INVALID	ptlhwdef.h	/^  static const Waddr INVALID = 0xfffffff;$/;"	m	struct:RIPVirtPhysBase
INVALID	ptlxen.h	/^    INVALID = 7,$/;"	e	enum:PageFrameType::__anon110
INVALIDATE_REASON_COUNT	decode.h	/^  INVALIDATE_REASON_COUNT$/;"	e	enum:__anon149
INVALIDATE_REASON_DIRTY	decode.h	/^  INVALIDATE_REASON_DIRTY,$/;"	e	enum:__anon149
INVALIDATE_REASON_DMA	decode.h	/^  INVALIDATE_REASON_DMA,$/;"	e	enum:__anon149
INVALIDATE_REASON_EMPTY	decode.h	/^  INVALIDATE_REASON_EMPTY,$/;"	e	enum:__anon149
INVALIDATE_REASON_RECLAIM	decode.h	/^  INVALIDATE_REASON_RECLAIM,$/;"	e	enum:__anon149
INVALIDATE_REASON_SMC	decode.h	/^  INVALIDATE_REASON_SMC = 0,$/;"	e	enum:__anon149
INVALIDATE_REASON_SPURIOUS	decode.h	/^  INVALIDATE_REASON_SPURIOUS,$/;"	e	enum:__anon149
INVALIDRIP	ptlsim.h	125;"	d
INVALID_MFN	ptlxen.h	93;"	d
INVALID_PHYSADDR	kernel.h	/^static const Waddr INVALID_PHYSADDR = 0;$/;"	v
INVALID_PHYSADDR	ptlxen.h	94;"	d
IRETStackFrame	decode-complex.cpp	/^struct IRETStackFrame {$/;"	s	file:
ISSUE_COMPLETED	ooocore-amd-k8.h	/^    ISSUE_COMPLETED = 1,      \/\/ issued correctly$/;"	e	enum:OutOfOrderModel::__anon39
ISSUE_COMPLETED	ooocore.h	/^    ISSUE_COMPLETED = 1,      \/\/ issued correctly$/;"	e	enum:OutOfOrderModel::__anon3
ISSUE_COMPLETED	seqcore.cpp	/^    ISSUE_COMPLETED = 1,$/;"	e	enum:SequentialCore::__anon94	file:
ISSUE_EXCEPTION	seqcore.cpp	/^    ISSUE_EXCEPTION = -1,$/;"	e	enum:SequentialCore::__anon94	file:
ISSUE_MISSPECULATED	ooocore-amd-k8.h	/^    ISSUE_MISSPECULATED = -1, \/\/ mis-speculation: redispatch dependent slice$/;"	e	enum:OutOfOrderModel::__anon39
ISSUE_MISSPECULATED	ooocore.h	/^    ISSUE_MISSPECULATED = -1, \/\/ mis-speculation: redispatch dependent slice$/;"	e	enum:OutOfOrderModel::__anon3
ISSUE_NEEDS_REFETCH	ooocore-amd-k8.h	/^    ISSUE_NEEDS_REFETCH = -2, \/\/ refetch from RIP of bad insn$/;"	e	enum:OutOfOrderModel::__anon39
ISSUE_NEEDS_REFETCH	ooocore.h	/^    ISSUE_NEEDS_REFETCH = -2, \/\/ refetch from RIP of bad insn$/;"	e	enum:OutOfOrderModel::__anon3
ISSUE_NEEDS_REPLAY	ooocore-amd-k8.h	/^    ISSUE_NEEDS_REPLAY = 0,   \/\/ fast scheduling replay$/;"	e	enum:OutOfOrderModel::__anon39
ISSUE_NEEDS_REPLAY	ooocore.h	/^    ISSUE_NEEDS_REPLAY = 0,   \/\/ fast scheduling replay$/;"	e	enum:OutOfOrderModel::__anon3
ISSUE_QUEUE_SIZE	ooocore-amd-k8.h	/^  static const int ISSUE_QUEUE_SIZE = 16;$/;"	v
ISSUE_QUEUE_SIZE	ooocore.h	/^  static const int ISSUE_QUEUE_SIZE = 16;$/;"	v
ISSUE_REFETCH	seqcore.cpp	/^    ISSUE_REFETCH = 0,$/;"	e	enum:SequentialCore::__anon94	file:
ITLB	dcache-amd-k8.h	/^  typedef TranslationLookasideBuffer<1, ITLB_SIZE> ITLB;$/;"	t	namespace:CacheSubsystem
ITLB	dcache.h	/^  typedef TranslationLookasideBuffer<1, ITLB_SIZE> ITLB;$/;"	t	namespace:CacheSubsystem
ITLB_SIZE	dcache-amd-k8.h	/^  const int ITLB_SIZE = 32;$/;"	v
ITLB_SIZE	dcache.h	/^  const int ITLB_SIZE = 32;$/;"	v
InitClusteredROBList	ooocore-amd-k8.h	1341;"	d
InitClusteredROBList	ooocore.h	1359;"	d
InitClusteredROBList	ooocore.h	1365;"	d
InsideSimEscapeCode	kernel.cpp	/^struct InsideSimEscapeCode { $/;"	s	file:
InvalidTag	logic.h	/^template <> struct InvalidTag<W16> { static const W16 INVALID = 0xffff; };$/;"	s
InvalidTag	logic.h	/^template <> struct InvalidTag<W32> { static const W32 INVALID = 0xffffffff; };$/;"	s
InvalidTag	logic.h	/^template <> struct InvalidTag<W64> { static const W64 INVALID = 0xffffffffffffffffULL; };$/;"	s
InvalidTag	logic.h	/^template <> struct InvalidTag<W8> { static const W8 INVALID = 0xff; };$/;"	s
InvalidTag	logic.h	/^template <typename T> struct InvalidTag { static const T INVALID; };$/;"	s
IssueInput	ptlhwdef.h	/^struct IssueInput {$/;"	s
IssueQueue	ooocore-amd-k8.h	/^  struct IssueQueue {$/;"	s	namespace:OutOfOrderModel
IssueQueue	ooocore.h	/^  struct IssueQueue {$/;"	s	namespace:OutOfOrderModel
IssueState	ptlhwdef.h	/^struct IssueState {$/;"	s
Iterator	superstl.h	/^        Iterator() { }$/;"	f	struct:superstl::ChunkList::Chunk::Iterator
Iterator	superstl.h	/^        Iterator(Chunk* chunk_) {$/;"	f	struct:superstl::ChunkList::Chunk::Iterator
Iterator	superstl.h	/^      Iterator() { }$/;"	f	struct:superstl::ChunkList::Iterator
Iterator	superstl.h	/^      Iterator() { }$/;"	f	struct:superstl::GenericChunkList::Iterator
Iterator	superstl.h	/^      Iterator() { }$/;"	f	struct:superstl::Hashtable::Iterator
Iterator	superstl.h	/^      Iterator() { }$/;"	f	struct:superstl::SearchableChunkList16Entry::Iterator
Iterator	superstl.h	/^      Iterator() { }$/;"	f	struct:superstl::SelfHashtable::Iterator
Iterator	superstl.h	/^      Iterator(ChunkList<T, N>* chunklist) {$/;"	f	struct:superstl::ChunkList::Iterator
Iterator	superstl.h	/^      Iterator(GenericChunkList<T>& chunk) { reset(chunk); }$/;"	f	struct:superstl::GenericChunkList::Iterator
Iterator	superstl.h	/^      Iterator(GenericChunkList<T>* chunk) { reset(chunk); }$/;"	f	struct:superstl::GenericChunkList::Iterator
Iterator	superstl.h	/^      Iterator(Hashtable<K, T, setcount, KM>& ht) {$/;"	f	struct:superstl::Hashtable::Iterator
Iterator	superstl.h	/^      Iterator(Hashtable<K, T, setcount, KM>* ht) {$/;"	f	struct:superstl::Hashtable::Iterator
Iterator	superstl.h	/^      Iterator(SelfHashtable<K, T, setcount, LM, KM>& ht) {$/;"	f	struct:superstl::SelfHashtable::Iterator
Iterator	superstl.h	/^      Iterator(SelfHashtable<K, T, setcount, LM, KM>* ht) {$/;"	f	struct:superstl::SelfHashtable::Iterator
Iterator	superstl.h	/^      Iterator(chunk_t& chunk) { reset(chunk); }$/;"	f	struct:superstl::SearchableChunkList16Entry::Iterator
Iterator	superstl.h	/^      Iterator(chunk_t* chunk) { reset(chunk); }$/;"	f	struct:superstl::SearchableChunkList16Entry::Iterator
Iterator	superstl.h	/^      struct Iterator {$/;"	s	struct:superstl::ChunkList::Chunk
Iterator	superstl.h	/^    struct Iterator {$/;"	s	struct:superstl::ChunkList
Iterator	superstl.h	/^    struct Iterator {$/;"	s	struct:superstl::GenericChunkList
Iterator	superstl.h	/^    struct Iterator {$/;"	s	struct:superstl::SearchableChunkList16Entry
Iterator	superstl.h	/^    struct Iterator {$/;"	s	struct:superstl::SelfHashtable
Iterator	superstl.h	/^    struct Iterator: public base_t::Iterator {$/;"	s	struct:superstl::Hashtable
KeyValuePair	superstl.h	/^  struct KeyValuePair {$/;"	s	namespace:superstl
L	ooocore-amd-k8.h	106;"	d
L	ooocore-amd-k8.h	281;"	d
L	ooocore-amd-k8.h	292;"	d
L	ooocore.h	104;"	d
L	ooocore.h	288;"	d
L	ooocore.h	299;"	d
L0_PAGETABLE_MASK	ptlmon.cpp	178;"	d	file:
L0_PAGETABLE_MASK	ptlmon.cpp	198;"	d	file:
L0_PAGETABLE_MASK_PAE	ptlmon.cpp	173;"	d	file:
L0_PAGETABLE_MASK_PAE	ptlmon.cpp	192;"	d	file:
L1	dcache-amd-k8.h	/^      W64 L1;$/;"	m	struct:PerContextDataCacheStats::fetch::hit
L1	dcache-amd-k8.h	/^      W64 L1;$/;"	m	struct:PerContextDataCacheStats::load::hit
L1	dcache-amd-k8.h	/^    L1Cache L1;$/;"	m	struct:CacheSubsystem::CacheHierarchy
L1	dcache.h	/^      W64 L1;$/;"	m	struct:PerContextDataCacheStats::fetch::hit
L1	dcache.h	/^      W64 L1;$/;"	m	struct:PerContextDataCacheStats::load::hit
L1	dcache.h	/^    L1Cache L1;$/;"	m	struct:CacheSubsystem::CacheHierarchy
L1	ptlxen.h	/^    L1 = 1,$/;"	e	enum:PageFrameType::__anon110
L1Cache	dcache-amd-k8.h	/^  struct L1Cache: public DataCache<L1CacheLine, L1_SET_COUNT, L1_WAY_COUNT, L1_LINE_SIZE, L1StatsCollector> {$/;"	s	namespace:CacheSubsystem
L1Cache	dcache.h	/^  struct L1Cache: public DataCache<L1CacheLine, L1_SET_COUNT, L1_WAY_COUNT, L1_LINE_SIZE, L1StatsCollector> {$/;"	s	namespace:CacheSubsystem
L1CacheLine	dcache-amd-k8.h	/^  typedef CacheLineWithValidMask<L1_LINE_SIZE> L1CacheLine;$/;"	t	namespace:CacheSubsystem
L1CacheLine	dcache.h	/^  typedef CacheLineWithValidMask<L1_LINE_SIZE> L1CacheLine;$/;"	t	namespace:CacheSubsystem
L1I	dcache-amd-k8.h	/^    L1ICache L1I;$/;"	m	struct:CacheSubsystem::CacheHierarchy
L1I	dcache.h	/^    L1ICache L1I;$/;"	m	struct:CacheSubsystem::CacheHierarchy
L1ICache	dcache-amd-k8.h	/^  struct L1ICache: public DataCache<L1ICacheLine, L1I_SET_COUNT, L1I_WAY_COUNT, L1I_LINE_SIZE, L1IStatsCollector> {$/;"	s	namespace:CacheSubsystem
L1ICache	dcache.h	/^  struct L1ICache: public DataCache<L1ICacheLine, L1I_SET_COUNT, L1I_WAY_COUNT, L1I_LINE_SIZE, L1IStatsCollector> {$/;"	s	namespace:CacheSubsystem
L1ICacheLine	dcache-amd-k8.h	/^  typedef CacheLine<L1I_LINE_SIZE> L1ICacheLine;$/;"	t	namespace:CacheSubsystem
L1ICacheLine	dcache.h	/^  typedef CacheLine<L1I_LINE_SIZE> L1ICacheLine;$/;"	t	namespace:CacheSubsystem
L1IStatsCollector	dcache-amd-k8.h	/^  struct L1IStatsCollector: public L1IStatsCollectorBase { };$/;"	s	namespace:CacheSubsystem
L1IStatsCollector	dcache-amd-k8.h	/^  typedef NullAssociativeArrayStatisticsCollector<W64, L1ICacheLine> L1IStatsCollector;$/;"	t	namespace:CacheSubsystem
L1IStatsCollector	dcache.h	/^  struct L1IStatsCollector: public L1IStatsCollectorBase { };$/;"	s	namespace:CacheSubsystem
L1IStatsCollector	dcache.h	/^  typedef NullAssociativeArrayStatisticsCollector<W64, L1ICacheLine> L1IStatsCollector;$/;"	t	namespace:CacheSubsystem
L1IStatsCollectorBase	dcache-amd-k8.h	/^    DCACHE_L1I_LINE_HITCOUNT_INTERVAL, DCACHE_L1I_LINE_HITCOUNT_SLOTS> L1IStatsCollectorBase;$/;"	t	namespace:CacheSubsystem
L1IStatsCollectorBase	dcache.h	/^    DCACHE_L1I_LINE_HITCOUNT_INTERVAL, DCACHE_L1I_LINE_HITCOUNT_SLOTS> L1IStatsCollectorBase;$/;"	t	namespace:CacheSubsystem
L1I_LINE_SIZE	dcache-amd-k8.h	/^  const int L1I_LINE_SIZE = 64;$/;"	v
L1I_LINE_SIZE	dcache.h	/^  const int L1I_LINE_SIZE = 64;$/;"	v
L1I_SET_COUNT	dcache-amd-k8.h	/^  const int L1I_SET_COUNT = 512;$/;"	v
L1I_SET_COUNT	dcache.h	/^  const int L1I_SET_COUNT = 128;$/;"	v
L1I_WAY_COUNT	dcache-amd-k8.h	/^  const int L1I_WAY_COUNT = 2;$/;"	v
L1I_WAY_COUNT	dcache.h	/^  const int L1I_WAY_COUNT = 4;$/;"	v
L1StatsCollector	dcache-amd-k8.h	/^  struct L1StatsCollector: public L1StatsCollectorBase { };$/;"	s	namespace:CacheSubsystem
L1StatsCollector	dcache-amd-k8.h	/^  typedef NullAssociativeArrayStatisticsCollector<W64, L1CacheLine> L1StatsCollector;$/;"	t	namespace:CacheSubsystem
L1StatsCollector	dcache.h	/^  struct L1StatsCollector: public L1StatsCollectorBase { };$/;"	s	namespace:CacheSubsystem
L1StatsCollector	dcache.h	/^  typedef NullAssociativeArrayStatisticsCollector<W64, L1CacheLine> L1StatsCollector;$/;"	t	namespace:CacheSubsystem
L1StatsCollectorBase	dcache-amd-k8.h	/^    DCACHE_L1_LINE_HITCOUNT_INTERVAL, DCACHE_L1_LINE_HITCOUNT_SLOTS> L1StatsCollectorBase;$/;"	t	namespace:CacheSubsystem
L1StatsCollectorBase	dcache.h	/^    DCACHE_L1_LINE_HITCOUNT_INTERVAL, DCACHE_L1_LINE_HITCOUNT_SLOTS> L1StatsCollectorBase;$/;"	t	namespace:CacheSubsystem
L1_DCACHE_BANKS	dcache-amd-k8.h	/^  const int L1_DCACHE_BANKS = 8; \/\/ 8 banks x 8 bytes\/bank = 64 bytes\/line$/;"	v
L1_DCACHE_BANKS	dcache.h	/^  const int L1_DCACHE_BANKS = 8; \/\/ 8 banks x 8 bytes\/bank = 64 bytes\/line$/;"	v
L1_LINE_SIZE	dcache-amd-k8.h	/^  const int L1_LINE_SIZE = 64;$/;"	v
L1_LINE_SIZE	dcache.h	/^  const int L1_LINE_SIZE = 64;$/;"	v
L1_PAGETABLE_MASK	ptlmon.cpp	179;"	d	file:
L1_PAGETABLE_MASK	ptlmon.cpp	199;"	d	file:
L1_PAGETABLE_MASK_PAE	ptlmon.cpp	174;"	d	file:
L1_PAGETABLE_MASK_PAE	ptlmon.cpp	193;"	d	file:
L1_PAGETABLE_SHIFT	ptlmon.cpp	170;"	d	file:
L1_PAGETABLE_SHIFT	ptlmon.cpp	189;"	d	file:
L1_PAGETABLE_SHIFT_PAE	ptlmon.cpp	166;"	d	file:
L1_PAGETABLE_SHIFT_PAE	ptlmon.cpp	184;"	d	file:
L1_SET_COUNT	dcache-amd-k8.h	/^  const int L1_SET_COUNT = 512;$/;"	v
L1_SET_COUNT	dcache.h	/^  const int L1_SET_COUNT = 64;$/;"	v
L1_WAY_COUNT	dcache-amd-k8.h	/^  const int L1_WAY_COUNT = 2;$/;"	v
L1_WAY_COUNT	dcache.h	/^  const int L1_WAY_COUNT = 4;$/;"	v
L1_dcache_hit	dcache-amd-k8.h	/^      W64 L1_dcache_hit;$/;"	m	struct:PerContextDataCacheStats::fetch::tlbwalk
L1_dcache_hit	dcache-amd-k8.h	/^      W64 L1_dcache_hit;$/;"	m	struct:PerContextDataCacheStats::load::tlbwalk
L1_dcache_hit	dcache.h	/^      W64 L1_dcache_hit;$/;"	m	struct:PerContextDataCacheStats::fetch::tlbwalk
L1_dcache_hit	dcache.h	/^      W64 L1_dcache_hit;$/;"	m	struct:PerContextDataCacheStats::load::tlbwalk
L1_dcache_miss	dcache-amd-k8.h	/^      W64 L1_dcache_miss;$/;"	m	struct:PerContextDataCacheStats::fetch::tlbwalk
L1_dcache_miss	dcache-amd-k8.h	/^      W64 L1_dcache_miss;$/;"	m	struct:PerContextDataCacheStats::load::tlbwalk
L1_dcache_miss	dcache.h	/^      W64 L1_dcache_miss;$/;"	m	struct:PerContextDataCacheStats::fetch::tlbwalk
L1_dcache_miss	dcache.h	/^      W64 L1_dcache_miss;$/;"	m	struct:PerContextDataCacheStats::load::tlbwalk
L2	dcache-amd-k8.h	/^      W64 L2;$/;"	m	struct:PerContextDataCacheStats::fetch::hit
L2	dcache-amd-k8.h	/^      W64 L2;$/;"	m	struct:PerContextDataCacheStats::load::hit
L2	dcache-amd-k8.h	/^    L2Cache L2;$/;"	m	struct:CacheSubsystem::CacheHierarchy
L2	dcache.h	/^      W64 L2;$/;"	m	struct:PerContextDataCacheStats::fetch::hit
L2	dcache.h	/^      W64 L2;$/;"	m	struct:PerContextDataCacheStats::load::hit
L2	dcache.h	/^    L2Cache L2;$/;"	m	struct:CacheSubsystem::CacheHierarchy
L2	ptlxen.h	/^    L2 = 2,$/;"	e	enum:PageFrameType::__anon110
L2Cache	dcache-amd-k8.h	/^  struct L2Cache: public L2CacheBase {$/;"	s	namespace:CacheSubsystem
L2Cache	dcache.h	/^  struct L2Cache: public L2CacheBase {$/;"	s	namespace:CacheSubsystem
L2CacheBase	dcache-amd-k8.h	/^  typedef DataCache<L2CacheLine, L2_SET_COUNT, L2_WAY_COUNT, L2_LINE_SIZE, L2StatsCollector> L2CacheBase;$/;"	t	namespace:CacheSubsystem
L2CacheBase	dcache.h	/^  typedef DataCache<L2CacheLine, L2_SET_COUNT, L2_WAY_COUNT, L2_LINE_SIZE, L2StatsCollector> L2CacheBase;$/;"	t	namespace:CacheSubsystem
L2CacheInfo	cpuid.cpp	/^union L2CacheInfo {$/;"	u	file:
L2CacheLine	dcache-amd-k8.h	/^  typedef CacheLineWithValidMask<L2_LINE_SIZE> L2CacheLine;$/;"	t	namespace:CacheSubsystem
L2CacheLine	dcache.h	/^  typedef CacheLineWithValidMask<L2_LINE_SIZE> L2CacheLine;$/;"	t	namespace:CacheSubsystem
L2StatsCollector	dcache-amd-k8.h	/^  struct L2StatsCollector: public L2StatsCollectorBase { };$/;"	s	namespace:CacheSubsystem
L2StatsCollector	dcache-amd-k8.h	/^  typedef NullAssociativeArrayStatisticsCollector<W64, L2CacheLine> L2StatsCollector;$/;"	t	namespace:CacheSubsystem
L2StatsCollector	dcache.h	/^  struct L2StatsCollector: public L2StatsCollectorBase { };$/;"	s	namespace:CacheSubsystem
L2StatsCollector	dcache.h	/^  typedef NullAssociativeArrayStatisticsCollector<W64, L2CacheLine> L2StatsCollector;$/;"	t	namespace:CacheSubsystem
L2StatsCollectorBase	dcache-amd-k8.h	/^    DCACHE_L2_LINE_HITCOUNT_INTERVAL, DCACHE_L2_LINE_HITCOUNT_SLOTS> L2StatsCollectorBase;$/;"	t	namespace:CacheSubsystem
L2StatsCollectorBase	dcache.h	/^    DCACHE_L2_LINE_HITCOUNT_INTERVAL, DCACHE_L2_LINE_HITCOUNT_SLOTS> L2StatsCollectorBase;$/;"	t	namespace:CacheSubsystem
L2_L1I_full	dcache-amd-k8.h	/^      W64 L2_L1I_full;$/;"	m	struct:DataCacheStats::load::transfer
L2_L1I_full	dcache.h	/^      W64 L2_L1I_full;$/;"	m	struct:DataCacheStats::load::transfer
L2_LATENCY	dcache-amd-k8.h	/^  const int L2_LATENCY   = 8; \/\/ don't include the extra wakeup cycle (waiting->ready state transition) in the LFRQ$/;"	v
L2_LATENCY	dcache.h	/^  const int L2_LATENCY   = 5; \/\/ don't include the extra wakeup cycle (waiting->ready state transition) in the LFRQ$/;"	v
L2_LINE_SIZE	dcache-amd-k8.h	/^  const int L2_LINE_SIZE = 64;$/;"	v
L2_LINE_SIZE	dcache.h	/^  const int L2_LINE_SIZE = 64;$/;"	v
L2_PAGETABLE_MASK	ptlmon.cpp	180;"	d	file:
L2_PAGETABLE_MASK	ptlmon.cpp	200;"	d	file:
L2_PAGETABLE_MASK_PAE	ptlmon.cpp	175;"	d	file:
L2_PAGETABLE_MASK_PAE	ptlmon.cpp	194;"	d	file:
L2_PAGETABLE_SHIFT	ptlmon.cpp	171;"	d	file:
L2_PAGETABLE_SHIFT	ptlmon.cpp	190;"	d	file:
L2_PAGETABLE_SHIFT_PAE	ptlmon.cpp	167;"	d	file:
L2_PAGETABLE_SHIFT_PAE	ptlmon.cpp	185;"	d	file:
L2_SET_COUNT	dcache-amd-k8.h	/^  const int L2_SET_COUNT = 1024;$/;"	v
L2_SET_COUNT	dcache.h	/^  const int L2_SET_COUNT = 256; \/\/ 256 KB$/;"	v
L2_WAY_COUNT	dcache-amd-k8.h	/^  const int L2_WAY_COUNT = 16;$/;"	v
L2_WAY_COUNT	dcache.h	/^  const int L2_WAY_COUNT = 16;$/;"	v
L2_to_L1D	dcache-amd-k8.h	/^      W64 L2_to_L1D;$/;"	m	struct:DataCacheStats::missbuf::deliver
L2_to_L1D	dcache.h	/^      W64 L2_to_L1D;$/;"	m	struct:DataCacheStats::missbuf::deliver
L2_to_L1I	dcache-amd-k8.h	/^      W64 L2_to_L1I;$/;"	m	struct:DataCacheStats::missbuf::deliver
L2_to_L1I	dcache.h	/^      W64 L2_to_L1I;$/;"	m	struct:DataCacheStats::missbuf::deliver
L2_to_L1_full	dcache-amd-k8.h	/^      W64 L2_to_L1_full;$/;"	m	struct:DataCacheStats::load::transfer
L2_to_L1_full	dcache.h	/^      W64 L2_to_L1_full;$/;"	m	struct:DataCacheStats::load::transfer
L2_to_L1_partial	dcache-amd-k8.h	/^      W64 L2_to_L1_partial;$/;"	m	struct:DataCacheStats::load::transfer
L2_to_L1_partial	dcache.h	/^      W64 L2_to_L1_partial;$/;"	m	struct:DataCacheStats::load::transfer
L2table	branchpred.cpp	/^  array<byte, L2SIZE> L2table;  \/\/ L2 prediction state table$/;"	m	struct:TwoLevelPredictor	file:
L3	dcache-amd-k8.h	/^      W64 L3;$/;"	m	struct:PerContextDataCacheStats::fetch::hit
L3	dcache-amd-k8.h	/^      W64 L3;$/;"	m	struct:PerContextDataCacheStats::load::hit
L3	dcache-amd-k8.h	/^    L3Cache L3;$/;"	m	struct:CacheSubsystem::CacheHierarchy
L3	dcache.h	/^      W64 L3;$/;"	m	struct:PerContextDataCacheStats::fetch::hit
L3	dcache.h	/^      W64 L3;$/;"	m	struct:PerContextDataCacheStats::load::hit
L3	dcache.h	/^    L3Cache L3;$/;"	m	struct:CacheSubsystem::CacheHierarchy
L3	ptlxen.h	/^    L3 = 3,$/;"	e	enum:PageFrameType::__anon110
L3Cache	dcache-amd-k8.h	/^  struct L3Cache: public DataCache<L3CacheLine, L3_SET_COUNT, L3_WAY_COUNT, L3_LINE_SIZE, L3StatsCollector> {$/;"	s	namespace:CacheSubsystem
L3Cache	dcache.h	/^  struct L3Cache: public DataCache<L3CacheLine, L3_SET_COUNT, L3_WAY_COUNT, L3_LINE_SIZE, L3StatsCollector> {$/;"	s	namespace:CacheSubsystem
L3CacheLine	dcache-amd-k8.h	/^  typedef CacheLine<L3_LINE_SIZE> L3CacheLine;$/;"	t	namespace:CacheSubsystem
L3CacheLine	dcache.h	/^  typedef CacheLine<L3_LINE_SIZE> L3CacheLine;$/;"	t	namespace:CacheSubsystem
L3StatsCollector	dcache-amd-k8.h	/^  struct L3StatsCollector: public L3StatsCollectorBase { };$/;"	s	namespace:CacheSubsystem
L3StatsCollector	dcache-amd-k8.h	/^  typedef NullAssociativeArrayStatisticsCollector<W64, L3CacheLine> L3StatsCollector;$/;"	t	namespace:CacheSubsystem
L3StatsCollector	dcache.h	/^  struct L3StatsCollector: public L3StatsCollectorBase { };$/;"	s	namespace:CacheSubsystem
L3StatsCollector	dcache.h	/^  typedef NullAssociativeArrayStatisticsCollector<W64, L3CacheLine> L3StatsCollector;$/;"	t	namespace:CacheSubsystem
L3StatsCollectorBase	dcache-amd-k8.h	/^    DCACHE_L3_LINE_HITCOUNT_INTERVAL, DCACHE_L3_LINE_HITCOUNT_SLOTS> L3StatsCollectorBase;$/;"	t	namespace:CacheSubsystem
L3StatsCollectorBase	dcache.h	/^    DCACHE_L3_LINE_HITCOUNT_INTERVAL, DCACHE_L3_LINE_HITCOUNT_SLOTS> L3StatsCollectorBase;$/;"	t	namespace:CacheSubsystem
L3_LATENCY	dcache-amd-k8.h	/^  const int L3_LATENCY   = 12;$/;"	v
L3_LATENCY	dcache.h	/^  const int L3_LATENCY   = 8; \/\/ Core 2 Duo 2.0 GHz has 14 cycle total L2 latency$/;"	v
L3_LINE_SIZE	dcache-amd-k8.h	/^  const int L3_LINE_SIZE = 128;$/;"	v
L3_LINE_SIZE	dcache.h	/^  const int L3_LINE_SIZE = 64;$/;"	v
L3_PAGETABLE_MASK_PAE	ptlmon.cpp	176;"	d	file:
L3_PAGETABLE_MASK_PAE	ptlmon.cpp	195;"	d	file:
L3_PAGETABLE_SHIFT_PAE	ptlmon.cpp	168;"	d	file:
L3_PAGETABLE_SHIFT_PAE	ptlmon.cpp	186;"	d	file:
L3_SET_COUNT	dcache-amd-k8.h	/^  const int L3_SET_COUNT = 1024;$/;"	v
L3_SET_COUNT	dcache.h	/^  const int L3_SET_COUNT = 2048;$/;"	v
L3_WAY_COUNT	dcache-amd-k8.h	/^  const int L3_WAY_COUNT = 16;$/;"	v
L3_WAY_COUNT	dcache.h	/^  const int L3_WAY_COUNT = 32;$/;"	v
L3_to_L2	dcache-amd-k8.h	/^      W64 L3_to_L2;$/;"	m	struct:DataCacheStats::missbuf::deliver
L3_to_L2	dcache.h	/^      W64 L3_to_L2;$/;"	m	struct:DataCacheStats::missbuf::deliver
L4	ptlxen.h	/^    L4 = 4,$/;"	e	enum:PageFrameType::__anon110
L4_PAGETABLE_MASK_PAE	ptlmon.cpp	196;"	d	file:
L4_PAGETABLE_SHIFT_PAE	ptlmon.cpp	187;"	d	file:
LARGE	klibc.cpp	1320;"	d	file:
LCG	superstl.cpp	803;"	d	file:
LCG	superstl.cpp	807;"	d	file:
LDQ_SIZE	ooocore-amd-k8.h	/^  const int LDQ_SIZE = 44;$/;"	v
LDQ_SIZE	ooocore.h	/^  const int LDQ_SIZE = 48;$/;"	v
LDST_ALIGN_HI	ptlhwdef.h	/^enum { LDST_ALIGN_NORMAL, LDST_ALIGN_LO, LDST_ALIGN_HI };$/;"	e	enum:__anon136
LDST_ALIGN_LO	ptlhwdef.h	/^enum { LDST_ALIGN_NORMAL, LDST_ALIGN_LO, LDST_ALIGN_HI };$/;"	e	enum:__anon136
LDST_ALIGN_NORMAL	ptlhwdef.h	/^enum { LDST_ALIGN_NORMAL, LDST_ALIGN_LO, LDST_ALIGN_HI };$/;"	e	enum:__anon136
LDT_SIZE	kernel.h	407;"	d
LDU0	ooocore-amd-k8.h	288;"	d
LDU0	ooocore.h	295;"	d
LDU0	ooocore.h	99;"	d
LDU1	ooocore-amd-k8.h	289;"	d
LDU1	ooocore.h	100;"	d
LDU1	ooocore.h	296;"	d
LEFT	klibc.cpp	1318;"	d	file:
LFRQ_SIZE	dcache-amd-k8.h	/^  const int LFRQ_SIZE = 32;$/;"	v
LFRQ_SIZE	dcache.h	/^  const int LFRQ_SIZE = 64;$/;"	v
LO32	globals.h	569;"	d
LOADER_MAGIC	loader.h	23;"	d
LOADER_THUNK_SIZE	loader.h	14;"	d
LOADLAT	ooocore-amd-k8.h	/^  static const int LOADLAT = 3;$/;"	v
LOADLAT	ooocore.h	/^  static const int LOADLAT = 2;$/;"	v
LOAD_FU_COUNT	ooocore-amd-k8.h	/^  static const int LOAD_FU_COUNT = 2;$/;"	v
LOAD_FU_COUNT	ooocore.h	/^  static const int LOAD_FU_COUNT = 2;$/;"	v
LONG_BYTEORDER	xen-types.h	60;"	d
LONG_BYTEORDER	xen-types.h	64;"	d
LONG_MAX	xen-types.h	95;"	d
LONG_MIN	xen-types.h	99;"	d
LOW_HALF	mathlib.cpp	16;"	d	file:
LSQ	ooocore-amd-k8.h	/^    Queue<LoadStoreQueueEntry, LSQ_SIZE> LSQ;$/;"	m	struct:OutOfOrderModel::ThreadContext
LSQ	ooocore.h	/^    Queue<LoadStoreQueueEntry, LSQ_SIZE> LSQ;$/;"	m	struct:OutOfOrderModel::ThreadContext
LSQ_SIZE	ooocore-amd-k8.h	738;"	d
LSQ_SIZE	ooocore.h	755;"	d
LSU1	ooocore-amd-k8.h	100;"	d
LSU2	ooocore-amd-k8.h	101;"	d
LaTeXTableCreator	ptlstats.cpp	/^  LaTeXTableCreator(ostream& os_, dynarray<char*>& rownames_, dynarray<char*>& colnames_):$/;"	f	class:LaTeXTableCreator
LaTeXTableCreator	ptlstats.cpp	/^class LaTeXTableCreator: public TableCreator {$/;"	c	file:
Level1PTE	ptlhwdef.h	/^struct Level1PTE {$/;"	s
Level1PTE	ptlhwdef.h	/^typedef W64 Level1PTE;$/;"	t
Level2PTE	ptlhwdef.h	/^struct Level2PTE {$/;"	s
Level3PTE	ptlhwdef.h	/^struct Level3PTE {$/;"	s
Level4PTE	ptlhwdef.h	/^typedef struct Level4PTE {$/;"	s
LineAttributes	ptlstats.cpp	/^struct LineAttributes {$/;"	s	file:
ListOfStateLists	ooocore-amd-k8.h	/^    ListOfStateLists() { count = 0; }$/;"	f	struct:OutOfOrderModel::ListOfStateLists
ListOfStateLists	ooocore-amd-k8.h	/^  struct ListOfStateLists: public array<StateList*, 64> {$/;"	s	namespace:OutOfOrderModel
ListOfStateLists	ooocore.h	/^    ListOfStateLists() { count = 0; }$/;"	f	struct:OutOfOrderModel::ListOfStateLists
ListOfStateLists	ooocore.h	/^  struct ListOfStateLists: public array<StateList*, 64> {$/;"	s	namespace:OutOfOrderModel
LoadFillReq	dcache-amd-k8.h	/^    LoadFillReq(W64 addr, W64 data, byte mask, LoadStoreInfo lsi) {$/;"	f	struct:CacheSubsystem::LoadFillReq
LoadFillReq	dcache-amd-k8.h	/^    inline LoadFillReq() { }$/;"	f	struct:CacheSubsystem::LoadFillReq
LoadFillReq	dcache-amd-k8.h	/^  struct LoadFillReq {$/;"	s	namespace:CacheSubsystem
LoadFillReq	dcache.cpp	/^LoadFillReq::LoadFillReq(W64 addr, W64 data, byte mask, LoadStoreInfo lsi) {$/;"	f	class:LoadFillReq
LoadFillReq	dcache.h	/^    inline LoadFillReq() { }$/;"	f	struct:CacheSubsystem::LoadFillReq
LoadFillReq	dcache.h	/^  struct LoadFillReq {$/;"	s	namespace:CacheSubsystem
LoadFillReqQueue	dcache-amd-k8.h	/^    LoadFillReqQueue(): hierarchy(*((CacheHierarchy*)null)) { reset(); }$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
LoadFillReqQueue	dcache-amd-k8.h	/^    LoadFillReqQueue(CacheHierarchy& hierarchy_): hierarchy(hierarchy_) { reset(); }$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
LoadFillReqQueue	dcache-amd-k8.h	/^  struct LoadFillReqQueue {$/;"	s	namespace:CacheSubsystem
LoadFillReqQueue	dcache.h	/^    LoadFillReqQueue(): hierarchy(*((CacheHierarchy*)null)) { reset(); }$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
LoadFillReqQueue	dcache.h	/^    LoadFillReqQueue(CacheHierarchy& hierarchy_): hierarchy(hierarchy_) { reset(); }$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
LoadFillReqQueue	dcache.h	/^  struct LoadFillReqQueue {$/;"	s	namespace:CacheSubsystem
LoadStoreAliasPredictor	ooocore-amd-k8.h	/^  struct LoadStoreAliasPredictor: public FullyAssociativeTags<W64, 8> { };$/;"	s	namespace:OutOfOrderModel
LoadStoreAliasPredictor	ooocore.h	/^  struct LoadStoreAliasPredictor: public FullyAssociativeTags<W64, 8> { };$/;"	s	namespace:OutOfOrderModel
LoadStoreInfo	dcache-amd-k8.h	/^struct LoadStoreInfo {$/;"	s
LoadStoreInfo	dcache.h	/^struct LoadStoreInfo {$/;"	s
LoadStoreQueueEntry	ooocore-amd-k8.h	/^    LoadStoreQueueEntry() { }$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
LoadStoreQueueEntry	ooocore-amd-k8.h	/^  struct LoadStoreQueueEntry: public SFR {$/;"	s	namespace:OutOfOrderModel
LoadStoreQueueEntry	ooocore.h	/^    LoadStoreQueueEntry() { }$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
LoadStoreQueueEntry	ooocore.h	/^  struct LoadStoreQueueEntry: public SFR {$/;"	s	namespace:OutOfOrderModel
LoaderInfo	loader.h	/^struct LoaderInfo {$/;"	s
Locator	superstl.h	/^    struct Locator {$/;"	s	struct:superstl::ChunkList
LockableAssociativeArray	logic.h	/^  LockableAssociativeArray() {$/;"	f	struct:LockableAssociativeArray
LockableAssociativeArray	logic.h	/^struct LockableAssociativeArray {$/;"	s
LockableCommitRollbackAssociativeArray	logic.h	/^  LockableCommitRollbackAssociativeArray() {$/;"	f	struct:LockableCommitRollbackAssociativeArray
LockableCommitRollbackAssociativeArray	logic.h	/^struct LockableCommitRollbackAssociativeArray {$/;"	s
LockableFullyAssociativeArray	logic.h	/^  LockableFullyAssociativeArray() {$/;"	f	struct:LockableFullyAssociativeArray
LockableFullyAssociativeArray	logic.h	/^struct LockableFullyAssociativeArray {$/;"	s
LockableFullyAssociativeTags	logic.h	/^  LockableFullyAssociativeTags() {$/;"	f	struct:LockableFullyAssociativeTags
LockableFullyAssociativeTags	logic.h	/^struct LockableFullyAssociativeTags {$/;"	s
MACHTYPE	Makefile	/^	MACHTYPE = "$(shell uname -a)"$/;"	m
MAGIC	datastore.h	/^  static const W32 MAGIC = 0x31545344; \/\/ 'DST1'$/;"	m	struct:DataStoreNodeTemplateBase
MAGIC	datastore.h	/^  static const W64 MAGIC = 0x31307473644c5450ULL; \/\/ 'PTLdst01'$/;"	m	struct:StatsFileHeader
MAIN_MEM_LATENCY	dcache-amd-k8.h	/^  const int MAIN_MEM_LATENCY = 100; \/\/ above and beyond L1 + L2 latency$/;"	v
MAIN_MEM_LATENCY	dcache.h	/^  const int MAIN_MEM_LATENCY = 140; \/\/ Core 2 Duo 2.4 GHz has 160 cycle total L2 latency$/;"	v
MAP_HEAP	kernel.cpp	483;"	d	file:
MAP_STACK	kernel.cpp	481;"	d	file:
MAP_VDSO	kernel.cpp	484;"	d	file:
MAP_ZERO	kernel.cpp	482;"	d	file:
MAX	mathlib.cpp	1001;"	d	file:
MAX_BB_BYTES	ptlhwdef.h	/^static const int MAX_BB_BYTES = 127;$/;"	v
MAX_BB_PER_PAGE	ptlhwdef.h	/^static const int MAX_BB_PER_PAGE = 4096;$/;"	v
MAX_BB_UOPS	ptlhwdef.h	/^static const int MAX_BB_UOPS = 63;$/;"	v
MAX_BB_X86_INSNS	ptlhwdef.h	/^static const int MAX_BB_X86_INSNS = 60;$/;"	v
MAX_BRANCHES_IN_FLIGHT	ooocore-amd-k8.h	/^  const int MAX_BRANCHES_IN_FLIGHT = 24;$/;"	v
MAX_BRANCHES_IN_FLIGHT	ooocore.h	/^  const int MAX_BRANCHES_IN_FLIGHT = 16;$/;"	v
MAX_CLUSTERS	ooocore-amd-k8.h	/^  const int MAX_CLUSTERS = 4;$/;"	v
MAX_CLUSTERS	ooocore.h	/^  const int MAX_CLUSTERS = 1;$/;"	v
MAX_CLUSTERS	ooocore.h	/^  const int MAX_CLUSTERS = 4;$/;"	v
MAX_CONTEXTS	kernel.h	249;"	d
MAX_CONTEXTS	ptlxen.h	83;"	d
MAX_FORWARDING_LATENCY	ooocore-amd-k8.h	/^  const int MAX_FORWARDING_LATENCY = 2;$/;"	v
MAX_FORWARDING_LATENCY	ooocore.h	/^  const int MAX_FORWARDING_LATENCY = 2;$/;"	v
MAX_ISSUE_WIDTH	ooocore-amd-k8.h	/^  const int MAX_ISSUE_WIDTH = 6;$/;"	v
MAX_ISSUE_WIDTH	ooocore.h	/^  const int MAX_ISSUE_WIDTH = 4;$/;"	v
MAX_MAPS_PER_PROCESS	kernel.cpp	639;"	d	file:
MAX_OPERANDS	ooocore-amd-k8.h	/^  static const int MAX_OPERANDS = 4;$/;"	v
MAX_OPERANDS	ooocore.h	/^  static const int MAX_OPERANDS = 4;$/;"	v
MAX_PERFCTRS	perfctrs.cpp	/^static const int MAX_PERFCTRS = 2;$/;"	v	file:
MAX_PHYSREG_STATE	ooocore-amd-k8.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon38
MAX_PHYSREG_STATE	ooocore.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon2
MAX_PHYS_REG_FILE_SIZE	ooocore-amd-k8.h	/^  const int MAX_PHYS_REG_FILE_SIZE = 128;$/;"	v
MAX_PHYS_REG_FILE_SIZE	ooocore.h	/^  const int MAX_PHYS_REG_FILE_SIZE = 256;$/;"	v
MAX_PROC_MAPS_SIZE	kernel.cpp	505;"	d	file:
MAX_RESERVED_PAGES	ptlxen.h	98;"	d
MAX_ROB_IDX_BIT	ooocore-amd-k8.h	/^static const int MAX_ROB_IDX_BIT = 12; \/\/ up to 4096 ROB entries$/;"	v
MAX_ROB_IDX_BIT	ooocore.h	/^static const int MAX_ROB_IDX_BIT = 12; \/\/ up to 4096 ROB entries$/;"	v
MAX_SIMULATED_VCPUS	stats.h	/^static const int MAX_SIMULATED_VCPUS = 4;$/;"	v
MAX_SMT_CORES	ooocore-amd-k8.h	1627;"	d
MAX_SMT_CORES	ooocore.h	1662;"	d
MAX_STORES_IN_COMMIT_RECORD	seqcore.h	/^static const int MAX_STORES_IN_COMMIT_RECORD = 4096;$/;"	v
MAX_THREADS_BIT	ooocore-amd-k8.h	/^static const int MAX_THREADS_BIT = 4; \/\/ up to 16 threads$/;"	v
MAX_THREADS_BIT	ooocore.h	/^static const int MAX_THREADS_BIT = 4; \/\/ up to 16 threads$/;"	v
MAX_THREADS_PER_CORE	ooocore-amd-k8.h	/^static const int MAX_THREADS_PER_CORE = 1;$/;"	v
MAX_THREADS_PER_CORE	ooocore-amd-k8.h	/^static const int MAX_THREADS_PER_CORE = 4;$/;"	v
MAX_THREADS_PER_CORE	ooocore.h	/^static const int MAX_THREADS_PER_CORE = 1;$/;"	v
MAX_THREADS_PER_CORE	ooocore.h	/^static const int MAX_THREADS_PER_CORE = 2;$/;"	v
MAX_TRANSOPS_PER_USER_INSN	ptlhwdef.h	/^static const int MAX_TRANSOPS_PER_USER_INSN = 16;$/;"	v
MAX_TRANSOP_BUFFER_SIZE	ptlsim.h	/^static const int MAX_TRANSOP_BUFFER_SIZE = 4;$/;"	v
MAX_URGENCY	mm.h	/^static const int MAX_URGENCY = 65535;$/;"	v
MAX_WAKEUPS_PER_CYCLE	dcache-amd-k8.h	/^  const int MAX_WAKEUPS_PER_CYCLE = 2;$/;"	v
MAX_WAKEUPS_PER_CYCLE	dcache.h	/^  const int MAX_WAKEUPS_PER_CYCLE = 2;$/;"	v
MF_TYPE_LFENCE	ptlhwdef.h	1260;"	d
MF_TYPE_SFENCE	ptlhwdef.h	1259;"	d
MILLISECS	ptlxen-events.cpp	255;"	d	file:
MIN	mathlib.cpp	1000;"	d	file:
MISPRED	ooocore-amd-k8.h	/^  enum { MISPRED = 0, CORRECT = 1 };$/;"	e	enum:OutOfOrderModel::__anon41
MISPRED	ooocore.h	/^  enum { MISPRED = 0, CORRECT = 1 };$/;"	e	enum:OutOfOrderModel::__anon5
MISSBUF_COUNT	dcache-amd-k8.h	/^  const int MISSBUF_COUNT = 16;$/;"	v
MISSBUF_COUNT	dcache.h	/^  const int MISSBUF_COUNT = 64;$/;"	v
MONE	mathlib.cpp	1025;"	d	file:
MONE	mathlib.cpp	1852;"	d	file:
MONE	mathlib.cpp	2005;"	d	file:
MOV_TO_XMM	uopimpl.cpp	1042;"	d	file:
MOV_TO_XMM	uopimpl.cpp	1046;"	d	file:
MUL12	mathlib.cpp	538;"	d	file:
MUL2	mathlib.cpp	576;"	d	file:
MULTI_IQ	ooocore-amd-k8.h	374;"	d
MULTI_IQ	ooocore.h	381;"	d
MULTI_IQ	ooocore.h	389;"	d
MXCSR	globals.h	/^  MXCSR() { }$/;"	f	union:MXCSR
MXCSR	globals.h	/^  MXCSR(W32 v) { data = v; }$/;"	f	union:MXCSR
MXCSR	globals.h	/^union MXCSR {$/;"	u
MXCSR_DEFAULT	globals.h	262;"	d
MXCSR_EXCEPTION_DISABLE_MASK	globals.h	261;"	d
MXCSR_ROUND_DOWN	globals.h	/^enum { MXCSR_ROUND_NEAREST, MXCSR_ROUND_DOWN, MXCSR_ROUND_UP, MXCSR_ROUND_TOWARDS_ZERO };$/;"	e	enum:__anon31
MXCSR_ROUND_NEAREST	globals.h	/^enum { MXCSR_ROUND_NEAREST, MXCSR_ROUND_DOWN, MXCSR_ROUND_UP, MXCSR_ROUND_TOWARDS_ZERO };$/;"	e	enum:__anon31
MXCSR_ROUND_TOWARDS_ZERO	globals.h	/^enum { MXCSR_ROUND_NEAREST, MXCSR_ROUND_DOWN, MXCSR_ROUND_UP, MXCSR_ROUND_TOWARDS_ZERO };$/;"	e	enum:__anon31
MXCSR_ROUND_UP	globals.h	/^enum { MXCSR_ROUND_NEAREST, MXCSR_ROUND_DOWN, MXCSR_ROUND_UP, MXCSR_ROUND_TOWARDS_ZERO };$/;"	e	enum:__anon31
MakeInvalid	decode.h	266;"	d
MakeLimits	globals.h	78;"	d
MakeLimits	globals.h	94;"	d
MakePermuteControlInfo	ptlhwdef.h	1227;"	d
MakePrimitive	globals.h	97;"	d
MaskControlInfo	ptlhwdef.h	/^  MaskControlInfo() { }$/;"	f	union:MaskControlInfo
MaskControlInfo	ptlhwdef.h	/^  MaskControlInfo(W32 data) { this->data = data; }$/;"	f	union:MaskControlInfo
MaskControlInfo	ptlhwdef.h	/^  MaskControlInfo(int ms, int mc, int ds) {$/;"	f	union:MaskControlInfo
MaskControlInfo	ptlhwdef.h	/^union MaskControlInfo {$/;"	u
MemoryInterlockBuffer	ooocore-amd-k8.h	/^  struct MemoryInterlockBuffer: public LockableAssociativeArray<W64, MemoryInterlockEntry, 16, 4, 8> { };$/;"	s	namespace:OutOfOrderModel
MemoryInterlockBuffer	ooocore.h	/^  struct MemoryInterlockBuffer: public LockableAssociativeArray<W64, MemoryInterlockEntry, 16, 4, 8> { };$/;"	s	namespace:OutOfOrderModel
MemoryInterlockEntry	ooocore-amd-k8.h	/^  struct MemoryInterlockEntry {$/;"	s	namespace:OutOfOrderModel
MemoryInterlockEntry	ooocore.h	/^  struct MemoryInterlockEntry {$/;"	s	namespace:OutOfOrderModel
MemoryManagerEvent	mm-private.h	/^  MemoryManagerEvent() { }$/;"	f	struct:MemoryManagerEvent
MemoryManagerEvent	mm-private.h	/^  MemoryManagerEvent(int event, int pool, void* caller, void* address, W32 bytes, int slab = 0) {$/;"	f	struct:MemoryManagerEvent
MemoryManagerEvent	mm-private.h	/^PrintOperator(MemoryManagerEvent);$/;"	v
MemoryManagerEvent	mm-private.h	/^struct MemoryManagerEvent {$/;"	s
MemoryMapExtent	kernel.cpp	/^struct MemoryMapExtent {$/;"	s	file:
MissBuffer	dcache-amd-k8.h	/^    MissBuffer(): hierarchy(*((CacheHierarchy*)null)) { reset(); }$/;"	f	struct:CacheSubsystem::MissBuffer
MissBuffer	dcache-amd-k8.h	/^    MissBuffer(CacheHierarchy& hierarchy_): hierarchy(hierarchy_) { reset(); }$/;"	f	struct:CacheSubsystem::MissBuffer
MissBuffer	dcache-amd-k8.h	/^  struct MissBuffer {$/;"	s	namespace:CacheSubsystem
MissBuffer	dcache.h	/^    MissBuffer(): hierarchy(*((CacheHierarchy*)null)) { reset(); }$/;"	f	struct:CacheSubsystem::MissBuffer
MissBuffer	dcache.h	/^    MissBuffer(CacheHierarchy& hierarchy_): hierarchy(hierarchy_) { reset(); }$/;"	f	struct:CacheSubsystem::MissBuffer
MissBuffer	dcache.h	/^  struct MissBuffer {$/;"	s	namespace:CacheSubsystem
ModRMByte	decode.h	/^  ModRMByte() { }$/;"	f	struct:ModRMByte
ModRMByte	decode.h	/^  ModRMByte(const byte& b) { *((byte*)this) = b; }$/;"	f	struct:ModRMByte
ModRMByte	decode.h	/^struct ModRMByte { $/;"	s
N	superstl.h	/^    static const int N = (bytes - (16+4+2+2)) \/ sizeof(T);$/;"	m	struct:superstl::SearchableChunkList16Entry
NAN	mathlib.cpp	/^  static const mynumber NAN = {{0x00000000, 0x7ff80000 }};\/*  NaN                     *\/$/;"	v	file:
NAN	mathlib.cpp	29;"	d	file:
NOLINE	ptlstats.cpp	646;"	d	file:
NORMAL	ptlxen.h	/^    NORMAL = 0,$/;"	e	enum:PageFrameType::__anon110
NR_syscalls	syscalls.h	705;"	d
NULL	globals.h	26;"	d
NULL	xen-types.h	79;"	d
NodeType	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING };$/;"	g	struct:DataStoreNode
NodeType	datastore.h	/^  enum NodeType { DS_NODE_TYPE_NULL, DS_NODE_TYPE_INT, DS_NODE_TYPE_FLOAT, DS_NODE_TYPE_NODE, DS_NODE_TYPE_STRING, DS_NODE_TYPE_LABELED_HISTOGRAM };$/;"	g	struct:DataStoreNodeTemplate
NullAssociativeArrayStatisticsCollector	logic.h	/^struct NullAssociativeArrayStatisticsCollector {$/;"	s
OBJFILES	Makefile	/^OBJFILES = $(COMMONOBJS) $(OOOOBJS)$/;"	m
OBJFILES	Makefile	/^OBJFILES = $(COMMONOBJS) $(PT2XOBJS) $(OOOOBJS)$/;"	m
OF	uopimpl.cpp	106;"	d	file:
ONE	mathlib.cpp	1024;"	d	file:
ONE	mathlib.cpp	1851;"	d	file:
ONE	mathlib.cpp	2004;"	d	file:
OOOCPPFILES	Makefile	/^OOOCPPFILES = ooocore.cpp ooopipe.cpp oooexec.cpp seqcore.cpp branchpred.cpp$/;"	m
OOOINCLUDES	Makefile	/^OOOINCLUDES = branchpred.h ooocore.h ooocore-amd-k8.h$/;"	m
OOOOBJS	Makefile	/^OOOOBJS = branchpred.o dcache.o ooocore.o ooopipe.o oooexec.o $/;"	m
OPCLASS_ADD	ptlhwdef.h	964;"	d
OPCLASS_ADDSHIFT	ptlhwdef.h	963;"	d
OPCLASS_ADDSUB	ptlhwdef.h	961;"	d
OPCLASS_ADDSUBC	ptlhwdef.h	962;"	d
OPCLASS_ALU_SIZE_MERGING	ptlhwdef.h	991;"	d
OPCLASS_ASSIST	ptlhwdef.h	972;"	d
OPCLASS_BARRIER	ptlhwdef.h	973;"	d
OPCLASS_BITSCAN	ptlhwdef.h	985;"	d
OPCLASS_BRANCH	ptlhwdef.h	974;"	d
OPCLASS_CHECK	ptlhwdef.h	987;"	d
OPCLASS_COMPARE	ptlhwdef.h	967;"	d
OPCLASS_CONDITIONAL	ptlhwdef.h	989;"	d
OPCLASS_COND_BRANCH	ptlhwdef.h	968;"	d
OPCLASS_COUNT	ptlhwdef.h	1005;"	d
OPCLASS_FENCE	ptlhwdef.h	979;"	d
OPCLASS_FLAGS	ptlhwdef.h	986;"	d
OPCLASS_FP	ptlhwdef.h	1001;"	d
OPCLASS_FP_ALU	ptlhwdef.h	993;"	d
OPCLASS_FP_COMPARE	ptlhwdef.h	995;"	d
OPCLASS_FP_CONVERTF2I	ptlhwdef.h	998;"	d
OPCLASS_FP_CONVERTFP	ptlhwdef.h	999;"	d
OPCLASS_FP_CONVERTI2F	ptlhwdef.h	997;"	d
OPCLASS_FP_DIVSQRT	ptlhwdef.h	994;"	d
OPCLASS_FP_PERMUTE	ptlhwdef.h	996;"	d
OPCLASS_INDIR_BRANCH	ptlhwdef.h	970;"	d
OPCLASS_LOAD	ptlhwdef.h	976;"	d
OPCLASS_LOGIC	ptlhwdef.h	959;"	d
OPCLASS_MEM	ptlhwdef.h	980;"	d
OPCLASS_MULTIPLY	ptlhwdef.h	984;"	d
OPCLASS_PREFETCH	ptlhwdef.h	978;"	d
OPCLASS_SELECT	ptlhwdef.h	966;"	d
OPCLASS_SHIFTROT	ptlhwdef.h	983;"	d
OPCLASS_SIMPLE_SHIFT	ptlhwdef.h	982;"	d
OPCLASS_STORE	ptlhwdef.h	977;"	d
OPCLASS_UNCOND_BRANCH	ptlhwdef.h	971;"	d
OPCLASS_USECOND	ptlhwdef.h	1007;"	d
OPCLASS_VEC_ALU	ptlhwdef.h	1003;"	d
OPTION_TYPE_BOOL	config.h	/^  OPTION_TYPE_BOOL    = 5,$/;"	e	enum:__anon96
OPTION_TYPE_FLOAT	config.h	/^  OPTION_TYPE_FLOAT   = 2,$/;"	e	enum:__anon96
OPTION_TYPE_NONE	config.h	/^  OPTION_TYPE_NONE    = 0, $/;"	e	enum:__anon96
OPTION_TYPE_SECTION	config.h	/^  OPTION_TYPE_SECTION = -1$/;"	e	enum:__anon96
OPTION_TYPE_STRING	config.h	/^  OPTION_TYPE_STRING  = 3,$/;"	e	enum:__anon96
OPTION_TYPE_TRAILER	config.h	/^  OPTION_TYPE_TRAILER = 4,$/;"	e	enum:__anon96
OPTION_TYPE_W64	config.h	/^  OPTION_TYPE_W64     = 1,$/;"	e	enum:__anon96
OPTYPE_IMM	decode.h	/^enum { OPTYPE_NONE, OPTYPE_REG, OPTYPE_MEM, OPTYPE_IMM };$/;"	e	enum:__anon141
OPTYPE_MEM	decode.h	/^enum { OPTYPE_NONE, OPTYPE_REG, OPTYPE_MEM, OPTYPE_IMM };$/;"	e	enum:__anon141
OPTYPE_NONE	decode.h	/^enum { OPTYPE_NONE, OPTYPE_REG, OPTYPE_MEM, OPTYPE_IMM };$/;"	e	enum:__anon141
OPTYPE_REG	decode.h	/^enum { OPTYPE_NONE, OPTYPE_REG, OPTYPE_MEM, OPTYPE_IMM };$/;"	e	enum:__anon141
OP_MAX_OPCODE	ptlhwdef.h	/^  OP_MAX_OPCODE,$/;"	e	enum:__anon131
OP_add	ptlhwdef.h	/^  OP_add,$/;"	e	enum:__anon131
OP_adda	ptlhwdef.h	/^  OP_adda,$/;"	e	enum:__anon131
OP_addm	ptlhwdef.h	/^  OP_addm,$/;"	e	enum:__anon131
OP_and	ptlhwdef.h	/^  OP_and,$/;"	e	enum:__anon131
OP_andcc	ptlhwdef.h	/^  OP_andcc,$/;"	e	enum:__anon131
OP_andnot	ptlhwdef.h	/^  OP_andnot,$/;"	e	enum:__anon131
OP_br	ptlhwdef.h	/^  OP_br,$/;"	e	enum:__anon131
OP_br_and	ptlhwdef.h	/^  OP_br_and,$/;"	e	enum:__anon131
OP_br_sub	ptlhwdef.h	/^  OP_br_sub,$/;"	e	enum:__anon131
OP_brp	ptlhwdef.h	/^  OP_brp,$/;"	e	enum:__anon131
OP_bru	ptlhwdef.h	/^  OP_bru,$/;"	e	enum:__anon131
OP_bswap	ptlhwdef.h	/^  OP_bswap,$/;"	e	enum:__anon131
OP_bt	ptlhwdef.h	/^  OP_bt,$/;"	e	enum:__anon131
OP_btc	ptlhwdef.h	/^  OP_btc,$/;"	e	enum:__anon131
OP_btr	ptlhwdef.h	/^  OP_btr,$/;"	e	enum:__anon131
OP_bts	ptlhwdef.h	/^  OP_bts,$/;"	e	enum:__anon131
OP_chk	ptlhwdef.h	/^  OP_chk,$/;"	e	enum:__anon131
OP_chk_and	ptlhwdef.h	/^  OP_chk_and,$/;"	e	enum:__anon131
OP_chk_sub	ptlhwdef.h	/^  OP_chk_sub,$/;"	e	enum:__anon131
OP_clz	ptlhwdef.h	/^  OP_clz,$/;"	e	enum:__anon131
OP_collcc	ptlhwdef.h	/^  OP_collcc,$/;"	e	enum:__anon131
OP_ctpop	ptlhwdef.h	/^  OP_ctpop,$/;"	e	enum:__anon131
OP_ctz	ptlhwdef.h	/^  OP_ctz,$/;"	e	enum:__anon131
OP_div	ptlhwdef.h	/^  OP_div,$/;"	e	enum:__anon131
OP_divs	ptlhwdef.h	/^  OP_divs,$/;"	e	enum:__anon131
OP_eqv	ptlhwdef.h	/^  OP_eqv,$/;"	e	enum:__anon131
OP_fadd	ptlhwdef.h	/^  OP_fadd,$/;"	e	enum:__anon131
OP_fcmp	ptlhwdef.h	/^  OP_fcmp,$/;"	e	enum:__anon131
OP_fcmpcc	ptlhwdef.h	/^  OP_fcmpcc,$/;"	e	enum:__anon131
OP_fcvt_d2i	ptlhwdef.h	/^  OP_fcvt_d2i,$/;"	e	enum:__anon131
OP_fcvt_d2i_p	ptlhwdef.h	/^  OP_fcvt_d2i_p,$/;"	e	enum:__anon131
OP_fcvt_d2q	ptlhwdef.h	/^  OP_fcvt_d2q,$/;"	e	enum:__anon131
OP_fcvt_d2s_ins	ptlhwdef.h	/^  OP_fcvt_d2s_ins,$/;"	e	enum:__anon131
OP_fcvt_d2s_p	ptlhwdef.h	/^  OP_fcvt_d2s_p,$/;"	e	enum:__anon131
OP_fcvt_i2d_hi	ptlhwdef.h	/^  OP_fcvt_i2d_hi,$/;"	e	enum:__anon131
OP_fcvt_i2d_lo	ptlhwdef.h	/^  OP_fcvt_i2d_lo,$/;"	e	enum:__anon131
OP_fcvt_i2s_ins	ptlhwdef.h	/^  OP_fcvt_i2s_ins,$/;"	e	enum:__anon131
OP_fcvt_i2s_p	ptlhwdef.h	/^  OP_fcvt_i2s_p,$/;"	e	enum:__anon131
OP_fcvt_q2d	ptlhwdef.h	/^  OP_fcvt_q2d,$/;"	e	enum:__anon131
OP_fcvt_q2s_ins	ptlhwdef.h	/^  OP_fcvt_q2s_ins,$/;"	e	enum:__anon131
OP_fcvt_s2d_hi	ptlhwdef.h	/^  OP_fcvt_s2d_hi,$/;"	e	enum:__anon131
OP_fcvt_s2d_lo	ptlhwdef.h	/^  OP_fcvt_s2d_lo,$/;"	e	enum:__anon131
OP_fcvt_s2i	ptlhwdef.h	/^  OP_fcvt_s2i,$/;"	e	enum:__anon131
OP_fcvt_s2i_p	ptlhwdef.h	/^  OP_fcvt_s2i_p,$/;"	e	enum:__anon131
OP_fcvt_s2q	ptlhwdef.h	/^  OP_fcvt_s2q,$/;"	e	enum:__anon131
OP_fdiv	ptlhwdef.h	/^  OP_fdiv,$/;"	e	enum:__anon131
OP_fmadd	ptlhwdef.h	/^  OP_fmadd,$/;"	e	enum:__anon131
OP_fmax	ptlhwdef.h	/^  OP_fmax,$/;"	e	enum:__anon131
OP_fmin	ptlhwdef.h	/^  OP_fmin,$/;"	e	enum:__anon131
OP_fmsub	ptlhwdef.h	/^  OP_fmsub,$/;"	e	enum:__anon131
OP_fmsubr	ptlhwdef.h	/^  OP_fmsubr,$/;"	e	enum:__anon131
OP_fmul	ptlhwdef.h	/^  OP_fmul,$/;"	e	enum:__anon131
OP_frcp	ptlhwdef.h	/^  OP_frcp,$/;"	e	enum:__anon131
OP_frsqrt	ptlhwdef.h	/^  OP_frsqrt,$/;"	e	enum:__anon131
OP_fsqrt	ptlhwdef.h	/^  OP_fsqrt,$/;"	e	enum:__anon131
OP_fsub	ptlhwdef.h	/^  OP_fsub,$/;"	e	enum:__anon131
OP_jmp	ptlhwdef.h	/^  OP_jmp,$/;"	e	enum:__anon131
OP_jmpp	ptlhwdef.h	/^  OP_jmpp,$/;"	e	enum:__anon131
OP_ld	ptlhwdef.h	/^  OP_ld,$/;"	e	enum:__anon131
OP_ld_pre	ptlhwdef.h	/^  OP_ld_pre,$/;"	e	enum:__anon131
OP_ldx	ptlhwdef.h	/^  OP_ldx,$/;"	e	enum:__anon131
OP_mask	ptlhwdef.h	/^  OP_mask,$/;"	e	enum:__anon131
OP_maskb	ptlhwdef.h	/^  OP_maskb,$/;"	e	enum:__anon131
OP_max	ptlhwdef.h	/^  OP_max,$/;"	e	enum:__anon131
OP_max_s	ptlhwdef.h	/^  OP_max_s,$/;"	e	enum:__anon131
OP_mf	ptlhwdef.h	/^  OP_mf,$/;"	e	enum:__anon131
OP_min	ptlhwdef.h	/^  OP_min,$/;"	e	enum:__anon131
OP_min_s	ptlhwdef.h	/^  OP_min_s,$/;"	e	enum:__anon131
OP_mov	ptlhwdef.h	/^  OP_mov,$/;"	e	enum:__anon131
OP_movccr	ptlhwdef.h	/^  OP_movccr,$/;"	e	enum:__anon131
OP_movrcc	ptlhwdef.h	/^  OP_movrcc,$/;"	e	enum:__anon131
OP_mulh	ptlhwdef.h	/^  OP_mulh,$/;"	e	enum:__anon131
OP_mulhl	ptlhwdef.h	/^  OP_mulhl,$/;"	e	enum:__anon131
OP_mulhu	ptlhwdef.h	/^  OP_mulhu,$/;"	e	enum:__anon131
OP_mull	ptlhwdef.h	/^  OP_mull,$/;"	e	enum:__anon131
OP_nand	ptlhwdef.h	/^  OP_nand,$/;"	e	enum:__anon131
OP_nop	ptlhwdef.h	/^  OP_nop,$/;"	e	enum:__anon131
OP_nor	ptlhwdef.h	/^  OP_nor,$/;"	e	enum:__anon131
OP_or	ptlhwdef.h	/^  OP_or,$/;"	e	enum:__anon131
OP_orcc	ptlhwdef.h	/^  OP_orcc,$/;"	e	enum:__anon131
OP_ornot	ptlhwdef.h	/^  OP_ornot,$/;"	e	enum:__anon131
OP_ornotcc	ptlhwdef.h	/^  OP_ornotcc,$/;"	e	enum:__anon131
OP_permb	ptlhwdef.h	/^  OP_permb,$/;"	e	enum:__anon131
OP_rem	ptlhwdef.h	/^  OP_rem,$/;"	e	enum:__anon131
OP_rems	ptlhwdef.h	/^  OP_rems,$/;"	e	enum:__anon131
OP_rotcl	ptlhwdef.h	/^  OP_rotcl,$/;"	e	enum:__anon131
OP_rotcr	ptlhwdef.h	/^  OP_rotcr,$/;"	e	enum:__anon131
OP_rotl	ptlhwdef.h	/^  OP_rotl,$/;"	e	enum:__anon131
OP_rotr	ptlhwdef.h	/^  OP_rotr,$/;"	e	enum:__anon131
OP_sar	ptlhwdef.h	/^  OP_sar,$/;"	e	enum:__anon131
OP_sars	ptlhwdef.h	/^  OP_sars,$/;"	e	enum:__anon131
OP_sel	ptlhwdef.h	/^  OP_sel,$/;"	e	enum:__anon131
OP_sel_cmp	ptlhwdef.h	/^  OP_sel_cmp,$/;"	e	enum:__anon131
OP_set	ptlhwdef.h	/^  OP_set,$/;"	e	enum:__anon131
OP_set_and	ptlhwdef.h	/^  OP_set_and,$/;"	e	enum:__anon131
OP_set_sub	ptlhwdef.h	/^  OP_set_sub,$/;"	e	enum:__anon131
OP_shl	ptlhwdef.h	/^  OP_shl,$/;"	e	enum:__anon131
OP_shls	ptlhwdef.h	/^  OP_shls,$/;"	e	enum:__anon131
OP_shr	ptlhwdef.h	/^  OP_shr,$/;"	e	enum:__anon131
OP_shrs	ptlhwdef.h	/^  OP_shrs,$/;"	e	enum:__anon131
OP_st	ptlhwdef.h	/^  OP_st,$/;"	e	enum:__anon131
OP_sub	ptlhwdef.h	/^  OP_sub,$/;"	e	enum:__anon131
OP_suba	ptlhwdef.h	/^  OP_suba,$/;"	e	enum:__anon131
OP_subm	ptlhwdef.h	/^  OP_subm,$/;"	e	enum:__anon131
OP_vadd	ptlhwdef.h	/^  OP_vadd,$/;"	e	enum:__anon131
OP_vadd_ss	ptlhwdef.h	/^  OP_vadd_ss,$/;"	e	enum:__anon131
OP_vadd_us	ptlhwdef.h	/^  OP_vadd_us,$/;"	e	enum:__anon131
OP_vavg	ptlhwdef.h	/^  OP_vavg,$/;"	e	enum:__anon131
OP_vbt	ptlhwdef.h	/^  OP_vbt, \/\/ bit test vector (e.g. pack bit 7 of 8 bytes into 8-bit output, for pmovmskb)$/;"	e	enum:__anon131
OP_vcmp	ptlhwdef.h	/^  OP_vcmp,$/;"	e	enum:__anon131
OP_vmaddp	ptlhwdef.h	/^  OP_vmaddp,$/;"	e	enum:__anon131
OP_vmax	ptlhwdef.h	/^  OP_vmax,$/;"	e	enum:__anon131
OP_vmax_s	ptlhwdef.h	/^  OP_vmax_s,$/;"	e	enum:__anon131
OP_vmin	ptlhwdef.h	/^  OP_vmin,$/;"	e	enum:__anon131
OP_vmin_s	ptlhwdef.h	/^  OP_vmin_s,$/;"	e	enum:__anon131
OP_vmulh	ptlhwdef.h	/^  OP_vmulh,$/;"	e	enum:__anon131
OP_vmulhu	ptlhwdef.h	/^  OP_vmulhu,$/;"	e	enum:__anon131
OP_vmull	ptlhwdef.h	/^  OP_vmull,$/;"	e	enum:__anon131
OP_vpack_ss	ptlhwdef.h	/^  OP_vpack_ss,$/;"	e	enum:__anon131
OP_vpack_us	ptlhwdef.h	/^  OP_vpack_us,$/;"	e	enum:__anon131
OP_vsad	ptlhwdef.h	/^  OP_vsad,$/;"	e	enum:__anon131
OP_vsar	ptlhwdef.h	/^  OP_vsar,$/;"	e	enum:__anon131
OP_vshl	ptlhwdef.h	/^  OP_vshl,$/;"	e	enum:__anon131
OP_vshr	ptlhwdef.h	/^  OP_vshr,$/;"	e	enum:__anon131
OP_vsub	ptlhwdef.h	/^  OP_vsub,$/;"	e	enum:__anon131
OP_vsub_ss	ptlhwdef.h	/^  OP_vsub_ss,$/;"	e	enum:__anon131
OP_vsub_us	ptlhwdef.h	/^  OP_vsub_us,$/;"	e	enum:__anon131
OP_xor	ptlhwdef.h	/^  OP_xor,$/;"	e	enum:__anon131
OP_xorcc	ptlhwdef.h	/^  OP_xorcc,$/;"	e	enum:__anon131
OSTREAM_BUF_SIZE	superstl.h	175;"	d
OUTPUT	spec2000/ammp/Makefile	/^OUTPUT = ammp$/;"	m
OUTPUT	spec2000/applu/Makefile	/^OUTPUT = applu$/;"	m
OUTPUT	spec2000/apsi/Makefile	/^OUTPUT = apsi$/;"	m
OUTPUT	spec2000/art/Makefile	/^OUTPUT = art$/;"	m
OUTPUT	spec2000/bzip2/Makefile	/^OUTPUT = bzip2$/;"	m
OUTPUT	spec2000/crafty/Makefile	/^OUTPUT = crafty$/;"	m
OUTPUT	spec2000/eon/Makefile	/^OUTPUT = eon$/;"	m
OUTPUT	spec2000/equake/Makefile	/^OUTPUT = equake$/;"	m
OUTPUT	spec2000/facerec/Makefile	/^OUTPUT = facerec$/;"	m
OUTPUT	spec2000/fma3d/Makefile	/^OUTPUT = fma3d$/;"	m
OUTPUT	spec2000/galgel/Makefile	/^OUTPUT = galgel$/;"	m
OUTPUT	spec2000/gap/Makefile	/^OUTPUT = gap$/;"	m
OUTPUT	spec2000/gcc/Makefile	/^OUTPUT = gcc$/;"	m
OUTPUT	spec2000/gzip/Makefile	/^OUTPUT = gzip$/;"	m
OUTPUT	spec2000/lucas/Makefile	/^OUTPUT = lucas$/;"	m
OUTPUT	spec2000/mcf/Makefile	/^OUTPUT = mcf$/;"	m
OUTPUT	spec2000/mesa/Makefile	/^OUTPUT = mesa$/;"	m
OUTPUT	spec2000/mgrid/Makefile	/^OUTPUT = mgrid$/;"	m
OUTPUT	spec2000/parser/Makefile	/^OUTPUT = parser$/;"	m
OUTPUT	spec2000/perlbmk/Makefile	/^OUTPUT = perlbmk$/;"	m
OUTPUT	spec2000/sixtrack/Makefile	/^OUTPUT = sixtrack$/;"	m
OUTPUT	spec2000/swim/Makefile	/^OUTPUT = swim$/;"	m
OUTPUT	spec2000/twolf/Makefile	/^OUTPUT = twolf$/;"	m
OUTPUT	spec2000/vortex/Makefile	/^OUTPUT = vortex$/;"	m
OUTPUT	spec2000/vpr/Makefile	/^OUTPUT = vpr$/;"	m
OUTPUT	spec2000/wupwise/Makefile	/^OUTPUT = wupwise$/;"	m
ObjectHashtableEntry	superstl.h	/^    ObjectHashtableEntry() { }$/;"	f	struct:superstl::ObjectHashtableEntry
ObjectHashtableEntry	superstl.h	/^    ObjectHashtableEntry(const K& key, const T& value) {$/;"	f	struct:superstl::ObjectHashtableEntry
ObjectHashtableEntry	superstl.h	/^  struct ObjectHashtableEntry: public KeyValuePair<K, T> {$/;"	s	namespace:superstl
ObjectHashtableLinkManager	superstl.h	/^  struct ObjectHashtableLinkManager {$/;"	s	namespace:superstl
ObjectLinkManager	superstl.h	/^  struct ObjectLinkManager {$/;"	s	namespace:superstl
OpcodeInfo	ptlhwdef.h	/^struct OpcodeInfo {$/;"	s
OutOfOrderCore	ooocore-amd-k8.h	/^    OutOfOrderCore(int coreid_, OutOfOrderMachine& machine_): coreid(coreid_), machine(machine_), cache_callbacks(*this) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
OutOfOrderCore	ooocore-amd-k8.h	/^  struct OutOfOrderCore {$/;"	s	namespace:OutOfOrderModel
OutOfOrderCore	ooocore.h	/^    OutOfOrderCore(int coreid_, OutOfOrderMachine& machine_): coreid(coreid_), machine(machine_), cache_callbacks(*this) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
OutOfOrderCore	ooocore.h	/^  struct OutOfOrderCore {$/;"	s	namespace:OutOfOrderModel
OutOfOrderCoreCacheCallbacks	ooocore-amd-k8.h	/^    OutOfOrderCoreCacheCallbacks(OutOfOrderCore& core_): core(core_) { }$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreCacheCallbacks
OutOfOrderCoreCacheCallbacks	ooocore-amd-k8.h	/^  struct OutOfOrderCoreCacheCallbacks: public CacheSubsystem::PerCoreCacheCallbacks {$/;"	s	namespace:OutOfOrderModel
OutOfOrderCoreCacheCallbacks	ooocore.h	/^    OutOfOrderCoreCacheCallbacks(OutOfOrderCore& core_): core(core_) { }$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreCacheCallbacks
OutOfOrderCoreCacheCallbacks	ooocore.h	/^  struct OutOfOrderCoreCacheCallbacks: public CacheSubsystem::PerCoreCacheCallbacks {$/;"	s	namespace:OutOfOrderModel
OutOfOrderCoreEvent	ooocore-amd-k8.h	/^  struct OutOfOrderCoreEvent {$/;"	s	namespace:OutOfOrderModel
OutOfOrderCoreEvent	ooocore.h	/^  struct OutOfOrderCoreEvent {$/;"	s	namespace:OutOfOrderModel
OutOfOrderCoreStats	ooocore-amd-k8.h	/^struct OutOfOrderCoreStats { \/\/ rootnode:$/;"	s
OutOfOrderCoreStats	ooocore.h	/^struct OutOfOrderCoreStats { \/\/ rootnode:$/;"	s
OutOfOrderMachine	ooocore-amd-k8.h	/^  struct OutOfOrderMachine: public PTLsimMachine {$/;"	s	namespace:OutOfOrderModel
OutOfOrderMachine	ooocore.cpp	/^OutOfOrderMachine::OutOfOrderMachine(const char* name) {$/;"	f	class:OutOfOrderMachine
OutOfOrderMachine	ooocore.h	/^  struct OutOfOrderMachine: public PTLsimMachine {$/;"	s	namespace:OutOfOrderModel
OutOfOrderModel	ooocore-amd-k8.h	/^namespace OutOfOrderModel {$/;"	n
OutOfOrderModel	ooocore.cpp	/^namespace OutOfOrderModel {$/;"	n	file:
OutOfOrderModel	ooocore.h	/^namespace OutOfOrderModel {$/;"	n
OutOfOrderModel	oooexec.cpp	/^namespace OutOfOrderModel {$/;"	n	file:
OutOfOrderModel	ooopipe.cpp	/^namespace OutOfOrderModel {$/;"	n	file:
PAGE_SIZE	globals.h	536;"	d
PAGE_SIZE	globals.h	538;"	d
PFX_ADDR	decode.h	/^static const int PFX_ADDR      = (1 << 10);$/;"	v
PFX_CS	decode.h	/^static const int PFX_CS        = (1 << 3);$/;"	v
PFX_DATA	decode.h	/^static const int PFX_DATA      = (1 << 9);$/;"	v
PFX_DS	decode.h	/^static const int PFX_DS        = (1 << 5);$/;"	v
PFX_ES	decode.h	/^static const int PFX_ES        = (1 << 6);$/;"	v
PFX_FS	decode.h	/^static const int PFX_FS        = (1 << 7);$/;"	v
PFX_FWAIT	decode.h	/^static const int PFX_FWAIT     = (1 << 12);$/;"	v
PFX_GS	decode.h	/^static const int PFX_GS        = (1 << 8);$/;"	v
PFX_LOCK	decode.h	/^static const int PFX_LOCK      = (1 << 2);$/;"	v
PFX_REPNZ	decode.h	/^static const int PFX_REPNZ     = (1 << 1);$/;"	v
PFX_REPZ	decode.h	/^static const int PFX_REPZ      = (1 << 0);$/;"	v
PFX_REX	decode.h	/^static const int PFX_REX       = (1 << 11);$/;"	v
PFX_SS	decode.h	/^static const int PFX_SS        = (1 << 4);$/;"	v
PFX_count	decode.h	/^static const int PFX_count     = 13;$/;"	v
PHYSADDR_TYPE_COUNT	ptlxen.h	/^static const W64 PHYSADDR_TYPE_COUNT         = 5;$/;"	v
PHYSADDR_TYPE_DRAM	ptlxen.h	/^static const W64 PHYSADDR_TYPE_DRAM          = 0; \/\/ Normal DRAM$/;"	v
PHYSADDR_TYPE_PTL	ptlxen.h	/^static const W64 PHYSADDR_TYPE_PTL           = 2; \/\/ PTLsim space (for microcode access)$/;"	v
PHYSADDR_TYPE_RAW	ptlxen.h	/^static const W64 PHYSADDR_TYPE_RAW           = 1; \/\/ Raw MFNs (for pages granted from other domains)$/;"	v
PHYSADDR_TYPE_SHIFT	ptlxen.h	/^static const int PHYSADDR_TYPE_SHIFT = 36;$/;"	v
PHYSADDR_TYPE_SHINFO	ptlxen.h	/^static const W64 PHYSADDR_TYPE_SHINFO        = 3; \/\/ Shadow shared info page (physaddr offset is zero)$/;"	v
PHYSADDR_TYPE_XEN_M2P	ptlxen.h	/^static const W64 PHYSADDR_TYPE_XEN_M2P       = 4; \/\/ Xen M2P map (offset from virtaddr$/;"	v
PHYSREG_ARCH	ooocore-amd-k8.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon38
PHYSREG_ARCH	ooocore.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon2
PHYSREG_BYPASS	ooocore-amd-k8.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon38
PHYSREG_BYPASS	ooocore.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon2
PHYSREG_FREE	ooocore-amd-k8.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon38
PHYSREG_FREE	ooocore.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon2
PHYSREG_NONE	ooocore-amd-k8.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon38
PHYSREG_NONE	ooocore.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon2
PHYSREG_PENDINGFREE	ooocore-amd-k8.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon38
PHYSREG_PENDINGFREE	ooocore.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon2
PHYSREG_WAITING	ooocore-amd-k8.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon38
PHYSREG_WAITING	ooocore.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon2
PHYSREG_WRITTEN	ooocore-amd-k8.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon38
PHYSREG_WRITTEN	ooocore.h	/^  enum { PHYSREG_NONE, PHYSREG_FREE, PHYSREG_WAITING, PHYSREG_BYPASS, PHYSREG_WRITTEN, PHYSREG_ARCH, PHYSREG_PENDINGFREE, MAX_PHYSREG_STATE };$/;"	e	enum:OutOfOrderModel::__anon2
PHYS_REG_FILE_BR	ooocore-amd-k8.h	/^    enum { PHYS_REG_FILE_INT, PHYS_REG_FILE_FP, PHYS_REG_FILE_ST, PHYS_REG_FILE_BR };$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon58
PHYS_REG_FILE_BR	ooocore.h	/^    enum { PHYS_REG_FILE_INT, PHYS_REG_FILE_FP, PHYS_REG_FILE_ST, PHYS_REG_FILE_BR };$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon22
PHYS_REG_FILE_COUNT	ooocore-amd-k8.h	/^  const int PHYS_REG_FILE_COUNT = 3;$/;"	v
PHYS_REG_FILE_COUNT	ooocore-amd-k8.h	/^  const int PHYS_REG_FILE_COUNT = 4;$/;"	v
PHYS_REG_FILE_COUNT	ooocore.h	/^  const int PHYS_REG_FILE_COUNT = 3;$/;"	v
PHYS_REG_FILE_COUNT	ooocore.h	/^  const int PHYS_REG_FILE_COUNT = 4;$/;"	v
PHYS_REG_FILE_FP	ooocore-amd-k8.h	/^    enum { PHYS_REG_FILE_INT, PHYS_REG_FILE_FP, PHYS_REG_FILE_ST, PHYS_REG_FILE_BR };$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon58
PHYS_REG_FILE_FP	ooocore.h	/^    enum { PHYS_REG_FILE_INT, PHYS_REG_FILE_FP, PHYS_REG_FILE_ST, PHYS_REG_FILE_BR };$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon22
PHYS_REG_FILE_INT	ooocore-amd-k8.h	/^    enum { PHYS_REG_FILE_INT, PHYS_REG_FILE_FP, PHYS_REG_FILE_ST, PHYS_REG_FILE_BR };$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon58
PHYS_REG_FILE_INT	ooocore.h	/^    enum { PHYS_REG_FILE_INT, PHYS_REG_FILE_FP, PHYS_REG_FILE_ST, PHYS_REG_FILE_BR };$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon22
PHYS_REG_FILE_MASK_BR	ooocore-amd-k8.h	/^      PHYS_REG_FILE_MASK_BR  = (1 << 3)$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon59
PHYS_REG_FILE_MASK_BR	ooocore.h	/^      PHYS_REG_FILE_MASK_BR  = (1 << 3)$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon23
PHYS_REG_FILE_MASK_FP	ooocore-amd-k8.h	/^      PHYS_REG_FILE_MASK_FP  = (1 << 1),$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon59
PHYS_REG_FILE_MASK_FP	ooocore.h	/^      PHYS_REG_FILE_MASK_FP  = (1 << 1),$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon23
PHYS_REG_FILE_MASK_INT	ooocore-amd-k8.h	/^      PHYS_REG_FILE_MASK_INT = (1 << 0),$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon59
PHYS_REG_FILE_MASK_INT	ooocore.h	/^      PHYS_REG_FILE_MASK_INT = (1 << 0),$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon23
PHYS_REG_FILE_MASK_ST	ooocore-amd-k8.h	/^      PHYS_REG_FILE_MASK_ST  = (1 << 2),$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon59
PHYS_REG_FILE_MASK_ST	ooocore.h	/^      PHYS_REG_FILE_MASK_ST  = (1 << 2),$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon23
PHYS_REG_FILE_SIZE	ooocore-amd-k8.h	/^  const int PHYS_REG_FILE_SIZE = 128;$/;"	v
PHYS_REG_FILE_SIZE	ooocore.h	/^  const int PHYS_REG_FILE_SIZE = 256;$/;"	v
PHYS_REG_FILE_ST	ooocore-amd-k8.h	/^    enum { PHYS_REG_FILE_INT, PHYS_REG_FILE_FP, PHYS_REG_FILE_ST, PHYS_REG_FILE_BR };$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon58
PHYS_REG_FILE_ST	ooocore.h	/^    enum { PHYS_REG_FILE_INT, PHYS_REG_FILE_FP, PHYS_REG_FILE_ST, PHYS_REG_FILE_BR };$/;"	e	enum:OutOfOrderModel::OutOfOrderCore::__anon22
PHYS_REG_NULL	ooocore-amd-k8.h	/^  const int PHYS_REG_NULL = 0;$/;"	v
PHYS_REG_NULL	ooocore.h	/^  const int PHYS_REG_NULL = 0;$/;"	v
PHYS_VIRT_BASE	ptlxen.h	40;"	d
PLUS	klibc.cpp	1316;"	d	file:
PML4_SHIFT	ptlxen.h	36;"	d
PREFETCH_STOPS_AT_L2	dcache.cpp	/^static const int PREFETCH_STOPS_AT_L2 = 0;$/;"	v	file:
PRETEXT_ALL_FLAGS_IN	uopimpl.cpp	165;"	d	file:
PRETEXT_NO_FLAGS_IN	uopimpl.cpp	164;"	d	file:
PRIpaddr	xen-types.h	43;"	d
PRIpaddr	xen-types.h	48;"	d
PS	uopimpl.cpp	1067;"	d	file:
PTES_PER_PAGE	ptlxen.h	96;"	d
PTEUpdate	ptlhwdef.h	/^struct PTEUpdate: public PTEUpdateBase {$/;"	s
PTEUpdateBase	ptlhwdef.h	/^struct PTEUpdateBase {$/;"	s
PTE_CACHE_SIZE	ptlhwdef.h	/^  static const int PTE_CACHE_SIZE = 16;$/;"	m	struct:ContextBase
PTLCALL_CAPTURE_STATS	ptlcalls.h	/^  PTLCALL_CAPTURE_STATS = 4,$/;"	e	enum:__anon75
PTLCALL_COUNT	ptlcalls.h	/^  PTLCALL_COUNT,$/;"	e	enum:__anon75
PTLCALL_ENQUEUE	ptlcalls.h	51;"	d
PTLCALL_INTERFACE_VERSION_1	ptlcalls.h	56;"	d
PTLCALL_MARKER	ptlcalls.h	/^  PTLCALL_MARKER = 1,$/;"	e	enum:__anon75
PTLCALL_MARKER	ptlcalls.h	50;"	d
PTLCALL_NOP	ptlcalls.h	/^  PTLCALL_NOP = 0,$/;"	e	enum:__anon75
PTLCALL_STATUS_PTLSIM_ACTIVE	ptlcalls.h	54;"	d
PTLCALL_STATUS_VERSION_MASK	ptlcalls.h	53;"	d
PTLCALL_SWITCH_TO_NATIVE	ptlcalls.h	/^  PTLCALL_SWITCH_TO_NATIVE = 3,$/;"	e	enum:__anon75
PTLCALL_SWITCH_TO_SIM	ptlcalls.h	/^  PTLCALL_SWITCH_TO_SIM = 2,$/;"	e	enum:__anon75
PTLCALL_VERSION	ptlcalls.h	49;"	d
PTLSIM_BOOT_PAGE_PFN	lowlevel-64bit-xen.S	/^#define PTLSIM_BOOT_PAGE_PFN 16$/;"	d
PTLSIM_BOOT_PAGE_PFN	ptlxen.h	52;"	d
PTLSIM_BOOT_PAGE_VIRT_BASE	lowlevel-64bit-xen.S	/^#define PTLSIM_BOOT_PAGE_VIRT_BASE (PTLSIM_VIRT_BASE + (PTLSIM_BOOT_PAGE_PFN * 4096))$/;"	d
PTLSIM_BOOT_PAGE_VIRT_BASE	ptlxen.h	53;"	d
PTLSIM_CTX_PAGE_COUNT	ptlxen.h	87;"	d
PTLSIM_CTX_PAGE_PFN	ptlxen.h	85;"	d
PTLSIM_CTX_PAGE_VIRT_BASE	ptlxen.h	86;"	d
PTLSIM_ENTRYPOINT_PFN	ptlxen.h	89;"	d
PTLSIM_ENTRYPOINT_RIP	ptlxen.h	90;"	d
PTLSIM_FIRST_READ_ONLY_PAGE	ptlxen.h	91;"	d
PTLSIM_HOST_ACCEPT_UPCALL	ptlxen.h	/^  PTLSIM_HOST_ACCEPT_UPCALL,$/;"	e	enum:__anon98
PTLSIM_HOST_COMPLETE_UPCALL	ptlxen.h	/^  PTLSIM_HOST_COMPLETE_UPCALL,$/;"	e	enum:__anon98
PTLSIM_HOST_FLUSH_CACHE	ptlxen.h	/^  PTLSIM_HOST_FLUSH_CACHE,$/;"	e	enum:__anon98
PTLSIM_HOST_FLUSH_UPCALL_QUEUE	ptlxen.h	/^  PTLSIM_HOST_FLUSH_UPCALL_QUEUE,$/;"	e	enum:__anon98
PTLSIM_HOST_INITIALIZE	ptlxen.h	/^  PTLSIM_HOST_INITIALIZE,$/;"	e	enum:__anon98
PTLSIM_HOST_INJECT_UPCALL	ptlxen.h	/^  PTLSIM_HOST_INJECT_UPCALL,$/;"	e	enum:__anon98
PTLSIM_HOST_NOP	ptlxen.h	/^  PTLSIM_HOST_NOP,$/;"	e	enum:__anon98
PTLSIM_HOST_SETUP_PERFCTRS	ptlxen.h	/^  PTLSIM_HOST_SETUP_PERFCTRS,$/;"	e	enum:__anon98
PTLSIM_HOST_SHUTDOWN	ptlxen.h	/^  PTLSIM_HOST_SHUTDOWN,$/;"	e	enum:__anon98
PTLSIM_HOST_SWITCH_TO_NATIVE	ptlxen.h	/^  PTLSIM_HOST_SWITCH_TO_NATIVE,$/;"	e	enum:__anon98
PTLSIM_HOST_SWITCH_TO_SIM	ptlxen.h	/^  PTLSIM_HOST_SWITCH_TO_SIM,$/;"	e	enum:__anon98
PTLSIM_HOST_SYSCALL	ptlxen.h	/^  PTLSIM_HOST_SYSCALL,$/;"	e	enum:__anon98
PTLSIM_HOST_WRITE_PERFCTRS	ptlxen.h	/^  PTLSIM_HOST_WRITE_PERFCTRS,$/;"	e	enum:__anon98
PTLSIM_HYPERCALL_PAGE_PFN	lowlevel-64bit-xen.S	/^#define PTLSIM_HYPERCALL_PAGE_PFN 17$/;"	d
PTLSIM_HYPERCALL_PAGE_PFN	ptlxen.h	55;"	d
PTLSIM_HYPERCALL_PAGE_VIRT_BASE	lowlevel-64bit-xen.S	/^#define PTLSIM_HYPERCALL_PAGE_VIRT_BASE (PTLSIM_VIRT_BASE + (PTLSIM_HYPERCALL_PAGE_PFN * 4096))$/;"	d
PTLSIM_HYPERCALL_PAGE_VIRT_BASE	ptlxen.h	56;"	d
PTLSIM_IN_PTLMON	ptlmon.cpp	25;"	d	file:
PTLSIM_LOGBUF_PAGE_PFN	ptlxen.h	78;"	d
PTLSIM_LOGBUF_PAGE_VIRT_BASE	ptlxen.h	79;"	d
PTLSIM_LOGBUF_SIZE	ptlxen.h	80;"	d
PTLSIM_NULL_PAGE_PFN	ptlxen.h	49;"	d
PTLSIM_NULL_PAGE_VIRT_BASE	ptlxen.h	50;"	d
PTLSIM_PSEUDO_VIRT_BASE	ptlmon.cpp	270;"	d	file:
PTLSIM_PUBLIC_ONLY	cpuid.cpp	13;"	d	file:
PTLSIM_PUBLIC_ONLY	ptlstats.cpp	10;"	d	file:
PTLSIM_RESERVED_VIRT_BASE	ptlxen.h	42;"	d
PTLSIM_RESERVED_VIRT_END	ptlxen.h	43;"	d
PTLSIM_SHADOW_SHINFO_PAGE_PFN	ptlxen.h	61;"	d
PTLSIM_SHADOW_SHINFO_PAGE_VIRT_BASE	ptlxen.h	62;"	d
PTLSIM_SHINFO_PAGE_PFN	lowlevel-64bit-xen.S	/^#define PTLSIM_SHINFO_PAGE_PFN 18$/;"	d
PTLSIM_SHINFO_PAGE_PFN	ptlxen.h	58;"	d
PTLSIM_SHINFO_PAGE_VIRT_BASE	lowlevel-64bit-xen.S	/^#define PTLSIM_SHINFO_PAGE_VIRT_BASE (PTLSIM_VIRT_BASE + (PTLSIM_SHINFO_PAGE_PFN * 4096))$/;"	d
PTLSIM_SHINFO_PAGE_VIRT_BASE	ptlxen.h	59;"	d
PTLSIM_STATE_INITIALIZING	ptlxen.h	/^  PTLSIM_STATE_INITIALIZING,$/;"	e	enum:__anon109
PTLSIM_STATE_NATIVE	ptlxen.h	/^  PTLSIM_STATE_NATIVE,$/;"	e	enum:__anon109
PTLSIM_STATE_NONE	ptlxen.h	/^  PTLSIM_STATE_NONE,$/;"	e	enum:__anon109
PTLSIM_STATE_RUNNING	ptlxen.h	/^  PTLSIM_STATE_RUNNING,$/;"	e	enum:__anon109
PTLSIM_THUNK_MAGIC	ptlcalls.h	77;"	d
PTLSIM_THUNK_PAGE	injectcode.cpp	84;"	d	file:
PTLSIM_THUNK_PAGE	ptlcalls.h	75;"	d
PTLSIM_VIRT_BASE	lowlevel-64bit-xen.S	/^#define PTLSIM_VIRT_BASE 0x0000000000000000 \/\/ PML4 entry 0$/;"	d
PTLSIM_VIRT_BASE	ptlhwdef.h	1379;"	d
PTLSIM_VIRT_BASE	ptlxen.h	39;"	d
PTLSIM_X86_EXT_FEATURE	decode-complex.cpp	188;"	d	file:
PTLSIM_X86_FEATURE	decode-complex.cpp	166;"	d	file:
PTLSIM_X86_MISC_INFO	decode-complex.cpp	237;"	d	file:
PTLSIM_X86_MODEL_INFO	decode-complex.cpp	228;"	d	file:
PTLSIM_X86_VENDOR_EXT_FEATURE	decode-complex.cpp	216;"	d	file:
PTLSIM_X86_VENDOR_FEATURE	decode-complex.cpp	202;"	d	file:
PTLSIM_XFER_PAGES_COUNT	ptlxen.h	72;"	d
PTLSIM_XFER_PAGES_PFN	ptlxen.h	70;"	d
PTLSIM_XFER_PAGES_SIZE	ptlxen.h	73;"	d
PTLSIM_XFER_PAGES_VIRT_BASE	ptlxen.h	71;"	d
PTL_IMAGE_BASE	mm.h	83;"	d
PTL_IMAGE_SIZE	mm.h	84;"	d
PTL_MM_EVENT_ALLOC	mm-private.h	/^  PTL_MM_EVENT_ALLOC,$/;"	e	enum:__anon73
PTL_MM_EVENT_CLEANUP	mm-private.h	/^  PTL_MM_EVENT_CLEANUP,$/;"	e	enum:__anon73
PTL_MM_EVENT_COUNT	mm-private.h	/^  PTL_MM_EVENT_COUNT,$/;"	e	enum:__anon73
PTL_MM_EVENT_FREE	mm-private.h	/^  PTL_MM_EVENT_FREE,$/;"	e	enum:__anon73
PTL_MM_EVENT_INIT	mm-private.h	/^  PTL_MM_EVENT_INIT,$/;"	e	enum:__anon73
PTL_MM_EVENT_RECLAIM_CALL	mm-private.h	/^  PTL_MM_EVENT_RECLAIM_CALL,$/;"	e	enum:__anon73
PTL_MM_EVENT_RECLAIM_END	mm-private.h	/^  PTL_MM_EVENT_RECLAIM_END,$/;"	e	enum:__anon73
PTL_MM_EVENT_RECLAIM_START	mm-private.h	/^  PTL_MM_EVENT_RECLAIM_START,$/;"	e	enum:__anon73
PTL_MM_POOL_ALL	mm-private.h	/^  PTL_MM_POOL_ALL,$/;"	e	enum:__anon74
PTL_MM_POOL_COUNT	mm-private.h	/^  PTL_MM_POOL_COUNT,$/;"	e	enum:__anon74
PTL_MM_POOL_GENERAL	mm-private.h	/^  PTL_MM_POOL_GENERAL,$/;"	e	enum:__anon74
PTL_MM_POOL_PAGES	mm-private.h	/^  PTL_MM_POOL_PAGES,$/;"	e	enum:__anon74
PTL_MM_POOL_SLAB	mm-private.h	/^  PTL_MM_POOL_SLAB,$/;"	e	enum:__anon74
PTL_PAGE_POOL_BASE	mm.h	74;"	d
PTL_PAGE_POOL_BASE	mm.h	80;"	d
PTL_PAGE_POOL_BASE	ptlmon.cpp	207;"	d	file:
PTL_PAGE_POOL_BYTES	mm.h	75;"	d
PTL_PAGE_POOL_BYTES	mm.h	81;"	d
PTL_PAGE_POOL_SIZE	mm.h	76;"	d
PTL_PAGE_POOL_SIZE	mm.h	82;"	d
PTLsimCommandDescriptor	ptlcalls.h	/^struct PTLsimCommandDescriptor {$/;"	s
PTLsimConfig	ptlsim.h	/^struct PTLsimConfig {$/;"	s
PTLsimHostCall	ptlxen.h	/^  PTLsimHostCall() { }$/;"	f	struct:PTLsimHostCall
PTLsimHostCall	ptlxen.h	/^  PTLsimHostCall(W64 syscallid, W64 arg1 = 0, W64 arg2 = 0, W64 arg3 = 0, W64 arg4 = 0, W64 arg5 = 0, W64 arg6 = 0) {$/;"	f	struct:PTLsimHostCall
PTLsimHostCall	ptlxen.h	/^  PTLsimHostCall(int op) {$/;"	f	struct:PTLsimHostCall
PTLsimHostCall	ptlxen.h	/^struct PTLsimHostCall {$/;"	s
PTLsimMachine	ptlsim.h	/^  PTLsimMachine() { initialized = 0; }$/;"	f	struct:PTLsimMachine
PTLsimMachine	ptlsim.h	/^struct PTLsimMachine {$/;"	s
PTLsimMonitorInfo	ptlxen.h	/^struct PTLsimMonitorInfo {$/;"	s
PTLsimStats	stats.h	/^struct PTLsimStats { \/\/ rootnode:$/;"	s
PTLsimThunkPage	ptlcalls.h	/^struct PTLsimThunkPage {$/;"	s
PTLsimThunkPagePrivate	kernel.cpp	/^struct PTLsimThunkPagePrivate: public PTLsimThunkPage {$/;"	s	file:
PTLsim_Elf_Ehdr	injectcode.cpp	/^typedef Elf32_Ehdr PTLsim_Elf_Ehdr;$/;"	t	file:
PTLsim_Elf_Ehdr	injectcode.cpp	/^typedef Elf64_Ehdr PTLsim_Elf_Ehdr;$/;"	t	file:
PTLsim_Elf_Phdr	injectcode.cpp	/^typedef Elf32_Phdr PTLsim_Elf_Phdr;$/;"	t	file:
PTLsim_Elf_Phdr	injectcode.cpp	/^typedef Elf64_Phdr PTLsim_Elf_Phdr;$/;"	t	file:
PTLstatsConfig	ptlstats.cpp	/^struct PTLstatsConfig {$/;"	s	file:
PageFaultErrorCode	ptlhwdef.h	/^struct PageFaultErrorCode {$/;"	s
PageFrameType	ptlxen.h	/^  PageFrameType() { }$/;"	f	struct:PageFrameType
PageFrameType	ptlxen.h	/^struct PageFrameType {$/;"	s
PageHeader	mm.cpp	/^  struct PageHeader {$/;"	s	struct:SlabAllocator	file:
PendingRequest	ptlmon.cpp	/^struct PendingRequest: public selflistlink {$/;"	s	file:
PendingRequestLinkManager	ptlmon.cpp	/^struct PendingRequestLinkManager: public ObjectLinkManager<PendingRequest> {$/;"	s	file:
PendingRequestTable	ptlmon.cpp	/^typedef SelfHashtable<W64, PendingRequest, 16, PendingRequestLinkManager> PendingRequestTable;$/;"	t	file:
PerContextDataCacheStats	dcache-amd-k8.h	/^struct PerContextDataCacheStats { \/\/ rootnode:$/;"	s
PerContextDataCacheStats	dcache.h	/^struct PerContextDataCacheStats { \/\/ rootnode:$/;"	s
PerContextOutOfOrderCoreStats	ooocore-amd-k8.h	/^struct PerContextOutOfOrderCoreStats { \/\/ rootnode:$/;"	s
PerContextOutOfOrderCoreStats	ooocore.h	/^struct PerContextOutOfOrderCoreStats { \/\/ rootnode:$/;"	s
PerCoreCacheCallbacks	dcache-amd-k8.h	/^  struct PerCoreCacheCallbacks {$/;"	s	namespace:CacheSubsystem
PerCoreCacheCallbacks	dcache.h	/^  struct PerCoreCacheCallbacks {$/;"	s	namespace:CacheSubsystem
PerfEvtSelMSR	ptlxen.h	/^struct PerfEvtSelMSR {$/;"	s
PermbControlInfo	ptlhwdef.h	/^  PermbControlInfo() { }$/;"	f	union:PermbControlInfo
PermbControlInfo	ptlhwdef.h	/^  PermbControlInfo(W32 data) { this->data = data; }$/;"	f	union:PermbControlInfo
PermbControlInfo	ptlhwdef.h	/^  PermbControlInfo(int b7, int b6, int b5, int b4, int b3, int b2, int b1, int b0) {$/;"	f	union:PermbControlInfo
PermbControlInfo	ptlhwdef.h	/^union PermbControlInfo {$/;"	u
PhysicalRegister	ooocore-amd-k8.h	/^  struct PhysicalRegister: public selfqueuelink {$/;"	s	namespace:OutOfOrderModel
PhysicalRegister	ooocore.h	/^  struct PhysicalRegister: public selfqueuelink {$/;"	s	namespace:OutOfOrderModel
PhysicalRegisterFile	ooocore-amd-k8.h	/^    PhysicalRegisterFile() { }$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
PhysicalRegisterFile	ooocore-amd-k8.h	/^    PhysicalRegisterFile(const char* name, int coreid, int rfid, int size) {$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
PhysicalRegisterFile	ooocore-amd-k8.h	/^  struct PhysicalRegisterFile: public array<PhysicalRegister, MAX_PHYS_REG_FILE_SIZE> {$/;"	s	namespace:OutOfOrderModel
PhysicalRegisterFile	ooocore.h	/^    PhysicalRegisterFile() { }$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
PhysicalRegisterFile	ooocore.h	/^    PhysicalRegisterFile(const char* name, int coreid, int rfid, int size) {$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
PhysicalRegisterFile	ooocore.h	/^  struct PhysicalRegisterFile: public array<PhysicalRegister, MAX_PHYS_REG_FILE_SIZE> {$/;"	s	namespace:OutOfOrderModel
PhysicalRegisterOperandInfo	ooocore-amd-k8.h	/^  struct PhysicalRegisterOperandInfo {$/;"	s	namespace:OutOfOrderModel
PhysicalRegisterOperandInfo	ooocore.h	/^  struct PhysicalRegisterOperandInfo {$/;"	s	namespace:OutOfOrderModel
PointerSortComparator	superstl.h	/^    PointerSortComparator() { }$/;"	f	struct:superstl::PointerSortComparator
PointerSortComparator	superstl.h	/^  struct PointerSortComparator {$/;"	s	namespace:superstl
PredictorUpdate	branchpred.h	/^struct PredictorUpdate {$/;"	s
PrintOperator	superstl.h	147;"	d
ProcessorMiscInfo	cpuid.cpp	/^union ProcessorMiscInfo {$/;"	u	file:
ProcessorMiscInfo	decode-complex.cpp	/^union ProcessorMiscInfo {$/;"	u	file:
ProcessorModelInfo	cpuid.cpp	/^union ProcessorModelInfo {$/;"	u	file:
ProcessorModelInfo	decode-complex.cpp	/^union ProcessorModelInfo {$/;"	u	file:
Q	decode-sse.cpp	203;"	d	file:
Q	decode-sse.cpp	219;"	d	file:
Q	decode-sse.cpp	424;"	d	file:
Q	decode-sse.cpp	434;"	d	file:
Queue	logic.h	/^  Queue() {$/;"	f	struct:Queue
Queue	logic.h	/^struct Queue: public FixedQueue<T, SIZE> {$/;"	s
R	mathlib.cpp	1116;"	d	file:
R	mathlib.cpp	1164;"	d	file:
R	mathlib.cpp	1177;"	d	file:
R	mathlib.cpp	1213;"	d	file:
RA	ooocore-amd-k8.h	/^  static const int RA = 0;$/;"	v
RA	ooocore.h	/^  static const int RA = 0;$/;"	v
RADIX	mathlib.cpp	1020;"	d	file:
RADIXI	mathlib.cpp	1021;"	d	file:
RB	ooocore-amd-k8.h	/^  static const int RB = 1;$/;"	v
RB	ooocore.h	/^  static const int RB = 1;$/;"	v
RC	ooocore-amd-k8.h	/^  static const int RC = 2;$/;"	v
RC	ooocore.h	/^  static const int RC = 2;$/;"	v
REG_ar1	ptlhwdef.h	133;"	d
REG_ar2	ptlhwdef.h	134;"	d
REG_cf	ptlhwdef.h	149;"	d
REG_ctx	ptlhwdef.h	127;"	d
REG_dlend	ptlhwdef.h	130;"	d
REG_dlptr	ptlhwdef.h	125;"	d
REG_flags	ptlhwdef.h	129;"	d
REG_fpstack	ptlhwdef.h	123;"	d
REG_fpsw	ptlhwdef.h	121;"	d
REG_fptags	ptlhwdef.h	122;"	d
REG_fptos	ptlhwdef.h	120;"	d
REG_imm	ptlhwdef.h	151;"	d
REG_mem	ptlhwdef.h	152;"	d
REG_msr	ptlhwdef.h	124;"	d
REG_nextrip	ptlhwdef.h	132;"	d
REG_of	ptlhwdef.h	150;"	d
REG_r10	ptlhwdef.h	79;"	d
REG_r11	ptlhwdef.h	80;"	d
REG_r12	ptlhwdef.h	81;"	d
REG_r13	ptlhwdef.h	82;"	d
REG_r14	ptlhwdef.h	83;"	d
REG_r15	ptlhwdef.h	84;"	d
REG_r8	ptlhwdef.h	77;"	d
REG_r9	ptlhwdef.h	78;"	d
REG_rax	ptlhwdef.h	69;"	d
REG_rbp	ptlhwdef.h	74;"	d
REG_rbx	ptlhwdef.h	72;"	d
REG_rcx	ptlhwdef.h	70;"	d
REG_rdi	ptlhwdef.h	76;"	d
REG_rdx	ptlhwdef.h	71;"	d
REG_rip	ptlhwdef.h	128;"	d
REG_rsi	ptlhwdef.h	75;"	d
REG_rsp	ptlhwdef.h	73;"	d
REG_selfrip	ptlhwdef.h	131;"	d
REG_temp0	ptlhwdef.h	139;"	d
REG_temp1	ptlhwdef.h	140;"	d
REG_temp10	ptlhwdef.h	155;"	d
REG_temp2	ptlhwdef.h	141;"	d
REG_temp3	ptlhwdef.h	142;"	d
REG_temp4	ptlhwdef.h	143;"	d
REG_temp5	ptlhwdef.h	144;"	d
REG_temp6	ptlhwdef.h	145;"	d
REG_temp7	ptlhwdef.h	146;"	d
REG_temp8	ptlhwdef.h	153;"	d
REG_temp9	ptlhwdef.h	154;"	d
REG_trace	ptlhwdef.h	126;"	d
REG_xmmh0	ptlhwdef.h	87;"	d
REG_xmmh1	ptlhwdef.h	89;"	d
REG_xmmh10	ptlhwdef.h	108;"	d
REG_xmmh11	ptlhwdef.h	110;"	d
REG_xmmh12	ptlhwdef.h	112;"	d
REG_xmmh13	ptlhwdef.h	114;"	d
REG_xmmh14	ptlhwdef.h	116;"	d
REG_xmmh15	ptlhwdef.h	118;"	d
REG_xmmh2	ptlhwdef.h	91;"	d
REG_xmmh3	ptlhwdef.h	93;"	d
REG_xmmh4	ptlhwdef.h	95;"	d
REG_xmmh5	ptlhwdef.h	97;"	d
REG_xmmh6	ptlhwdef.h	99;"	d
REG_xmmh7	ptlhwdef.h	101;"	d
REG_xmmh8	ptlhwdef.h	104;"	d
REG_xmmh9	ptlhwdef.h	106;"	d
REG_xmml0	ptlhwdef.h	86;"	d
REG_xmml1	ptlhwdef.h	88;"	d
REG_xmml10	ptlhwdef.h	107;"	d
REG_xmml11	ptlhwdef.h	109;"	d
REG_xmml12	ptlhwdef.h	111;"	d
REG_xmml13	ptlhwdef.h	113;"	d
REG_xmml14	ptlhwdef.h	115;"	d
REG_xmml15	ptlhwdef.h	117;"	d
REG_xmml2	ptlhwdef.h	90;"	d
REG_xmml3	ptlhwdef.h	92;"	d
REG_xmml4	ptlhwdef.h	94;"	d
REG_xmml5	ptlhwdef.h	96;"	d
REG_xmml6	ptlhwdef.h	98;"	d
REG_xmml7	ptlhwdef.h	100;"	d
REG_xmml8	ptlhwdef.h	103;"	d
REG_xmml9	ptlhwdef.h	105;"	d
REG_zero	ptlhwdef.h	135;"	d
REG_zf	ptlhwdef.h	148;"	d
RGBA	ptlstats.cpp	/^  RGBA() { }$/;"	f	struct:RGBA
RGBA	ptlstats.cpp	/^  RGBA(const RGBAColor& rgba) {$/;"	f	struct:RGBA
RGBA	ptlstats.cpp	/^  RGBA(float r, float g, float b, float a = 255) {$/;"	f	struct:RGBA
RGBA	ptlstats.cpp	/^struct RGBA: public RGBAColor {$/;"	s	file:
RGBAColor	ptlstats.cpp	/^struct RGBAColor {$/;"	s	file:
RIPVirtPhys	ptlhwdef.h	/^  RIPVirtPhys() { }$/;"	f	struct:RIPVirtPhys
RIPVirtPhys	ptlhwdef.h	/^  RIPVirtPhys(W64 rip) { this->rip = rip; }$/;"	f	struct:RIPVirtPhys
RIPVirtPhys	ptlhwdef.h	/^struct RIPVirtPhys: public RIPVirtPhysBase {$/;"	s
RIPVirtPhysBase	ptlhwdef.h	/^struct RIPVirtPhysBase {$/;"	s
ROB	ooocore-amd-k8.h	/^    Queue<ReorderBufferEntry, ROB_SIZE> ROB;$/;"	m	struct:OutOfOrderModel::ThreadContext
ROB	ooocore.h	/^    Queue<ReorderBufferEntry, ROB_SIZE> ROB;$/;"	m	struct:OutOfOrderModel::ThreadContext
ROB_SIZE	ooocore-amd-k8.h	/^  const int ROB_SIZE = 72;$/;"	v
ROB_SIZE	ooocore.h	/^  const int ROB_SIZE = 128;$/;"	v
ROB_STATE_IN_ISSUE_QUEUE	ooocore-amd-k8.h	/^    ROB_STATE_IN_ISSUE_QUEUE = (1 << 1),$/;"	e	enum:OutOfOrderModel::__anon57
ROB_STATE_IN_ISSUE_QUEUE	ooocore.h	/^    ROB_STATE_IN_ISSUE_QUEUE = (1 << 1),$/;"	e	enum:OutOfOrderModel::__anon21
ROB_STATE_PRE_READY_TO_DISPATCH	ooocore-amd-k8.h	/^    ROB_STATE_PRE_READY_TO_DISPATCH = (1 << 2)$/;"	e	enum:OutOfOrderModel::__anon57
ROB_STATE_PRE_READY_TO_DISPATCH	ooocore.h	/^    ROB_STATE_PRE_READY_TO_DISPATCH = (1 << 2)$/;"	e	enum:OutOfOrderModel::__anon21
ROB_STATE_READY	ooocore-amd-k8.h	/^    ROB_STATE_READY = (1 << 0),$/;"	e	enum:OutOfOrderModel::__anon57
ROB_STATE_READY	ooocore.h	/^    ROB_STATE_READY = (1 << 0),$/;"	e	enum:OutOfOrderModel::__anon21
RS	ooocore-amd-k8.h	/^  static const int RS = 3; \/\/ (for stores only)$/;"	v
RS	ooocore.h	/^  static const int RS = 3; \/\/ (for stores only)$/;"	v
RandomNumberGenerator	superstl.h	/^    RandomNumberGenerator(W32 seed = 123) { reseed(seed); }$/;"	f	struct:superstl::RandomNumberGenerator
RandomNumberGenerator	superstl.h	/^  struct RandomNumberGenerator {$/;"	s	namespace:superstl
RawDataAccessors	globals.h	131;"	d
RealTimeInfo	ptlxen-events.cpp	/^struct RealTimeInfo {$/;"	s	file:
RecursiveMutex	superstl.h	/^    RecursiveMutex() { reset(); }$/;"	f	struct:superstl::RecursiveMutex
RecursiveMutex	superstl.h	/^  struct RecursiveMutex {$/;"	s	namespace:superstl
RegisterRenameTable	ooocore-amd-k8.h	/^  struct RegisterRenameTable: public array<PhysicalRegister*, TRANSREG_COUNT> {$/;"	s	namespace:OutOfOrderModel
RegisterRenameTable	ooocore.h	/^  struct RegisterRenameTable: public array<PhysicalRegister*, TRANSREG_COUNT> {$/;"	s	namespace:OutOfOrderModel
ReorderBufferEntry	ooocore-amd-k8.h	/^  struct ReorderBufferEntry: public selfqueuelink {$/;"	s	namespace:OutOfOrderModel
ReorderBufferEntry	ooocore.h	/^  struct ReorderBufferEntry: public selfqueuelink {$/;"	s	namespace:OutOfOrderModel
ReturnAddressStack	branchpred.cpp	/^struct ReturnAddressStack: public Queue<ReturnAddressStackEntry, SIZE> {$/;"	s	file:
ReturnAddressStackEntry	branchpred.h	/^  ReturnAddressStackEntry() { }$/;"	f	struct:ReturnAddressStackEntry
ReturnAddressStackEntry	branchpred.h	/^  ReturnAddressStackEntry(W64 uuid, W64 rip) {$/;"	f	struct:ReturnAddressStackEntry
ReturnAddressStackEntry	branchpred.h	/^struct ReturnAddressStackEntry {$/;"	s
RexByte	decode.h	/^  RexByte() { }$/;"	f	struct:RexByte
RexByte	decode.h	/^  RexByte(const byte& b) { *((byte*)this) = b; }$/;"	f	struct:RexByte
RexByte	decode.h	/^struct RexByte { $/;"	s
RunstateInfo	ptlhwdef.h	/^struct RunstateInfo {$/;"	s
S	mathlib.cpp	4271;"	d	file:
S	mathlib.cpp	4339;"	d	file:
SEGID_COUNT	ptlhwdef.h	/^enum { SEGID_ES = 0, SEGID_CS = 1, SEGID_SS = 2, SEGID_DS = 3, SEGID_FS = 4, SEGID_GS = 5, SEGID_COUNT = 6 };$/;"	e	enum:__anon123
SEGID_CS	ptlhwdef.h	/^enum { SEGID_ES = 0, SEGID_CS = 1, SEGID_SS = 2, SEGID_DS = 3, SEGID_FS = 4, SEGID_GS = 5, SEGID_COUNT = 6 };$/;"	e	enum:__anon123
SEGID_DS	ptlhwdef.h	/^enum { SEGID_ES = 0, SEGID_CS = 1, SEGID_SS = 2, SEGID_DS = 3, SEGID_FS = 4, SEGID_GS = 5, SEGID_COUNT = 6 };$/;"	e	enum:__anon123
SEGID_ES	ptlhwdef.h	/^enum { SEGID_ES = 0, SEGID_CS = 1, SEGID_SS = 2, SEGID_DS = 3, SEGID_FS = 4, SEGID_GS = 5, SEGID_COUNT = 6 };$/;"	e	enum:__anon123
SEGID_FS	ptlhwdef.h	/^enum { SEGID_ES = 0, SEGID_CS = 1, SEGID_SS = 2, SEGID_DS = 3, SEGID_FS = 4, SEGID_GS = 5, SEGID_COUNT = 6 };$/;"	e	enum:__anon123
SEGID_GS	ptlhwdef.h	/^enum { SEGID_ES = 0, SEGID_CS = 1, SEGID_SS = 2, SEGID_DS = 3, SEGID_FS = 4, SEGID_GS = 5, SEGID_COUNT = 6 };$/;"	e	enum:__anon123
SEGID_SS	ptlhwdef.h	/^enum { SEGID_ES = 0, SEGID_CS = 1, SEGID_SS = 2, SEGID_DS = 3, SEGID_FS = 4, SEGID_GS = 5, SEGID_COUNT = 6 };$/;"	e	enum:__anon123
SEQEXEC_BARRIER	seqcore.h	/^  SEQEXEC_BARRIER,$/;"	e	enum:__anon150
SEQEXEC_CHECK	seqcore.h	/^  SEQEXEC_CHECK,$/;"	e	enum:__anon150
SEQEXEC_EARLY_EXIT	seqcore.h	/^  SEQEXEC_EARLY_EXIT,$/;"	e	enum:__anon150
SEQEXEC_EXCEPTION	seqcore.h	/^  SEQEXEC_EXCEPTION,$/;"	e	enum:__anon150
SEQEXEC_INTERRUPT	seqcore.h	/^  SEQEXEC_INTERRUPT,$/;"	e	enum:__anon150
SEQEXEC_INVALIDRIP	seqcore.h	/^  SEQEXEC_INVALIDRIP,$/;"	e	enum:__anon150
SEQEXEC_OK	seqcore.h	/^  SEQEXEC_OK = 0,$/;"	e	enum:__anon150
SEQEXEC_RESULT_COUNT	seqcore.h	/^  SEQEXEC_RESULT_COUNT,$/;"	e	enum:__anon150
SEQEXEC_SKIPBLOCK	seqcore.h	/^  SEQEXEC_SKIPBLOCK,$/;"	e	enum:__anon150
SEQEXEC_SMC	seqcore.h	/^  SEQEXEC_SMC,$/;"	e	enum:__anon150
SEQEXEC_UNALIGNED	seqcore.h	/^  SEQEXEC_UNALIGNED,$/;"	e	enum:__anon150
SETFLAG_CF	ptlhwdef.h	/^  SETFLAG_CF = (1 << 1),$/;"	e	enum:__anon134
SETFLAG_COUNT	ptlhwdef.h	/^  SETFLAG_COUNT = 3$/;"	e	enum:__anon134
SETFLAG_OF	ptlhwdef.h	/^  SETFLAG_OF = (1 << 2),$/;"	e	enum:__anon134
SETFLAG_ZF	ptlhwdef.h	/^  SETFLAG_ZF = (1 << 0),$/;"	e	enum:__anon134
SFR	ptlhwdef.h	/^struct SFR {$/;"	s
SIBByte	decode.h	/^  SIBByte() { }$/;"	f	struct:SIBByte
SIBByte	decode.h	/^  SIBByte(const byte& b) { *((byte*)this) = b; }$/;"	f	struct:SIBByte
SIBByte	decode.h	/^struct SIBByte {$/;"	s
SIGN	klibc.cpp	1315;"	d	file:
SIMPLE_SHIFT_LIMIT	ptlhwdef.h	1168;"	d
SIM_THREAD_STACK_SIZE	kernel.cpp	720;"	d	file:
SIZE	dcache-amd-k8.h	/^    static const int SIZE = size;$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
SIZE	dcache.h	/^    static const int SIZE = size;$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
SIZE	ooocore-amd-k8.h	/^    static const int SIZE = size;$/;"	m	struct:OutOfOrderModel::IssueQueue
SIZE	ooocore.h	/^    static const int SIZE = size;$/;"	m	struct:OutOfOrderModel::IssueQueue
SLAB_ALLOC_LARGE_OBJ_THRESH	mm.cpp	/^static const int SLAB_ALLOC_LARGE_OBJ_THRESH = 1024;$/;"	v	file:
SLAB_ALLOC_SLOT_COUNT	mm.cpp	/^static const int SLAB_ALLOC_SLOT_COUNT = (SLAB_ALLOC_LARGE_OBJ_THRESH \/ SlabAllocator::GRANULARITY);$/;"	v	file:
SLAB_PAGE_MAGIC	mm.cpp	/^static const W32 SLAB_PAGE_MAGIC = 0x42414c53; \/\/ 'SLAB'$/;"	v	file:
SMT_ENABLE_LOAD_HOISTING	ooocore.h	758;"	d
SOURCES	spec2000/ammp/Makefile	/^SOURCES = ammp.c eval.c analyze.c anonbon.c noel.c animate.c atoms.c bonds.c \\$/;"	m
SOURCES	spec2000/applu/Makefile	/^SOURCES = applu.f$/;"	m
SOURCES	spec2000/apsi/Makefile	/^SOURCES = apsi.f$/;"	m
SOURCES	spec2000/art/Makefile	/^SOURCES = scanner.c$/;"	m
SOURCES	spec2000/bzip2/Makefile	/^SOURCES = bzip2.c spec.c$/;"	m
SOURCES	spec2000/crafty/Makefile	/^SOURCES = searchr.c search.c repeat.c next.c nextr.c history.c \\$/;"	m
SOURCES	spec2000/eon/Makefile	/^SOURCES = \\$/;"	m
SOURCES	spec2000/equake/Makefile	/^SOURCES = quake.c$/;"	m
SOURCES	spec2000/facerec/Makefile	/^SOURCES = FaceRecTypes.f90 \\$/;"	m
SOURCES	spec2000/fma3d/Makefile	/^SOURCES = fma3d.f90 beam_.f90 include_file_.f90 penta_.f90 segment_set_.f90 \\$/;"	m
SOURCES	spec2000/galgel/Makefile	/^SOURCES = modules.f90 ab.f90 arhbt.f90 arhim.f bifg21.f90 \\$/;"	m
SOURCES	spec2000/gap/Makefile	/^SOURCES = agcollec.c aggroup.c blister.c coding.c costab.c cyclotom.c    \\$/;"	m
SOURCES	spec2000/gcc/Makefile	/^SOURCES = c-parse.c c-lang.c c-lex.c c-pragma.c c-decl.c \\$/;"	m
SOURCES	spec2000/gzip/Makefile	/^SOURCES = bits.c deflate.c gzip.c getopt.c inflate.c lzw.c trees.c unlzh.c unlzw.c unpack.c unzip.c util.c zip.c spec.c$/;"	m
SOURCES	spec2000/lucas/Makefile	/^SOURCES = lucas_distrib_spec.f90$/;"	m
SOURCES	spec2000/mcf/Makefile	/^SOURCES = mcf.c mcfutil.c readmin.c implicit.c pstart.c output.c treeup.c pbla.c pflowup.c psimplex.c pbeampp.c$/;"	m
SOURCES	spec2000/mesa/Makefile	/^SOURCES = accum.c alpha.c alphabuf.c api1.c api2.c attrib.c \\$/;"	m
SOURCES	spec2000/mgrid/Makefile	/^SOURCES = mgrid.f$/;"	m
SOURCES	spec2000/parser/Makefile	/^SOURCES = analyze-linkage.c and.c build-disjuncts.c extract-links.c \\$/;"	m
SOURCES	spec2000/perlbmk/Makefile	/^SOURCES = av.c byterun.c deb.c doio.c doop.c dump.c ebcdic.c \\$/;"	m
SOURCES	spec2000/sixtrack/Makefile	/^SOURCES = abend.f adia.f adib.f ambm6.f analie6.f betalf.f block.f blockdis.f caconv.f calrms.f chroma.f cinvar.f clor6.f clorb2.f clorb.f combel.f comnul.f corrorb.f cpart6.f cphase.f cpltwis.f creat6.f ctrbasi6.f dacond6.f dacopd6.f dalie6s.f dalind6.f daprid6.f daten.f decoup.f detune.f dinv.f dist1.f distance.f dlie6.f eig66.f envada.f envar.f envardis.f envars.f envarsv.f envquad.f errf.f errff.f error.f fexpo6.f fft.f fit.f flush.f forest6.f foxys.f gam6.f gbm6.f gofix6.f hbook.f htal.f htbl.f htls.f htrl.f htul.f hyper6.f igmeta.f intd6.f intepr.f join.f lie6.f linopt.f loesd.f lostpar2.f lostpar3.f lostpart.f maincr.f mainia6.f matrix.f maxmin.f midbloc6.f mul66.f mywwerf.f orbinit.f ord.f orderma6.f phasad.f postpr.f putorb.f qmod.f ranecu.f resb6.f resex.f resl6.f rext6.f ripple.f rmod.f rotatio6.f search.f sinpro.f sixdaco6.f subre.f subsea.f sumpos.f synoda.f synuthck.f take6.f taked6.f thck4d.f thck6d.f thck6dua.f thin4d.f thin6d.f thin6dua.f trauthck.f trauthin.f trx6.f tuer6.f umlau6.f umlauf.f write4.f write6.f writebin.f writelin.f wzset.f wzsubf.f wzsubv.f xuflow.f$/;"	m
SOURCES	spec2000/swim/Makefile	/^SOURCES = swim.f$/;"	m
SOURCES	spec2000/twolf/Makefile	/^SOURCES = acceptt.c addimp.c alignfeed.c buildimp.c changrid.c clean.c   \\$/;"	m
SOURCES	spec2000/vortex/Makefile	/^SOURCES = bitvec.c bmt.c bmt0.c bmt01.c bmt10.c bmtlib.c bmtobj.c        \\$/;"	m
SOURCES	spec2000/vpr/Makefile	/^SOURCES = main.c util.c read_netlist.c read_arch.c place.c route.c draw.c graphics.c stats.c segment_stats.c rr_graph.c rr_graph2.c rr_graph_sbox.c rr_graph_util.c rr_graph_timing_params.c rr_graph_area.c check_rr_graph.c check_route.c hash.c read_place.c$/;"	m
SOURCES	spec2000/wupwise/Makefile	/^SOURCES = dcabs1.f dlaran.f dlarnd.f dznrm2.f gammul.f init.f lsame.f matmul.f muldeo.f muldoe.f phinit.f rndcnf.f rndphi.f su3mul.f uinith.f wupwise.f xerbla.f zaxpy.f zcopy.f zdotc.f zgemm.f zscal.f$/;"	m
SPACE	klibc.cpp	1317;"	d	file:
SPATChunk	kernel.h	/^  typedef byte SPATChunk[SPAT_BYTES_PER_CHUNK];$/;"	t	class:AddressSpace
SPAT_BYTES	kernel.h	92;"	d
SPAT_BYTES_PER_CHUNK	kernel.h	83;"	d
SPAT_PAGES_PER_CHUNK	kernel.h	82;"	d
SPAT_PAGES_PER_CHUNK_BITS	kernel.h	80;"	d
SPAT_TOPLEVEL_CHUNKS	kernel.h	81;"	d
SPAT_TOPLEVEL_CHUNK_BITS	kernel.h	79;"	d
SPECIAL	klibc.cpp	1319;"	d	file:
SS	uopimpl.cpp	1066;"	d	file:
SSEType	ptlhwdef.h	/^  SSEType() { }$/;"	f	union:SSEType
SSEType	ptlhwdef.h	/^  SSEType(W64 w) { w64 = w; }$/;"	f	union:SSEType
SSEType	ptlhwdef.h	/^union SSEType {$/;"	u
STARmsr	ptlxen.cpp	/^struct STARmsr {$/;"	s	file:
STATE_DELIVER_TO_L1	dcache-amd-k8.h	/^  enum { STATE_IDLE, STATE_DELIVER_TO_L3, STATE_DELIVER_TO_L2, STATE_DELIVER_TO_L1 };$/;"	e	enum:CacheSubsystem::__anon151
STATE_DELIVER_TO_L1	dcache.h	/^  enum { STATE_IDLE, STATE_DELIVER_TO_L3, STATE_DELIVER_TO_L2, STATE_DELIVER_TO_L1 };$/;"	e	enum:CacheSubsystem::__anon25
STATE_DELIVER_TO_L2	dcache-amd-k8.h	/^  enum { STATE_IDLE, STATE_DELIVER_TO_L3, STATE_DELIVER_TO_L2, STATE_DELIVER_TO_L1 };$/;"	e	enum:CacheSubsystem::__anon151
STATE_DELIVER_TO_L2	dcache.h	/^  enum { STATE_IDLE, STATE_DELIVER_TO_L3, STATE_DELIVER_TO_L2, STATE_DELIVER_TO_L1 };$/;"	e	enum:CacheSubsystem::__anon25
STATE_DELIVER_TO_L3	dcache-amd-k8.h	/^  enum { STATE_IDLE, STATE_DELIVER_TO_L3, STATE_DELIVER_TO_L2, STATE_DELIVER_TO_L1 };$/;"	e	enum:CacheSubsystem::__anon151
STATE_DELIVER_TO_L3	dcache.h	/^  enum { STATE_IDLE, STATE_DELIVER_TO_L3, STATE_DELIVER_TO_L2, STATE_DELIVER_TO_L1 };$/;"	e	enum:CacheSubsystem::__anon25
STATE_IDLE	dcache-amd-k8.h	/^  enum { STATE_IDLE, STATE_DELIVER_TO_L3, STATE_DELIVER_TO_L2, STATE_DELIVER_TO_L1 };$/;"	e	enum:CacheSubsystem::__anon151
STATE_IDLE	dcache.h	/^  enum { STATE_IDLE, STATE_DELIVER_TO_L3, STATE_DELIVER_TO_L2, STATE_DELIVER_TO_L1 };$/;"	e	enum:CacheSubsystem::__anon25
STATS_ONLY	stats.h	17;"	d
STATS_ONLY	stats.h	22;"	d
STDOBJS	Makefile	/^STDOBJS = glibc.o$/;"	m
STQ_SIZE	ooocore-amd-k8.h	/^  const int STQ_SIZE = 44;$/;"	v
STQ_SIZE	ooocore.h	/^  const int STQ_SIZE = 32;$/;"	v
STR	ptlxen.cpp	24;"	d	file:
STU0	ooocore-amd-k8.h	286;"	d
STU0	ooocore.h	293;"	d
STU0	ooocore.h	97;"	d
STU1	ooocore-amd-k8.h	287;"	d
STU1	ooocore.h	294;"	d
STU1	ooocore.h	98;"	d
SUB2	mathlib.cpp	563;"	d	file:
SUB2A	mathlib.cpp	620;"	d	file:
SUBDIRS	spec2000/Makefile	/^SUBDIRS = gzip vpr gcc mcf crafty eon bzip2 twolf perlbmk parser gap vortex wupwise swim mgrid applu mesa art equake apsi sixtrack ammp fma3d lucas facerec$/;"	m
SVGCreator	ptlstats.cpp	/^  SVGCreator(ostream& os, float width, float height) {$/;"	f	class:SVGCreator
SVGCreator	ptlstats.cpp	/^class SVGCreator {$/;"	c	file:
SVNDATE	Makefile	/^	SVNDATE=unknown$/;"	m
SVNDATE	Makefile	/^SVNDATE=$(shell svn info | grep "Last Changed Date" | cut -d " " -f4)$/;"	m
SVNREV	Makefile	/^	SVNREV=0$/;"	m
SVNREV	Makefile	/^SVNREV=$(shell svn info | grep "Last Changed Rev" | cut -d " " -f4)$/;"	m
SYSCALL_SEMANTICS_INT80	kernel.h	/^enum { SYSCALL_SEMANTICS_INT80, SYSCALL_SEMANTICS_SYSCALL, SYSCALL_SEMANTICS_SYSENTER };$/;"	e	enum:__anon24
SYSCALL_SEMANTICS_SYSCALL	kernel.h	/^enum { SYSCALL_SEMANTICS_INT80, SYSCALL_SEMANTICS_SYSCALL, SYSCALL_SEMANTICS_SYSENTER };$/;"	e	enum:__anon24
SYSCALL_SEMANTICS_SYSENTER	kernel.h	/^enum { SYSCALL_SEMANTICS_INT80, SYSCALL_SEMANTICS_SYSCALL, SYSCALL_SEMANTICS_SYSENTER };$/;"	e	enum:__anon24
ScaleOperator	datastore.h	/^  ScaleOperator(double coeff_): coeff(coeff_) { }; $/;"	f	struct:ScaleOperator
ScaleOperator	datastore.h	/^struct ScaleOperator {$/;"	s
ScopedLock	superstl.h	/^    ScopedLock(T& lock_): lock(lock_) { lock.acquire(); }$/;"	f	struct:superstl::ScopedLock
ScopedLock	superstl.h	/^  struct ScopedLock {$/;"	s	namespace:superstl
SearchableChunkList16Entry	superstl.h	/^    SearchableChunkList16Entry() {$/;"	f	struct:superstl::SearchableChunkList16Entry
SearchableChunkList16Entry	superstl.h	/^  struct SearchableChunkList16Entry {$/;"	s	namespace:superstl
SegmentDescriptor	ptlhwdef.h	/^  SegmentDescriptor() { }$/;"	f	struct:SegmentDescriptor
SegmentDescriptor	ptlhwdef.h	/^  SegmentDescriptor(W64 rawbits) { *((W64*)this) = rawbits; }$/;"	f	struct:SegmentDescriptor
SegmentDescriptor	ptlhwdef.h	/^struct SegmentDescriptor { $/;"	s
SegmentDescriptorCache	ptlhwdef.h	/^  SegmentDescriptorCache() { }$/;"	f	struct:SegmentDescriptorCache
SegmentDescriptorCache	ptlhwdef.h	/^struct SegmentDescriptorCache {$/;"	s
SelfHashtable	superstl.h	/^    SelfHashtable() {$/;"	f	struct:superstl::SelfHashtable
SelfHashtable	superstl.h	/^  struct SelfHashtable {$/;"	s	namespace:superstl
SequentialCore	seqcore.cpp	/^  SequentialCore(): ctx(contextof(0)), cmtrec(null) { }$/;"	f	struct:SequentialCore
SequentialCore	seqcore.cpp	/^  SequentialCore(Context& ctx_, CommitRecord* cmtrec_ = null): ctx(ctx_), cmtrec(cmtrec_) { }$/;"	f	struct:SequentialCore
SequentialCore	seqcore.cpp	/^struct SequentialCore {$/;"	s	file:
SequentialCoreEvent	seqcore.cpp	/^PrintOperator(SequentialCoreEvent);$/;"	v
SequentialCoreEvent	seqcore.cpp	/^struct SequentialCoreEvent {$/;"	s	file:
SequentialCoreEventLog	seqcore.cpp	/^  SequentialCoreEventLog() { start = null; end = null; tail = null; logfile = null; }$/;"	f	struct:SequentialCoreEventLog
SequentialCoreEventLog	seqcore.cpp	/^struct SequentialCoreEventLog {$/;"	s	file:
SequentialMachine	seqcore.cpp	/^  SequentialMachine(const char* name) {$/;"	f	struct:SequentialMachine
SequentialMachine	seqcore.cpp	/^struct SequentialMachine: public PTLsimMachine {$/;"	s	file:
Set	logic.h	/^  typedef FullyAssociativeArray<T, V, waycount, stats> Set;$/;"	t	struct:AssociativeArray
Set	logic.h	/^  typedef LockableFullyAssociativeArray<T, V, waycount, stats> Set;$/;"	t	struct:LockableAssociativeArray
Set	logic.h	/^  typedef LockableFullyAssociativeArray<T, V, waycount, stats> Set;$/;"	t	struct:LockableCommitRollbackAssociativeArray
SlabAllocator	mm.cpp	/^  SlabAllocator() { }$/;"	f	struct:SlabAllocator
SlabAllocator	mm.cpp	/^struct SlabAllocator {$/;"	s	file:
SortPrecomputedIndexListComparator	superstl.h	/^    SortPrecomputedIndexListComparator(const T* values): v(values) { }$/;"	f	struct:superstl::SortPrecomputedIndexListComparator
SortPrecomputedIndexListComparator	superstl.h	/^  struct SortPrecomputedIndexListComparator {$/;"	s	namespace:superstl
Spinlock	superstl.h	/^    Spinlock() { reset(); }$/;"	f	struct:superstl::Spinlock
Spinlock	superstl.h	/^  struct Spinlock {$/;"	s	namespace:superstl
StateList	ooocore-amd-k8.h	/^    StateList() { count = 0; listid = 0; }$/;"	f	struct:OutOfOrderModel::StateList
StateList	ooocore-amd-k8.h	/^    StateList(const char* name, ListOfStateLists& lol, W32 flags = 0) {  $/;"	f	struct:OutOfOrderModel::StateList
StateList	ooocore-amd-k8.h	/^  struct StateList: public selfqueuelink {$/;"	s	namespace:OutOfOrderModel
StateList	ooocore.h	/^    StateList() { count = 0; listid = 0; }$/;"	f	struct:OutOfOrderModel::StateList
StateList	ooocore.h	/^    StateList(const char* name, ListOfStateLists& lol, W32 flags = 0) {  $/;"	f	struct:OutOfOrderModel::StateList
StateList	ooocore.h	/^  struct StateList: public selfqueuelink {$/;"	s	namespace:OutOfOrderModel
StatsFileHeader	datastore.h	/^struct StatsFileHeader {$/;"	s
StatsFileReader	datastore.h	/^  StatsFileReader() { dst = null; buf = null; bufsub = null; }$/;"	f	struct:StatsFileReader
StatsFileReader	datastore.h	/^struct StatsFileReader {$/;"	s
StatsFileWriter	datastore.h	/^  StatsFileWriter() { }$/;"	f	struct:StatsFileWriter
StatsFileWriter	datastore.h	/^struct StatsFileWriter {$/;"	s
StatsIndexRecordLink	datastore.h	/^  StatsIndexRecordLink() { }$/;"	f	struct:StatsIndexRecordLink
StatsIndexRecordLink	datastore.h	/^  StatsIndexRecordLink(W64 uuid, const char* name) {$/;"	f	struct:StatsIndexRecordLink
StatsIndexRecordLink	datastore.h	/^struct StatsIndexRecordLink: public selflistlink {$/;"	s
SwitchToSimThunkCode	kernel.cpp	/^  SwitchToSimThunkCode() { }$/;"	f	struct:SwitchToSimThunkCode
SwitchToSimThunkCode	kernel.cpp	/^struct SwitchToSimThunkCode {$/;"	s	file:
SynchronousRegisterFile	logic.h	/^  SynchronousRegisterFile() { $/;"	f	struct:SynchronousRegisterFile
SynchronousRegisterFile	logic.h	/^struct SynchronousRegisterFile {$/;"	s
T	superstl.h	/^    typedef byte T;$/;"	t	struct:superstl::Spinlock
T	superstl.h	/^    typedef unsigned long T;$/;"	t	class:superstl::bitvec
T	superstl.h	/^    typedef unsigned long T;$/;"	t	struct:superstl::bitvecbase
TABLE_TYPE_HTML	ptlstats.cpp	/^enum { TABLE_TYPE_TEXT, TABLE_TYPE_LATEX, TABLE_TYPE_HTML };$/;"	e	enum:__anon95	file:
TABLE_TYPE_LATEX	ptlstats.cpp	/^enum { TABLE_TYPE_TEXT, TABLE_TYPE_LATEX, TABLE_TYPE_HTML };$/;"	e	enum:__anon95	file:
TABLE_TYPE_TEXT	ptlstats.cpp	/^enum { TABLE_TYPE_TEXT, TABLE_TYPE_LATEX, TABLE_TYPE_HTML };$/;"	e	enum:__anon95	file:
TAUSWORTHE	superstl.cpp	814;"	d	file:
TBF_EXCEPTION	ptlxen.cpp	/^  TBF_EXCEPTION          = 1,$/;"	e	enum:__anon112	file:
TBF_EXCEPTION_ERRCODE	ptlxen.cpp	/^  TBF_EXCEPTION_ERRCODE  = 2,$/;"	e	enum:__anon112	file:
TBF_FAILSAFE	ptlxen.cpp	/^  TBF_FAILSAFE           = 16$/;"	e	enum:__anon112	file:
TBF_INTERRUPT	ptlxen.cpp	/^  TBF_INTERRUPT          = 8,$/;"	e	enum:__anon112	file:
TEMPFILES	spec2000/bzip2/Makefile	/^TEMPFILES = $(FILENAME).bz2$/;"	m
TEMPFILES	spec2000/crafty/Makefile	/^TEMPFILES = crafty.out$/;"	m
TEMPFILES	spec2000/gzip/Makefile	/^TEMPFILES = $(FILENAME).gz $/;"	m
TEMPFILES	spec2000/mesa/Makefile	/^TEMPFILES = mesa.ppm$/;"	m
TEMPFILES	spec2000/twolf/Makefile	/^TEMPFILES = ref.out ref.net.out ref.sav$/;"	m
TEMPFILES	spec2000/vortex/Makefile	/^TEMPFILES = lendian.out$/;"	m
TEMPFILES	spec2000/vpr/Makefile	/^TEMPFILES = placed.out routed.out$/;"	m
TLBInfo	cpuid.cpp	/^union TLBInfo {$/;"	u	file:
TOLERANCE	globals.h	546;"	d
TOPLEVEL	Makefile	/^TOPLEVEL = ptlsim ptlstats ptlcalls.o ptlcalls-32bit.o cpuid$/;"	m
TRANSREG_COUNT	ptlhwdef.h	157;"	d
TRAP_alignment_check	lowlevel-64bit-xen.S	/^#define TRAP_alignment_check  17$/;"	d
TRAP_bounds	lowlevel-64bit-xen.S	/^#define TRAP_bounds            5$/;"	d
TRAP_copro_error	lowlevel-64bit-xen.S	/^#define TRAP_copro_error      16$/;"	d
TRAP_copro_seg	lowlevel-64bit-xen.S	/^#define TRAP_copro_seg         9$/;"	d
TRAP_debug	lowlevel-64bit-xen.S	/^#define TRAP_debug             1$/;"	d
TRAP_deferred_nmi	lowlevel-64bit-xen.S	/^#define TRAP_deferred_nmi     31$/;"	d
TRAP_divide_error	lowlevel-64bit-xen.S	/^#define TRAP_divide_error      0$/;"	d
TRAP_double_fault	lowlevel-64bit-xen.S	/^#define TRAP_double_fault      8$/;"	d
TRAP_gp_fault	lowlevel-64bit-xen.S	/^#define TRAP_gp_fault         13$/;"	d
TRAP_int3	lowlevel-64bit-xen.S	/^#define TRAP_int3              3$/;"	d
TRAP_invalid_op	lowlevel-64bit-xen.S	/^#define TRAP_invalid_op        6$/;"	d
TRAP_invalid_tss	lowlevel-64bit-xen.S	/^#define TRAP_invalid_tss      10$/;"	d
TRAP_machine_check	lowlevel-64bit-xen.S	/^#define TRAP_machine_check    18$/;"	d
TRAP_nmi	lowlevel-64bit-xen.S	/^#define TRAP_nmi               2$/;"	d
TRAP_no_device	lowlevel-64bit-xen.S	/^#define TRAP_no_device         7$/;"	d
TRAP_no_segment	lowlevel-64bit-xen.S	/^#define TRAP_no_segment       11$/;"	d
TRAP_overflow	lowlevel-64bit-xen.S	/^#define TRAP_overflow          4$/;"	d
TRAP_page_fault	lowlevel-64bit-xen.S	/^#define TRAP_page_fault       14$/;"	d
TRAP_simd_error	lowlevel-64bit-xen.S	/^#define TRAP_simd_error       19$/;"	d
TRAP_spurious_int	lowlevel-64bit-xen.S	/^#define TRAP_spurious_int     15$/;"	d
TRAP_stack_error	lowlevel-64bit-xen.S	/^#define TRAP_stack_error      12$/;"	d
TWO	mathlib.cpp	1026;"	d	file:
TWO10	mathlib.cpp	1028;"	d	file:
TWO1023	mathlib.cpp	/^  static const volatile double TWO1023 = 8.988465674311579539e+307;$/;"	v	file:
TWO18	mathlib.cpp	1029;"	d	file:
TWO19	mathlib.cpp	1030;"	d	file:
TWO23	mathlib.cpp	1031;"	d	file:
TWO5	mathlib.cpp	1027;"	d	file:
TWO52	mathlib.cpp	1032;"	d	file:
TWO57	mathlib.cpp	1033;"	d	file:
TWO71	mathlib.cpp	1034;"	d	file:
TWO8	mathlib.cpp	2006;"	d	file:
TWOM1000	mathlib.cpp	/^  static const volatile double TWOM1000 = 9.3326361850321887899e-302;$/;"	v	file:
TWOM1032	mathlib.cpp	1035;"	d	file:
TableCreator	ptlstats.cpp	/^  TableCreator(ostream& os_, dynarray<char*>& rownames_, dynarray<char*>& colnames_):$/;"	f	class:TableCreator
TableCreator	ptlstats.cpp	/^class TableCreator {$/;"	c	file:
ThreadContext	ooocore-amd-k8.h	/^    ThreadContext(OutOfOrderCore& core_, int threadid_, Context& ctx_): core(core_), threadid(threadid_), ctx(ctx_) {$/;"	f	struct:OutOfOrderModel::ThreadContext
ThreadContext	ooocore-amd-k8.h	/^  struct ThreadContext {$/;"	s	namespace:OutOfOrderModel
ThreadContext	ooocore.h	/^    ThreadContext(OutOfOrderCore& core_, int threadid_, Context& ctx_): core(core_), threadid(threadid_), ctx(ctx_) {$/;"	f	struct:OutOfOrderModel::ThreadContext
ThreadContext	ooocore.h	/^  struct ThreadContext {$/;"	s	namespace:OutOfOrderModel
ThreadState	kernel.h	/^struct ThreadState {$/;"	s
ThreadState_rsp	lowlevel-32bit.S	/^#define ThreadState_rsp                               4*1$/;"	d
ThreadState_rsp	lowlevel-64bit.S	/^#define ThreadState_rsp                               8*1$/;"	d
ThreadState_self	lowlevel-32bit.S	/^#define ThreadState_self                              4*0$/;"	d
ThreadState_self	lowlevel-64bit.S	/^#define ThreadState_self                              8*0$/;"	d
ThreadState_simcall	lowlevel-32bit.S	/^#define ThreadState_simcall                           4*2$/;"	d
ThreadState_simcall	lowlevel-64bit.S	/^#define ThreadState_simcall                           8*2$/;"	d
TraceDecoder	decode-core.cpp	/^TraceDecoder::TraceDecoder(Context& ctx, Waddr rip) {$/;"	f	class:TraceDecoder
TraceDecoder	decode-core.cpp	/^TraceDecoder::TraceDecoder(Waddr rip, bool use64, bool kernel, bool df) {$/;"	f	class:TraceDecoder
TraceDecoder	decode-core.cpp	/^TraceDecoder::TraceDecoder(const RIPVirtPhys& rvp) {$/;"	f	class:TraceDecoder
TraceDecoder	decode.h	/^struct TraceDecoder {$/;"	s
TransOp	ptlhwdef.h	/^  TransOp() { }$/;"	f	struct:TransOp
TransOp	ptlhwdef.h	/^  TransOp(int opcode, int rd, int ra, int rb, int rc, int size, W64s rbimm = 0, W64s rcimm = 0, W32 setflags = 0, int memid = 0) {$/;"	f	struct:TransOp
TransOp	ptlhwdef.h	/^struct TransOp: public TransOpBase {$/;"	s
TransOpBase	ptlhwdef.h	/^struct TransOpBase {$/;"	s
TransOpBuffer	ptlsim.h	/^  TransOpBuffer() { reset(); }$/;"	f	struct:TransOpBuffer
TransOpBuffer	ptlsim.h	/^struct TransOpBuffer {$/;"	s
TransactionalMemory	seqcore.cpp	/^  TransactionalMemory() {$/;"	f	struct:TransactionalMemory
TransactionalMemory	seqcore.cpp	/^struct TransactionalMemory {$/;"	s	file:
TranslationLookasideBuffer	dcache-amd-k8.h	/^    TranslationLookasideBuffer(): base_t() { }$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
TranslationLookasideBuffer	dcache-amd-k8.h	/^  struct TranslationLookasideBuffer: public FullyAssociativeTagsNbitOneHot<size, 40> {$/;"	s	namespace:CacheSubsystem
TranslationLookasideBuffer	dcache.h	/^    TranslationLookasideBuffer(): base_t() { }$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
TranslationLookasideBuffer	dcache.h	/^  struct TranslationLookasideBuffer: public FullyAssociativeTagsNbitOneHot<size, 40> {$/;"	s	namespace:CacheSubsystem
TrapTarget	ptlhwdef.h	/^struct TrapTarget {$/;"	s
TwoLevelPredictor	branchpred.cpp	/^struct TwoLevelPredictor {$/;"	s	file:
UINT_MAX	xen-types.h	91;"	d
ULONG_MAX	xen-types.h	103;"	d
UNALIGNED_PREDICTOR_SIZE	ooocore-amd-k8.h	/^  static const int UNALIGNED_PREDICTOR_SIZE = 4096;$/;"	v
UNALIGNED_PREDICTOR_SIZE	ooocore.h	/^  static const int UNALIGNED_PREDICTOR_SIZE = 4096;$/;"	v
USE_FORTRAN	spec2000/applu/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/apsi/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/facerec/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/fma3d/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/galgel/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/lucas/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/mgrid/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/sixtrack/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/swim/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_FORTRAN	spec2000/wupwise/Makefile	/^USE_FORTRAN = 1$/;"	m
USE_TLB	dcache-amd-k8.h	78;"	d
USE_TLB	dcache.h	81;"	d
UserContext	ptlhwdef.h	/^typedef W64 UserContext[ARCHREG_COUNT];$/;"	t
VirtAddr	ptlhwdef.h	/^union VirtAddr {$/;"	u
W	decode-sse.cpp	201;"	d	file:
W	decode-sse.cpp	217;"	d	file:
W	decode-sse.cpp	422;"	d	file:
W	decode-sse.cpp	432;"	d	file:
W128	superstl.cpp	/^  struct W128 {$/;"	s	namespace:superstl	file:
W128s	superstl.cpp	/^  struct W128s {$/;"	s	namespace:superstl	file:
W16	globals.h	/^typedef unsigned short W16;$/;"	t
W16	ptlcalls.h	/^typedef unsigned short W16;$/;"	t
W16	superstl.cpp	/^  decl_div_rem(W16);$/;"	v
W16	superstl.cpp	/^  decl_div_rem_s(W16);$/;"	v
W16s	globals.h	/^typedef signed short W16s;$/;"	t
W32	globals.h	/^typedef unsigned int W32;$/;"	t
W32	ptlcalls.h	/^typedef unsigned int W32;$/;"	t
W32	superstl.cpp	/^  decl_div_rem(W32);$/;"	v
W32	superstl.cpp	/^  decl_div_rem_s(W32);$/;"	v
W32orFloat	globals.h	/^union W32orFloat { W32 w; float f; };$/;"	u
W32s	globals.h	/^typedef signed int W32s;$/;"	t
W32string	loader.h	16;"	d
W32toFloat	globals.h	/^static inline const float W32toFloat(W32 x) { union W32orFloat c; c.w = x; return c.f; }$/;"	f
W64	globals.h	/^typedef unsigned long long W64;$/;"	t
W64	ptlcalls.h	/^typedef unsigned long long W64;$/;"	t
W64	superstl.cpp	/^  decl_div_rem(W64);$/;"	v
W64	superstl.cpp	/^  decl_div_rem_s(W64);$/;"	v
W64_CONSTRAINT	uopimpl.cpp	1043;"	d	file:
W64_CONSTRAINT	uopimpl.cpp	1047;"	d	file:
W64orDouble	globals.h	/^union W64orDouble {$/;"	u
W64s	globals.h	/^typedef signed long long W64s;$/;"	t
W64string	loader.h	19;"	d
W64toDouble	globals.h	/^static inline const double W64toDouble(W64 x) { union W64orDouble c; c.w = x; return c.d; }$/;"	f
W8	globals.h	/^typedef unsigned char W8;$/;"	t
W8	superstl.cpp	/^  decl_div_rem(W8);$/;"	v
W8	superstl.cpp	/^  decl_div_rem_s(W8);$/;"	v
W8s	globals.h	/^typedef signed char W8s;$/;"	t
WRITEBACK_WIDTH	ooocore-amd-k8.h	/^  const int WRITEBACK_WIDTH = 3;$/;"	v
WRITEBACK_WIDTH	ooocore.h	/^  const int WRITEBACK_WIDTH = 4;$/;"	v
Waddr	globals.h	/^typedef W32 Waddr;$/;"	t
Waddr	globals.h	/^typedef W64 Waddr;$/;"	t
Waddr	ptlcalls.h	/^typedef W32 Waddr;$/;"	t
Waddr	ptlcalls.h	/^typedef W64 Waddr;$/;"	t
Wmax	uopimpl.cpp	/^typedef W32 Wmax;$/;"	t	file:
Wmax	uopimpl.cpp	/^typedef W64 Wmax;$/;"	t	file:
X	mathlib.cpp	1496;"	d	file:
X	mathlib.cpp	992;"	d	file:
X86_CR0_AM	ptlhwdef.h	658;"	d
X86_CR0_CD	ptlhwdef.h	660;"	d
X86_CR0_EM	ptlhwdef.h	653;"	d
X86_CR0_ET	ptlhwdef.h	655;"	d
X86_CR0_MP	ptlhwdef.h	652;"	d
X86_CR0_NE	ptlhwdef.h	656;"	d
X86_CR0_NW	ptlhwdef.h	659;"	d
X86_CR0_PE	ptlhwdef.h	651;"	d
X86_CR0_PG	ptlhwdef.h	661;"	d
X86_CR0_TS	ptlhwdef.h	654;"	d
X86_CR0_WP	ptlhwdef.h	657;"	d
X86_CR4_DE	ptlhwdef.h	676;"	d
X86_CR4_MCE	ptlhwdef.h	679;"	d
X86_CR4_OSFXSR	ptlhwdef.h	682;"	d
X86_CR4_OSXMMEXCPT	ptlhwdef.h	683;"	d
X86_CR4_PAE	ptlhwdef.h	678;"	d
X86_CR4_PCE	ptlhwdef.h	681;"	d
X86_CR4_PGE	ptlhwdef.h	680;"	d
X86_CR4_PSE	ptlhwdef.h	677;"	d
X86_CR4_PVI	ptlhwdef.h	674;"	d
X86_CR4_TSD	ptlhwdef.h	675;"	d
X86_CR4_VME	ptlhwdef.h	673;"	d
X86_CR4_VMXE	ptlhwdef.h	684;"	d
X86_EXT_FEATURE_CID	decode-complex.cpp	184;"	d	file:
X86_EXT_FEATURE_CX16	decode-complex.cpp	185;"	d	file:
X86_EXT_FEATURE_DSCPL	decode-complex.cpp	181;"	d	file:
X86_EXT_FEATURE_EST	decode-complex.cpp	182;"	d	file:
X86_EXT_FEATURE_MWAIT	decode-complex.cpp	180;"	d	file:
X86_EXT_FEATURE_TM2	decode-complex.cpp	183;"	d	file:
X86_EXT_FEATURE_XMM3	decode-complex.cpp	179;"	d	file:
X86_EXT_FEATURE_XTPR	decode-complex.cpp	186;"	d	file:
X86_FEATURE_ACC	decode-complex.cpp	158;"	d	file:
X86_FEATURE_ACPI	decode-complex.cpp	150;"	d	file:
X86_FEATURE_APIC	decode-complex.cpp	136;"	d	file:
X86_FEATURE_BIT10	decode-complex.cpp	137;"	d	file:
X86_FEATURE_BIT31	decode-complex.cpp	160;"	d	file:
X86_FEATURE_CLFL	decode-complex.cpp	147;"	d	file:
X86_FEATURE_CMOV	decode-complex.cpp	142;"	d	file:
X86_FEATURE_CX8	decode-complex.cpp	135;"	d	file:
X86_FEATURE_DE	decode-complex.cpp	128;"	d	file:
X86_FEATURE_DTES	decode-complex.cpp	149;"	d	file:
X86_FEATURE_FPU	decode-complex.cpp	126;"	d	file:
X86_FEATURE_FXSR	decode-complex.cpp	153;"	d	file:
X86_FEATURE_HT	decode-complex.cpp	157;"	d	file:
X86_FEATURE_IA64	decode-complex.cpp	159;"	d	file:
X86_FEATURE_MCA	decode-complex.cpp	141;"	d	file:
X86_FEATURE_MCE	decode-complex.cpp	133;"	d	file:
X86_FEATURE_MMX	decode-complex.cpp	151;"	d	file:
X86_FEATURE_MSR	decode-complex.cpp	131;"	d	file:
X86_FEATURE_MTRR	decode-complex.cpp	139;"	d	file:
X86_FEATURE_NX	decode-complex.cpp	148;"	d	file:
X86_FEATURE_PAE	decode-complex.cpp	132;"	d	file:
X86_FEATURE_PAT	decode-complex.cpp	144;"	d	file:
X86_FEATURE_PGE	decode-complex.cpp	140;"	d	file:
X86_FEATURE_PN	decode-complex.cpp	146;"	d	file:
X86_FEATURE_PSE	decode-complex.cpp	129;"	d	file:
X86_FEATURE_PSE36	decode-complex.cpp	145;"	d	file:
X86_FEATURE_SEP	decode-complex.cpp	138;"	d	file:
X86_FEATURE_SNOOP	decode-complex.cpp	156;"	d	file:
X86_FEATURE_TSC	decode-complex.cpp	130;"	d	file:
X86_FEATURE_VME	decode-complex.cpp	127;"	d	file:
X86_FEATURE_XMM	decode-complex.cpp	154;"	d	file:
X86_FEATURE_XMM2	decode-complex.cpp	155;"	d	file:
X86_VENDOR_EXT_FEATURE_CMP_LEGACY	decode-complex.cpp	209;"	d	file:
X86_VENDOR_EXT_FEATURE_LAHF_LM	decode-complex.cpp	208;"	d	file:
X86_VENDOR_EXT_FEATURE_SVM	decode-complex.cpp	210;"	d	file:
X86_VENDOR_FEATURE_3DNOW	decode-complex.cpp	200;"	d	file:
X86_VENDOR_FEATURE_3DNOWEXT	decode-complex.cpp	199;"	d	file:
X86_VENDOR_FEATURE_FXSR_OPT	decode-complex.cpp	196;"	d	file:
X86_VENDOR_FEATURE_LM	decode-complex.cpp	198;"	d	file:
X86_VENDOR_FEATURE_MMXEXT	decode-complex.cpp	195;"	d	file:
X86_VENDOR_FEATURE_RDTSCP	decode-complex.cpp	197;"	d	file:
X86_VENDOR_FEATURE_SYSCALL	decode-complex.cpp	194;"	d	file:
X87ControlWord	ptlhwdef.h	/^  X87ControlWord() { }$/;"	f	struct:X87ControlWord
X87ControlWord	ptlhwdef.h	/^  X87ControlWord(const W16& w) { *((W16*)this) = w; }$/;"	f	struct:X87ControlWord
X87ControlWord	ptlhwdef.h	/^struct X87ControlWord {$/;"	s
X87Reg	ptlhwdef.h	/^typedef byte X87Reg[10];$/;"	t
X87RegPadded	ptlhwdef.h	/^struct X87RegPadded {$/;"	s
X87State	ptlhwdef.h	/^struct X87State {$/;"	s
X87StatusWord	ptlhwdef.h	/^  X87StatusWord() { }$/;"	f	struct:X87StatusWord
X87StatusWord	ptlhwdef.h	/^  X87StatusWord(const W16& w) { *((W16*)this) = w; }$/;"	f	struct:X87StatusWord
X87StatusWord	ptlhwdef.h	/^struct X87StatusWord {$/;"	s
XEN_DOMINF_paused	ptlmon.cpp	1083;"	d	file:
XEN_EMULATE_PREFIX	cpuid.cpp	86;"	d	file:
XMMReg	ptlhwdef.h	/^struct XMMReg {$/;"	s
XORCacheIndexingFunction	logic.h	/^struct XORCacheIndexingFunction {$/;"	s
XenController	ptlmon.cpp	/^  XenController() { reset(); }$/;"	f	struct:XenController
XenController	ptlmon.cpp	/^  XenController(int domain) {$/;"	f	struct:XenController
XenController	ptlmon.cpp	/^struct XenController {$/;"	s	file:
Y	mathlib.cpp	1497;"	d	file:
Y	mathlib.cpp	993;"	d	file:
Z	mathlib.cpp	1498;"	d	file:
Z	mathlib.cpp	994;"	d	file:
ZAPS	uopimpl.cpp	104;"	d	file:
ZERO	mathlib.cpp	1023;"	d	file:
ZERO	mathlib.cpp	1850;"	d	file:
ZERO	mathlib.cpp	2003;"	d	file:
ZEROPAD	klibc.cpp	1314;"	d	file:
_	decode-core.cpp	426;"	d	file:
_	globals.h	424;"	d
_BASELIBC_H	klibc.h	12;"	d
_BRANCHPRED_H_	branchpred.h	12;"	d
_C	klibc.cpp	557;"	d	file:
_CONFIG_H_	config.h	9;"	d
_D	klibc.cpp	556;"	d	file:
_DATASTORE_H_	datastore.h	12;"	d
_DCACHE_H_	dcache-amd-k8.h	10;"	d
_DCACHE_H_	dcache.h	10;"	d
_DECODE_H_	decode.h	10;"	d
_GLOBALS_H_	globals.h	10;"	d
_KERNEL_H_	kernel.h	10;"	d
_L	klibc.cpp	555;"	d	file:
_LINUX_TYPES_H	xen-types.h	138;"	d
_LOADER_H_	loader.h	10;"	d
_LOGIC_H_	logic.h	9;"	d
_MM_H_	mm.h	10;"	d
_MM_PRIVATE_H_	mm-private.h	10;"	d
_OOOCORE_H_	ooocore-amd-k8.h	12;"	d
_OOOCORE_H_	ooocore.h	11;"	d
_P	klibc.cpp	558;"	d	file:
_PTLHWDEF_H	ptlhwdef.h	10;"	d
_PTLSIM_H_	ptlsim.h	10;"	d
_PTLXEN_H_	ptlxen.h	10;"	d
_S	klibc.cpp	559;"	d	file:
_SEQCORE_H_	seqcore.h	10;"	d
_SP	klibc.cpp	561;"	d	file:
_STATS_H_	stats.h	10;"	d
_SUPERSTL_H_	superstl.h	15;"	d
_U	klibc.cpp	554;"	d	file:
_X	klibc.cpp	560;"	d	file:
__ASM_ONLY__	lowlevel-32bit.S	/^#define __ASM_ONLY__$/;"	d
__ASM_ONLY__	lowlevel-64bit-xen.S	/^#define __ASM_ONLY__$/;"	d
__ASM_ONLY__	lowlevel-64bit.S	/^#define __ASM_ONLY__$/;"	d
__ASSEMBLY__	lowlevel-64bit-xen.S	/^#define __ASSEMBLY__$/;"	d
__ASSERT_VOID_CAST	globals.h	58;"	d
__ASSERT_VOID_CAST	globals.h	60;"	d
__CONCAT	globals.h	70;"	d
__CTOR_LIST__	lowlevel-64bit.S	/^__CTOR_LIST__:$/;"	l
__HAVE_ARCH_MEMCHR	klibc.cpp	511;"	d	file:
__HAVE_ARCH_MEMCPY	klibc.cpp	172;"	d	file:
__HAVE_ARCH_MEMCPY	klibc.cpp	45;"	d	file:
__HAVE_ARCH_MEMMOVE	klibc.cpp	180;"	d	file:
__HAVE_ARCH_MEMMOVE	klibc.cpp	76;"	d	file:
__HAVE_ARCH_MEMSCAN	klibc.cpp	533;"	d	file:
__HAVE_ARCH_MEMSET	klibc.cpp	278;"	d	file:
__HAVE_ARCH_MEMSET	klibc.cpp	56;"	d	file:
__HAVE_ARCH_STRCAT	klibc.cpp	347;"	d	file:
__HAVE_ARCH_STRCHR	klibc.cpp	433;"	d	file:
__HAVE_ARCH_STRCMP	klibc.cpp	387;"	d	file:
__HAVE_ARCH_STRCPY	klibc.cpp	314;"	d	file:
__HAVE_ARCH_STRLEN	klibc.cpp	473;"	d	file:
__HAVE_ARCH_STRNCAT	klibc.cpp	364;"	d	file:
__HAVE_ARCH_STRNCMP	klibc.cpp	409;"	d	file:
__HAVE_ARCH_STRNCPY	klibc.cpp	328;"	d	file:
__HAVE_ARCH_STRNLEN	klibc.cpp	490;"	d	file:
__HAVE_ARCH_STRRCHR	klibc.cpp	454;"	d	file:
__INSIDE_PTLSIM__	kernel.cpp	26;"	d	file:
__INSIDE_PTLSIM__	ptlxen.cpp	15;"	d	file:
__KERNEL_CS	lowlevel-64bit-xen.S	/^#define __KERNEL_CS  FLAT_KERNEL_CS$/;"	d
__KERNEL_DS	lowlevel-64bit-xen.S	/^#define __KERNEL_DS  FLAT_KERNEL_DS$/;"	d
__KERNEL_SS	lowlevel-64bit-xen.S	/^#define __KERNEL_SS  FLAT_KERNEL_SS$/;"	d
__MATHLIB_H__	mathlib.h	13;"	d
__NR_32bit_alarm	kernel.cpp	178;"	d	file:
__NR_32bit_brk	kernel.cpp	172;"	d	file:
__NR_32bit_exit	kernel.cpp	173;"	d	file:
__NR_32bit_exit_group	kernel.cpp	174;"	d	file:
__NR_32bit_mmap	kernel.cpp	167;"	d	file:
__NR_32bit_mmap2	kernel.cpp	168;"	d	file:
__NR_32bit_mprotect	kernel.cpp	170;"	d	file:
__NR_32bit_mremap	kernel.cpp	171;"	d	file:
__NR_32bit_mremap	kernel.cpp	175;"	d	file:
__NR_32bit_munmap	kernel.cpp	169;"	d	file:
__NR_32bit_rt_sigaction	kernel.cpp	177;"	d	file:
__NR_32bit_set_thread_area	kernel.cpp	176;"	d	file:
__NR_64bit_alarm	kernel.cpp	189;"	d	file:
__NR_64bit_arch_prctl	kernel.cpp	185;"	d	file:
__NR_64bit_brk	kernel.cpp	183;"	d	file:
__NR_64bit_exit	kernel.cpp	186;"	d	file:
__NR_64bit_exit_group	kernel.cpp	187;"	d	file:
__NR_64bit_mmap	kernel.cpp	180;"	d	file:
__NR_64bit_mprotect	kernel.cpp	182;"	d	file:
__NR_64bit_mremap	kernel.cpp	184;"	d	file:
__NR_64bit_munmap	kernel.cpp	181;"	d	file:
__NR_64bit_rt_sigaction	kernel.cpp	188;"	d	file:
__NR__llseek	syscalls.h	550;"	d
__NR__newselect	syscalls.h	552;"	d
__NR__sysctl	syscalls.h	274;"	d
__NR__sysctl	syscalls.h	559;"	d
__NR_accept	syscalls.h	161;"	d
__NR_access	syscalls.h	139;"	d
__NR_access	syscalls.h	443;"	d
__NR_acct	syscalls.h	281;"	d
__NR_acct	syscalls.h	461;"	d
__NR_add_key	syscalls.h	366;"	d
__NR_add_key	syscalls.h	696;"	d
__NR_adjtimex	syscalls.h	277;"	d
__NR_adjtimex	syscalls.h	534;"	d
__NR_afs_syscall	syscalls.h	301;"	d
__NR_afs_syscall	syscalls.h	547;"	d
__NR_alarm	syscalls.h	155;"	d
__NR_alarm	syscalls.h	437;"	d
__NR_arch_prctl	syscalls.h	276;"	d
__NR_bdflush	syscalls.h	544;"	d
__NR_bind	syscalls.h	167;"	d
__NR_break	syscalls.h	427;"	d
__NR_brk	syscalls.h	130;"	d
__NR_brk	syscalls.h	455;"	d
__NR_capget	syscalls.h	243;"	d
__NR_capget	syscalls.h	594;"	d
__NR_capset	syscalls.h	244;"	d
__NR_capset	syscalls.h	595;"	d
__NR_chdir	syscalls.h	198;"	d
__NR_chdir	syscalls.h	422;"	d
__NR_chmod	syscalls.h	208;"	d
__NR_chmod	syscalls.h	425;"	d
__NR_chown	syscalls.h	210;"	d
__NR_chown	syscalls.h	592;"	d
__NR_chown32	syscalls.h	622;"	d
__NR_chroot	syscalls.h	279;"	d
__NR_chroot	syscalls.h	471;"	d
__NR_clock_getres	syscalls.h	347;"	d
__NR_clock_getres	syscalls.h	676;"	d
__NR_clock_gettime	syscalls.h	346;"	d
__NR_clock_gettime	syscalls.h	675;"	d
__NR_clock_nanosleep	syscalls.h	348;"	d
__NR_clock_nanosleep	syscalls.h	677;"	d
__NR_clock_settime	syscalls.h	345;"	d
__NR_clock_settime	syscalls.h	674;"	d
__NR_clone	syscalls.h	174;"	d
__NR_clone	syscalls.h	530;"	d
__NR_close	syscalls.h	121;"	d
__NR_close	syscalls.h	416;"	d
__NR_connect	syscalls.h	160;"	d
__NR_creat	syscalls.h	203;"	d
__NR_creat	syscalls.h	418;"	d
__NR_create_module	syscalls.h	292;"	d
__NR_create_module	syscalls.h	537;"	d
__NR_delete_module	syscalls.h	294;"	d
__NR_delete_module	syscalls.h	539;"	d
__NR_dup	syscalls.h	150;"	d
__NR_dup	syscalls.h	451;"	d
__NR_dup2	syscalls.h	151;"	d
__NR_dup2	syscalls.h	473;"	d
__NR_epoll_create	syscalls.h	331;"	d
__NR_epoll_create	syscalls.h	664;"	d
__NR_epoll_ctl	syscalls.h	351;"	d
__NR_epoll_ctl	syscalls.h	665;"	d
__NR_epoll_ctl_old	syscalls.h	332;"	d
__NR_epoll_wait	syscalls.h	350;"	d
__NR_epoll_wait	syscalls.h	666;"	d
__NR_epoll_wait_old	syscalls.h	333;"	d
__NR_execve	syscalls.h	177;"	d
__NR_execve	syscalls.h	421;"	d
__NR_exit	syscalls.h	178;"	d
__NR_exit	syscalls.h	411;"	d
__NR_exit_group	syscalls.h	349;"	d
__NR_exit_group	syscalls.h	662;"	d
__NR_fadvise64	syscalls.h	339;"	d
__NR_fadvise64	syscalls.h	660;"	d
__NR_fadvise64_64	syscalls.h	682;"	d
__NR_fchdir	syscalls.h	199;"	d
__NR_fchdir	syscalls.h	543;"	d
__NR_fchmod	syscalls.h	209;"	d
__NR_fchmod	syscalls.h	504;"	d
__NR_fchown	syscalls.h	211;"	d
__NR_fchown	syscalls.h	505;"	d
__NR_fchown32	syscalls.h	617;"	d
__NR_fcntl	syscalls.h	190;"	d
__NR_fcntl	syscalls.h	465;"	d
__NR_fcntl64	syscalls.h	632;"	d
__NR_fdatasync	syscalls.h	193;"	d
__NR_fdatasync	syscalls.h	558;"	d
__NR_fgetxattr	syscalls.h	311;"	d
__NR_fgetxattr	syscalls.h	641;"	d
__NR_flistxattr	syscalls.h	314;"	d
__NR_flistxattr	syscalls.h	644;"	d
__NR_flock	syscalls.h	191;"	d
__NR_flock	syscalls.h	553;"	d
__NR_fork	syscalls.h	175;"	d
__NR_fork	syscalls.h	412;"	d
__NR_fremovexattr	syscalls.h	317;"	d
__NR_fremovexattr	syscalls.h	647;"	d
__NR_fsetxattr	syscalls.h	308;"	d
__NR_fsetxattr	syscalls.h	638;"	d
__NR_fstat	syscalls.h	123;"	d
__NR_fstat	syscalls.h	518;"	d
__NR_fstat64	syscalls.h	607;"	d
__NR_fstatfs	syscalls.h	256;"	d
__NR_fstatfs	syscalls.h	510;"	d
__NR_fstatfs64	syscalls.h	679;"	d
__NR_fsync	syscalls.h	192;"	d
__NR_fsync	syscalls.h	528;"	d
__NR_ftime	syscalls.h	445;"	d
__NR_ftruncate	syscalls.h	195;"	d
__NR_ftruncate	syscalls.h	503;"	d
__NR_ftruncate64	syscalls.h	604;"	d
__NR_futex	syscalls.h	320;"	d
__NR_futex	syscalls.h	650;"	d
__NR_get_kernel_syms	syscalls.h	295;"	d
__NR_get_kernel_syms	syscalls.h	540;"	d
__NR_get_mempolicy	syscalls.h	357;"	d
__NR_get_mempolicy	syscalls.h	685;"	d
__NR_get_thread_area	syscalls.h	329;"	d
__NR_get_thread_area	syscalls.h	654;"	d
__NR_getcwd	syscalls.h	197;"	d
__NR_getcwd	syscalls.h	593;"	d
__NR_getdents	syscalls.h	196;"	d
__NR_getdents	syscalls.h	551;"	d
__NR_getdents64	syscalls.h	335;"	d
__NR_getdents64	syscalls.h	631;"	d
__NR_getegid	syscalls.h	226;"	d
__NR_getegid	syscalls.h	460;"	d
__NR_getegid32	syscalls.h	612;"	d
__NR_geteuid	syscalls.h	225;"	d
__NR_geteuid	syscalls.h	459;"	d
__NR_geteuid32	syscalls.h	611;"	d
__NR_getgid	syscalls.h	222;"	d
__NR_getgid	syscalls.h	457;"	d
__NR_getgid32	syscalls.h	610;"	d
__NR_getgroups	syscalls.h	233;"	d
__NR_getgroups	syscalls.h	490;"	d
__NR_getgroups32	syscalls.h	615;"	d
__NR_getitimer	syscalls.h	154;"	d
__NR_getitimer	syscalls.h	515;"	d
__NR_getpeername	syscalls.h	170;"	d
__NR_getpgid	syscalls.h	239;"	d
__NR_getpgid	syscalls.h	542;"	d
__NR_getpgrp	syscalls.h	229;"	d
__NR_getpgrp	syscalls.h	475;"	d
__NR_getpid	syscalls.h	157;"	d
__NR_getpid	syscalls.h	430;"	d
__NR_getpmsg	syscalls.h	299;"	d
__NR_getpmsg	syscalls.h	598;"	d
__NR_getppid	syscalls.h	228;"	d
__NR_getppid	syscalls.h	474;"	d
__NR_getpriority	syscalls.h	258;"	d
__NR_getpriority	syscalls.h	506;"	d
__NR_getresgid	syscalls.h	238;"	d
__NR_getresgid	syscalls.h	581;"	d
__NR_getresgid32	syscalls.h	621;"	d
__NR_getresuid	syscalls.h	236;"	d
__NR_getresuid	syscalls.h	575;"	d
__NR_getresuid32	syscalls.h	619;"	d
__NR_getrlimit	syscalls.h	215;"	d
__NR_getrlimit	syscalls.h	486;"	d
__NR_getrusage	syscalls.h	216;"	d
__NR_getrusage	syscalls.h	487;"	d
__NR_getsid	syscalls.h	242;"	d
__NR_getsid	syscalls.h	557;"	d
__NR_getsockname	syscalls.h	169;"	d
__NR_getsockopt	syscalls.h	173;"	d
__NR_gettid	syscalls.h	304;"	d
__NR_gettid	syscalls.h	634;"	d
__NR_gettimeofday	syscalls.h	214;"	d
__NR_gettimeofday	syscalls.h	488;"	d
__NR_getuid	syscalls.h	220;"	d
__NR_getuid	syscalls.h	434;"	d
__NR_getuid32	syscalls.h	609;"	d
__NR_getxattr	syscalls.h	309;"	d
__NR_getxattr	syscalls.h	639;"	d
__NR_gtty	syscalls.h	442;"	d
__NR_idle	syscalls.h	522;"	d
__NR_init_module	syscalls.h	293;"	d
__NR_init_module	syscalls.h	538;"	d
__NR_inotify_add_watch	syscalls.h	372;"	d
__NR_inotify_add_watch	syscalls.h	702;"	d
__NR_inotify_init	syscalls.h	371;"	d
__NR_inotify_init	syscalls.h	701;"	d
__NR_inotify_rm_watch	syscalls.h	373;"	d
__NR_inotify_rm_watch	syscalls.h	703;"	d
__NR_io_cancel	syscalls.h	328;"	d
__NR_io_cancel	syscalls.h	659;"	d
__NR_io_destroy	syscalls.h	325;"	d
__NR_io_destroy	syscalls.h	656;"	d
__NR_io_getevents	syscalls.h	326;"	d
__NR_io_getevents	syscalls.h	657;"	d
__NR_io_setup	syscalls.h	324;"	d
__NR_io_setup	syscalls.h	655;"	d
__NR_io_submit	syscalls.h	327;"	d
__NR_io_submit	syscalls.h	658;"	d
__NR_ioctl	syscalls.h	134;"	d
__NR_ioctl	syscalls.h	464;"	d
__NR_ioperm	syscalls.h	291;"	d
__NR_ioperm	syscalls.h	511;"	d
__NR_iopl	syscalls.h	290;"	d
__NR_iopl	syscalls.h	520;"	d
__NR_ioprio_get	syscalls.h	370;"	d
__NR_ioprio_get	syscalls.h	700;"	d
__NR_ioprio_set	syscalls.h	369;"	d
__NR_ioprio_set	syscalls.h	699;"	d
__NR_ipc	syscalls.h	527;"	d
__NR_kexec_load	syscalls.h	364;"	d
__NR_keyctl	syscalls.h	368;"	d
__NR_keyctl	syscalls.h	698;"	d
__NR_kill	syscalls.h	180;"	d
__NR_kill	syscalls.h	447;"	d
__NR_lchown	syscalls.h	212;"	d
__NR_lchown	syscalls.h	426;"	d
__NR_lchown32	syscalls.h	608;"	d
__NR_lgetxattr	syscalls.h	310;"	d
__NR_lgetxattr	syscalls.h	640;"	d
__NR_link	syscalls.h	204;"	d
__NR_link	syscalls.h	419;"	d
__NR_listen	syscalls.h	168;"	d
__NR_listxattr	syscalls.h	312;"	d
__NR_listxattr	syscalls.h	642;"	d
__NR_llistxattr	syscalls.h	313;"	d
__NR_llistxattr	syscalls.h	643;"	d
__NR_lock	syscalls.h	463;"	d
__NR_lookup_dcookie	syscalls.h	330;"	d
__NR_lookup_dcookie	syscalls.h	663;"	d
__NR_lremovexattr	syscalls.h	316;"	d
__NR_lremovexattr	syscalls.h	646;"	d
__NR_lseek	syscalls.h	126;"	d
__NR_lseek	syscalls.h	429;"	d
__NR_lsetxattr	syscalls.h	307;"	d
__NR_lsetxattr	syscalls.h	637;"	d
__NR_lstat	syscalls.h	124;"	d
__NR_lstat	syscalls.h	517;"	d
__NR_lstat64	syscalls.h	606;"	d
__NR_madvise	syscalls.h	146;"	d
__NR_madvise	syscalls.h	629;"	d
__NR_madvise1	syscalls.h	630;"	d
__NR_mbind	syscalls.h	355;"	d
__NR_mbind	syscalls.h	684;"	d
__NR_mincore	syscalls.h	145;"	d
__NR_mincore	syscalls.h	628;"	d
__NR_mkdir	syscalls.h	201;"	d
__NR_mkdir	syscalls.h	449;"	d
__NR_mknod	syscalls.h	251;"	d
__NR_mknod	syscalls.h	424;"	d
__NR_mlock	syscalls.h	267;"	d
__NR_mlock	syscalls.h	560;"	d
__NR_mlockall	syscalls.h	269;"	d
__NR_mlockall	syscalls.h	562;"	d
__NR_mmap	syscalls.h	127;"	d
__NR_mmap	syscalls.h	500;"	d
__NR_mmap2	syscalls.h	602;"	d
__NR_modify_ldt	syscalls.h	272;"	d
__NR_modify_ldt	syscalls.h	533;"	d
__NR_mount	syscalls.h	283;"	d
__NR_mount	syscalls.h	431;"	d
__NR_mprotect	syscalls.h	128;"	d
__NR_mprotect	syscalls.h	535;"	d
__NR_mpx	syscalls.h	466;"	d
__NR_mq_getsetattr	syscalls.h	363;"	d
__NR_mq_getsetattr	syscalls.h	692;"	d
__NR_mq_notify	syscalls.h	362;"	d
__NR_mq_notify	syscalls.h	691;"	d
__NR_mq_open	syscalls.h	358;"	d
__NR_mq_open	syscalls.h	687;"	d
__NR_mq_timedreceive	syscalls.h	361;"	d
__NR_mq_timedreceive	syscalls.h	690;"	d
__NR_mq_timedsend	syscalls.h	360;"	d
__NR_mq_timedsend	syscalls.h	689;"	d
__NR_mq_unlink	syscalls.h	359;"	d
__NR_mq_unlink	syscalls.h	688;"	d
__NR_mremap	syscalls.h	143;"	d
__NR_mremap	syscalls.h	573;"	d
__NR_msgctl	syscalls.h	189;"	d
__NR_msgget	syscalls.h	186;"	d
__NR_msgrcv	syscalls.h	188;"	d
__NR_msgsnd	syscalls.h	187;"	d
__NR_msync	syscalls.h	144;"	d
__NR_msync	syscalls.h	554;"	d
__NR_munlock	syscalls.h	268;"	d
__NR_munlock	syscalls.h	561;"	d
__NR_munlockall	syscalls.h	270;"	d
__NR_munlockall	syscalls.h	563;"	d
__NR_munmap	syscalls.h	129;"	d
__NR_munmap	syscalls.h	501;"	d
__NR_nanosleep	syscalls.h	153;"	d
__NR_nanosleep	syscalls.h	572;"	d
__NR_nfsservctl	syscalls.h	298;"	d
__NR_nfsservctl	syscalls.h	579;"	d
__NR_nice	syscalls.h	444;"	d
__NR_oldfstat	syscalls.h	438;"	d
__NR_oldlstat	syscalls.h	494;"	d
__NR_oldolduname	syscalls.h	469;"	d
__NR_oldstat	syscalls.h	428;"	d
__NR_olduname	syscalls.h	519;"	d
__NR_open	syscalls.h	120;"	d
__NR_open	syscalls.h	415;"	d
__NR_pause	syscalls.h	152;"	d
__NR_pause	syscalls.h	439;"	d
__NR_personality	syscalls.h	253;"	d
__NR_personality	syscalls.h	546;"	d
__NR_pipe	syscalls.h	140;"	d
__NR_pipe	syscalls.h	452;"	d
__NR_pivot_root	syscalls.h	273;"	d
__NR_pivot_root	syscalls.h	627;"	d
__NR_poll	syscalls.h	125;"	d
__NR_poll	syscalls.h	578;"	d
__NR_prctl	syscalls.h	275;"	d
__NR_prctl	syscalls.h	582;"	d
__NR_pread64	syscalls.h	135;"	d
__NR_pread64	syscalls.h	590;"	d
__NR_prof	syscalls.h	454;"	d
__NR_profil	syscalls.h	508;"	d
__NR_ptrace	syscalls.h	219;"	d
__NR_ptrace	syscalls.h	436;"	d
__NR_putpmsg	syscalls.h	300;"	d
__NR_putpmsg	syscalls.h	599;"	d
__NR_pwrite64	syscalls.h	136;"	d
__NR_pwrite64	syscalls.h	591;"	d
__NR_query_module	syscalls.h	296;"	d
__NR_query_module	syscalls.h	577;"	d
__NR_quotactl	syscalls.h	297;"	d
__NR_quotactl	syscalls.h	541;"	d
__NR_read	syscalls.h	118;"	d
__NR_read	syscalls.h	413;"	d
__NR_readahead	syscalls.h	305;"	d
__NR_readahead	syscalls.h	635;"	d
__NR_readdir	syscalls.h	499;"	d
__NR_readlink	syscalls.h	207;"	d
__NR_readlink	syscalls.h	495;"	d
__NR_readv	syscalls.h	137;"	d
__NR_readv	syscalls.h	555;"	d
__NR_reboot	syscalls.h	287;"	d
__NR_reboot	syscalls.h	498;"	d
__NR_recvfrom	syscalls.h	163;"	d
__NR_recvmsg	syscalls.h	165;"	d
__NR_remap_file_pages	syscalls.h	334;"	d
__NR_remap_file_pages	syscalls.h	667;"	d
__NR_removexattr	syscalls.h	315;"	d
__NR_removexattr	syscalls.h	645;"	d
__NR_rename	syscalls.h	200;"	d
__NR_rename	syscalls.h	448;"	d
__NR_request_key	syscalls.h	367;"	d
__NR_request_key	syscalls.h	697;"	d
__NR_restart_syscall	syscalls.h	337;"	d
__NR_restart_syscall	syscalls.h	410;"	d
__NR_rmdir	syscalls.h	202;"	d
__NR_rmdir	syscalls.h	450;"	d
__NR_rt_sigaction	syscalls.h	131;"	d
__NR_rt_sigaction	syscalls.h	584;"	d
__NR_rt_sigpending	syscalls.h	245;"	d
__NR_rt_sigpending	syscalls.h	586;"	d
__NR_rt_sigprocmask	syscalls.h	132;"	d
__NR_rt_sigprocmask	syscalls.h	585;"	d
__NR_rt_sigqueueinfo	syscalls.h	247;"	d
__NR_rt_sigqueueinfo	syscalls.h	588;"	d
__NR_rt_sigreturn	syscalls.h	133;"	d
__NR_rt_sigreturn	syscalls.h	583;"	d
__NR_rt_sigsuspend	syscalls.h	248;"	d
__NR_rt_sigsuspend	syscalls.h	589;"	d
__NR_rt_sigtimedwait	syscalls.h	246;"	d
__NR_rt_sigtimedwait	syscalls.h	587;"	d
__NR_sched_get_priority_max	syscalls.h	264;"	d
__NR_sched_get_priority_max	syscalls.h	569;"	d
__NR_sched_get_priority_min	syscalls.h	265;"	d
__NR_sched_get_priority_min	syscalls.h	570;"	d
__NR_sched_getaffinity	syscalls.h	322;"	d
__NR_sched_getaffinity	syscalls.h	652;"	d
__NR_sched_getparam	syscalls.h	261;"	d
__NR_sched_getparam	syscalls.h	565;"	d
__NR_sched_getscheduler	syscalls.h	263;"	d
__NR_sched_getscheduler	syscalls.h	567;"	d
__NR_sched_rr_get_interval	syscalls.h	266;"	d
__NR_sched_rr_get_interval	syscalls.h	571;"	d
__NR_sched_setaffinity	syscalls.h	321;"	d
__NR_sched_setaffinity	syscalls.h	651;"	d
__NR_sched_setparam	syscalls.h	260;"	d
__NR_sched_setparam	syscalls.h	564;"	d
__NR_sched_setscheduler	syscalls.h	262;"	d
__NR_sched_setscheduler	syscalls.h	566;"	d
__NR_sched_yield	syscalls.h	142;"	d
__NR_sched_yield	syscalls.h	568;"	d
__NR_security	syscalls.h	303;"	d
__NR_select	syscalls.h	141;"	d
__NR_select	syscalls.h	492;"	d
__NR_semctl	syscalls.h	184;"	d
__NR_semget	syscalls.h	182;"	d
__NR_semop	syscalls.h	183;"	d
__NR_semtimedop	syscalls.h	338;"	d
__NR_sendfile	syscalls.h	158;"	d
__NR_sendfile	syscalls.h	597;"	d
__NR_sendfile64	syscalls.h	649;"	d
__NR_sendmsg	syscalls.h	164;"	d
__NR_sendto	syscalls.h	162;"	d
__NR_set_mempolicy	syscalls.h	356;"	d
__NR_set_mempolicy	syscalls.h	686;"	d
__NR_set_thread_area	syscalls.h	323;"	d
__NR_set_thread_area	syscalls.h	653;"	d
__NR_set_tid_address	syscalls.h	336;"	d
__NR_set_tid_address	syscalls.h	668;"	d
__NR_set_zone_reclaim	syscalls.h	661;"	d
__NR_setdomainname	syscalls.h	289;"	d
__NR_setdomainname	syscalls.h	531;"	d
__NR_setfsgid	syscalls.h	241;"	d
__NR_setfsgid	syscalls.h	549;"	d
__NR_setfsgid32	syscalls.h	626;"	d
__NR_setfsuid	syscalls.h	240;"	d
__NR_setfsuid	syscalls.h	548;"	d
__NR_setfsuid32	syscalls.h	625;"	d
__NR_setgid	syscalls.h	224;"	d
__NR_setgid	syscalls.h	456;"	d
__NR_setgid32	syscalls.h	624;"	d
__NR_setgroups	syscalls.h	234;"	d
__NR_setgroups	syscalls.h	491;"	d
__NR_setgroups32	syscalls.h	616;"	d
__NR_sethostname	syscalls.h	288;"	d
__NR_sethostname	syscalls.h	484;"	d
__NR_setitimer	syscalls.h	156;"	d
__NR_setitimer	syscalls.h	514;"	d
__NR_setpgid	syscalls.h	227;"	d
__NR_setpgid	syscalls.h	467;"	d
__NR_setpriority	syscalls.h	259;"	d
__NR_setpriority	syscalls.h	507;"	d
__NR_setregid	syscalls.h	232;"	d
__NR_setregid	syscalls.h	481;"	d
__NR_setregid32	syscalls.h	614;"	d
__NR_setresgid	syscalls.h	237;"	d
__NR_setresgid	syscalls.h	580;"	d
__NR_setresgid32	syscalls.h	620;"	d
__NR_setresuid	syscalls.h	235;"	d
__NR_setresuid	syscalls.h	574;"	d
__NR_setresuid32	syscalls.h	618;"	d
__NR_setreuid	syscalls.h	231;"	d
__NR_setreuid	syscalls.h	480;"	d
__NR_setreuid32	syscalls.h	613;"	d
__NR_setrlimit	syscalls.h	278;"	d
__NR_setrlimit	syscalls.h	485;"	d
__NR_setsid	syscalls.h	230;"	d
__NR_setsid	syscalls.h	476;"	d
__NR_setsockopt	syscalls.h	172;"	d
__NR_settimeofday	syscalls.h	282;"	d
__NR_settimeofday	syscalls.h	489;"	d
__NR_setuid	syscalls.h	223;"	d
__NR_setuid	syscalls.h	433;"	d
__NR_setuid32	syscalls.h	623;"	d
__NR_setxattr	syscalls.h	306;"	d
__NR_setxattr	syscalls.h	636;"	d
__NR_sgetmask	syscalls.h	478;"	d
__NR_shmat	syscalls.h	148;"	d
__NR_shmctl	syscalls.h	149;"	d
__NR_shmdt	syscalls.h	185;"	d
__NR_shmget	syscalls.h	147;"	d
__NR_shutdown	syscalls.h	166;"	d
__NR_sigaction	syscalls.h	477;"	d
__NR_sigaltstack	syscalls.h	249;"	d
__NR_sigaltstack	syscalls.h	596;"	d
__NR_signal	syscalls.h	458;"	d
__NR_sigpending	syscalls.h	483;"	d
__NR_sigprocmask	syscalls.h	536;"	d
__NR_sigreturn	syscalls.h	529;"	d
__NR_sigsuspend	syscalls.h	482;"	d
__NR_socket	syscalls.h	159;"	d
__NR_socketcall	syscalls.h	512;"	d
__NR_socketpair	syscalls.h	171;"	d
__NR_ssetmask	syscalls.h	479;"	d
__NR_stat	syscalls.h	122;"	d
__NR_stat	syscalls.h	516;"	d
__NR_stat64	syscalls.h	605;"	d
__NR_statfs	syscalls.h	255;"	d
__NR_statfs	syscalls.h	509;"	d
__NR_statfs64	syscalls.h	678;"	d
__NR_stime	syscalls.h	435;"	d
__NR_stty	syscalls.h	441;"	d
__NR_swapoff	syscalls.h	286;"	d
__NR_swapoff	syscalls.h	525;"	d
__NR_swapon	syscalls.h	285;"	d
__NR_swapon	syscalls.h	497;"	d
__NR_symlink	syscalls.h	206;"	d
__NR_symlink	syscalls.h	493;"	d
__NR_sync	syscalls.h	280;"	d
__NR_sync	syscalls.h	446;"	d
__NR_sys_kexec_load	syscalls.h	693;"	d
__NR_syscall_max	syscalls.h	374;"	d
__NR_sysfs	syscalls.h	257;"	d
__NR_sysfs	syscalls.h	545;"	d
__NR_sysinfo	syscalls.h	217;"	d
__NR_sysinfo	syscalls.h	526;"	d
__NR_syslog	syscalls.h	221;"	d
__NR_syslog	syscalls.h	513;"	d
__NR_tgkill	syscalls.h	352;"	d
__NR_tgkill	syscalls.h	680;"	d
__NR_time	syscalls.h	319;"	d
__NR_time	syscalls.h	423;"	d
__NR_timer_create	syscalls.h	340;"	d
__NR_timer_create	syscalls.h	669;"	d
__NR_timer_delete	syscalls.h	344;"	d
__NR_timer_delete	syscalls.h	673;"	d
__NR_timer_getoverrun	syscalls.h	343;"	d
__NR_timer_getoverrun	syscalls.h	672;"	d
__NR_timer_gettime	syscalls.h	342;"	d
__NR_timer_gettime	syscalls.h	671;"	d
__NR_timer_settime	syscalls.h	341;"	d
__NR_timer_settime	syscalls.h	670;"	d
__NR_times	syscalls.h	218;"	d
__NR_times	syscalls.h	453;"	d
__NR_tkill	syscalls.h	318;"	d
__NR_tkill	syscalls.h	648;"	d
__NR_truncate	syscalls.h	194;"	d
__NR_truncate	syscalls.h	502;"	d
__NR_truncate64	syscalls.h	603;"	d
__NR_tuxcall	syscalls.h	302;"	d
__NR_ugetrlimit	syscalls.h	601;"	d
__NR_ulimit	syscalls.h	468;"	d
__NR_umask	syscalls.h	213;"	d
__NR_umask	syscalls.h	470;"	d
__NR_umount	syscalls.h	432;"	d
__NR_umount2	syscalls.h	284;"	d
__NR_umount2	syscalls.h	462;"	d
__NR_uname	syscalls.h	181;"	d
__NR_uname	syscalls.h	532;"	d
__NR_unlink	syscalls.h	205;"	d
__NR_unlink	syscalls.h	420;"	d
__NR_uselib	syscalls.h	252;"	d
__NR_uselib	syscalls.h	496;"	d
__NR_ustat	syscalls.h	254;"	d
__NR_ustat	syscalls.h	472;"	d
__NR_utime	syscalls.h	250;"	d
__NR_utime	syscalls.h	440;"	d
__NR_utimes	syscalls.h	353;"	d
__NR_utimes	syscalls.h	681;"	d
__NR_vfork	syscalls.h	176;"	d
__NR_vfork	syscalls.h	600;"	d
__NR_vhangup	syscalls.h	271;"	d
__NR_vhangup	syscalls.h	521;"	d
__NR_vm86	syscalls.h	576;"	d
__NR_vm86old	syscalls.h	523;"	d
__NR_vserver	syscalls.h	354;"	d
__NR_vserver	syscalls.h	683;"	d
__NR_wait4	syscalls.h	179;"	d
__NR_wait4	syscalls.h	524;"	d
__NR_waitid	syscalls.h	365;"	d
__NR_waitid	syscalls.h	694;"	d
__NR_waitpid	syscalls.h	417;"	d
__NR_write	syscalls.h	119;"	d
__NR_write	syscalls.h	414;"	d
__NR_writev	syscalls.h	138;"	d
__NR_writev	syscalls.h	556;"	d
__PTLCALLS_H__	ptlcalls.h	10;"	d
__STR	ptlxen.cpp	23;"	d	file:
__STRING	globals.h	71;"	d
__SYSCALLS_H__	syscalls.h	12;"	d
__TYPES_H__	xen-types.h	2;"	d
__USE_GNU	ptlcalls.h	22;"	d
__X86_TYPES_H__	xen-types.h	5;"	d
__XEN_TOOLS__	ptlxen.h	15;"	d
__acr	mathlib.cpp	/^  int __acr(const mp_no *x, const mp_no *y, int p) {$/;"	f	namespace:math::mpa
__add	mathlib.cpp	/^  void __add(const mp_no *x, const mp_no *y, mp_no *z, int p) {$/;"	f	namespace:math::mpa
__branred	mathlib.cpp	/^  int __branred(double x, double *a, double *aa)$/;"	f	namespace:math::branred
__builtin_clzl	superstl.h	1509;"	d
__builtin_clzl	superstl.h	1512;"	d
__builtin_clzl	superstl.h	2216;"	d
__builtin_ctzl	superstl.h	1508;"	d
__builtin_ctzl	superstl.h	1511;"	d
__builtin_ctzl	superstl.h	2215;"	d
__c32	mathlib.cpp	/^  void __c32(mp_no *x, mp_no *y, mp_no *z, int p) {$/;"	f	namespace:math::mpa
__constant_c_and_count_memset	klibc.cpp	/^static __attribute__((always_inline)) inline void * __constant_c_and_count_memset(void * s, unsigned long pattern, size_t count)$/;"	f	file:
__constant_c_memset	klibc.cpp	/^static __attribute__((always_inline)) inline void * __constant_c_memset(void * s, unsigned long c, size_t count)$/;"	f	file:
__constant_c_x_memset	klibc.cpp	268;"	d	file:
__constant_count_memset	klibc.cpp	198;"	d	file:
__constant_memcpy	klibc.cpp	/^static __attribute__((always_inline)) inline void * __constant_memcpy(void * to, const void * from, size_t n)$/;"	f	file:
__cos32	mathlib.cpp	/^  double __cos32(double x, double res, double res1) {$/;"	f	namespace:math::mpa
__cpy	mathlib.cpp	/^  void __cpy(const mp_no *x, mp_no *y, int p) {$/;"	f	namespace:math::mpa
__cpymn	mathlib.cpp	/^  void __cpymn(const mp_no *x, int m, mp_no *y, int n) {$/;"	f	namespace:math::mpa
__cr	mathlib.cpp	/^  int  __cr(const mp_no *x, const mp_no *y, int p) {$/;"	f	namespace:math::mpa
__cxa_atexit	klibc.cpp	/^extern "C" void __cxa_atexit(void (*arg1)(void*), void* arg2, void* arg3) { }$/;"	f
__cxa_guard_acquire	klibc.cpp	/^extern "C" int __cxa_guard_acquire() { return 0; }$/;"	f
__cxa_guard_release	klibc.cpp	/^extern "C" int __cxa_guard_release() { return 0; }$/;"	f
__dbl_mp	mathlib.cpp	/^  void __dbl_mp(double x, mp_no *y, int p) {$/;"	f	namespace:math::mpa
__docos	mathlib.cpp	/^  void __docos(double x, double dx, double v[]) {$/;"	f	namespace:math::dosincos
__dso_handle	klibc.cpp	/^void* __dso_handle = (void*)&__dso_handle;$/;"	v
__dubcos	mathlib.cpp	/^  void __dubcos(double x, double dx, double v[]) {$/;"	f	namespace:math::dosincos
__dubsin	mathlib.cpp	/^  void __dubsin(double x, double dx, double v[]) {$/;"	f	namespace:math::dosincos
__dvd	mathlib.cpp	/^  void __dvd(const mp_no *x, const mp_no *y, mp_no *z, int p) {$/;"	f	namespace:math::mpa
__ieee754_exp2	mathlib.cpp	/^  double __ieee754_exp2(double x) {$/;"	f	namespace:math::explog
__inline_memcpy	klibc.cpp	/^static inline void * __inline_memcpy(void * to, const void * from, size_t n)$/;"	f	file:
__inv	mathlib.cpp	/^  void __inv(const mp_no *x, mp_no *y, int p) {$/;"	f	namespace:math::mpa
__ismask	klibc.cpp	590;"	d	file:
__memcpy	klibc.cpp	/^void * __memcpy(void * to, const void * from, size_t n)$/;"	f
__memcpy	lowlevel-64bit.S	/^__memcpy:$/;"	l
__memset	klibc.cpp	273;"	d	file:
__memset_generic	klibc.cpp	/^static inline void * __memset_generic(void * s, char c,size_t count)$/;"	f	file:
__mp_dbl	mathlib.cpp	/^  void __mp_dbl(const mp_no *x, double *y, int p) {$/;"	f	namespace:math::mpa
__mpcos	mathlib.cpp	/^  double __mpcos(double x, double dx) {$/;"	f	namespace:math::mpa
__mpcos1	mathlib.cpp	/^  double __mpcos1(double x)$/;"	f	namespace:math::mpa
__mpranred	mathlib.cpp	/^  int __mpranred(double x, mp_no *y, int p)$/;"	f	namespace:math::mpa
__mpsin	mathlib.cpp	/^  double __mpsin(double x, double dx) {$/;"	f	namespace:math::mpa
__mpsin1	mathlib.cpp	/^  double __mpsin1(double x)$/;"	f	namespace:math::mpa
__mptan	mathlib.cpp	/^  void __mptan(double x, mp_no *mpy, int p) {$/;"	f	namespace:math::mpa
__mul	mathlib.cpp	/^  void __mul(const mp_no *x, const mp_no *y, mp_no *z, int p) {$/;"	f	namespace:math::mpa
__s16	xen-types.h	/^typedef __signed__ short __s16;$/;"	t
__s32	xen-types.h	/^typedef __signed__ int __s32;$/;"	t
__s64	xen-types.h	/^typedef __signed__ long __s64;$/;"	t
__s64	xen-types.h	/^typedef __signed__ long long __s64;$/;"	t
__s8	xen-types.h	/^typedef __signed__ char __s8;$/;"	t
__sin32	mathlib.cpp	/^  double __sin32(double x, double res, double res1) {$/;"	f	namespace:math::mpa
__stringify_1	globals.h	40;"	d
__strtod_internal	klibc.cpp	/^extern "C" double __strtod_internal(const char* __nptr, char **__endptr, int group) {$/;"	f
__strtol_internal	klibc.cpp	/^extern "C" long __strtol_internal(const char *cp,char **endp,int base, int group)$/;"	f
__strtoll_internal	klibc.cpp	/^extern "C" long long __strtoll_internal(const char *cp,char **endp,int base, int group)$/;"	f
__strtoul_internal	klibc.cpp	/^extern "C" unsigned long __strtoul_internal(const char *cp,char **endp,int base, int group)$/;"	f
__strtoull_internal	klibc.cpp	/^extern "C" unsigned long long __strtoull_internal(const char *cp,char **endp,int base, int group)$/;"	f
__sub	mathlib.cpp	/^  void __sub(const mp_no *x, const mp_no *y, mp_no *z, int p) {$/;"	f	namespace:math::mpa
__syscall	syscalls.h	88;"	d
__syscall_clobber	syscalls.h	87;"	d
__syscall_return	syscalls.h	382;"	d
__syscall_return	syscalls.h	383;"	d
__syscall_return	syscalls.h	85;"	d
__syscall_return	syscalls.h	86;"	d
__u16	xen-types.h	/^typedef unsigned short __u16;$/;"	t
__u32	xen-types.h	/^typedef unsigned int __u32;$/;"	t
__u64	xen-types.h	/^typedef unsigned long __u64;$/;"	t
__u64	xen-types.h	/^typedef unsigned long long __u64;$/;"	t
__u8	xen-types.h	/^typedef unsigned char __u8;$/;"	t
__x86_64__	Makefile	/^__x86_64__=1$/;"	m
_ctype	klibc.cpp	/^static unsigned char _ctype[] = {$/;"	v	file:
_hypercall0	ptlxen.cpp	26;"	d	file:
_hypercall1	ptlxen.cpp	38;"	d	file:
_hypercall2	ptlxen.cpp	50;"	d	file:
_hypercall3	ptlxen.cpp	62;"	d	file:
_hypercall4	ptlxen.cpp	76;"	d	file:
_hypercall5	ptlxen.cpp	91;"	d	file:
a	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
a	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
a	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
a	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
a	ptlhwdef.h	/^  byte a:1, d:1, ptwrite:1, pad:5;$/;"	m	struct:PTEUpdateBase
a	ptlstats.cpp	/^  float a;$/;"	m	struct:RGBAColor	file:
a_ptr	kernel.cpp	/^    W32 a_ptr;$/;"	m	union:Elf32_auxv_32bit::__anon72	file:
a_type	kernel.cpp	/^  W32 a_type;$/;"	m	struct:Elf32_auxv_32bit	file:
a_un	kernel.cpp	/^  } a_un;$/;"	m	struct:Elf32_auxv_32bit	typeref:union:Elf32_auxv_32bit::__anon72	file:
a_val	kernel.cpp	/^    W32 a_val;$/;"	m	union:Elf32_auxv_32bit::__anon72	file:
aa	mathlib.cpp	/^  static const mynumber  aa = {{0x00000000, 0xBFC55580 }};\/* -0.1666717529296875      *\/$/;"	v	file:
abort	klibc.cpp	/^extern "C" void abort() {$/;"	f
abort_at_end	ptlsim.h	/^  bool abort_at_end;$/;"	m	struct:PTLsimConfig
abort_request	ptlxen.h	/^  byte abort_request;$/;"	m	struct:PTLsimMonitorInfo
abs_code_addr_immediate	decode-core.cpp	/^void TraceDecoder::abs_code_addr_immediate(int rdreg, int sizeshift, W64 imm) {$/;"	f	class:TraceDecoder
accept_upcall	ptlxen.cpp	/^W64 accept_upcall(char* buf, size_t count, bool blocking = 1) {$/;"	f
accept_upcall	ptlxen.h	/^    } accept_upcall;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon102
accept_upcall_nonblocking	ptlxen.cpp	/^W64 accept_upcall_nonblocking(char* buf, size_t count) {$/;"	f
accum	ptlhwdef.h	/^  void accum(const Level1PTE& l) { p &= l.p; rw &= l.rw; us &= l.us; nx |= l.nx; }$/;"	f	struct:Level1PTE
accum	ptlhwdef.h	/^  void accum(const Level2PTE& l) { p &= l.p; rw &= l.rw; us &= l.us; nx |= l.nx; }$/;"	f	struct:Level1PTE
accum	ptlhwdef.h	/^  void accum(const Level3PTE& l) { p &= l.p; rw &= l.rw; us &= l.us; nx |= l.nx; }$/;"	f	struct:Level1PTE
accum	ptlhwdef.h	/^  void accum(const Level4PTE& l) { p &= l.p; rw &= l.rw; us &= l.us; nx |= l.nx; }$/;"	f	struct:Level1PTE
accum	superstl.h	/^    bitvec<N> accum(size_t i, size_t n, T v) const {$/;"	f	class:superstl::bitvec
accumop	superstl.h	/^    void accumop(int i, int n, T v) { }$/;"	f	struct:superstl::bitvecbase
accumop	superstl.h	/^    void accumop(size_t i, size_t n, T v) {$/;"	f	struct:superstl::bitvecbase
acquire	ptlhwdef.h	/^  void acquire() {$/;"	f	struct:BasicBlockBase
acquire	superstl.h	/^    W64 acquire() {$/;"	f	struct:superstl::Spinlock
acquire	superstl.h	/^    bool acquire() {$/;"	f	struct:superstl::RecursiveMutex
active_evtchns	ptlxen-events.cpp	20;"	d	file:
add	config.h	/^  void add(W64& field, const char* name, const char* description) {$/;"	f	struct:ConfigurationParser
add	config.h	/^  void add(bool& field, const char* name, const char* description) {$/;"	f	struct:ConfigurationParser
add	config.h	/^  void add(double& field, const char* name, const char* description) {$/;"	f	struct:ConfigurationParser
add	config.h	/^  void add(stringbuf& field, const char* name, const char* description) {$/;"	f	struct:ConfigurationParser
add	datastore.cpp	/^DataStoreNode& DataStoreNode::add(DataStoreNode* node) {$/;"	f	class:DataStoreNode
add	datastore.cpp	/^DataStoreNodeTemplate& DataStoreNodeTemplate::add(const char* key, DataStoreNodeTemplate& base) {$/;"	f	class:DataStoreNodeTemplate
add	datastore.h	/^  DataStoreNode& add(DataStoreNode& node) { return add(&node); }$/;"	f	struct:DataStoreNode
add	datastore.h	/^  DataStoreNode& add(const char* key) { return add(new DataStoreNode(key)); }$/;"	f	struct:DataStoreNode
add	datastore.h	/^  DataStoreNode& add(const char* key, W64s value) { return add(new DataStoreNode(key, (W64s)value)); }$/;"	f	struct:DataStoreNode
add	datastore.h	/^  DataStoreNode& add(const char* key, const W64s* value, int count) { return add(new DataStoreNode(key, (W64s*)value, count)); }$/;"	f	struct:DataStoreNode
add	datastore.h	/^  DataStoreNode& add(const char* key, const char* value) { return add(new DataStoreNode(key, (const char*)value)); }$/;"	f	struct:DataStoreNode
add	datastore.h	/^  DataStoreNode& add(const char* key, const char** value, int count) { return add(new DataStoreNode(key, (const char**)value, count)); }$/;"	f	struct:DataStoreNode
add	datastore.h	/^  DataStoreNodeTemplate& add(DataStoreNodeTemplate& node) { return add(&node); }$/;"	f	struct:DataStoreNodeTemplate
add	datastore.h	/^  DataStoreNodeTemplate& add(DataStoreNodeTemplate* node) {$/;"	f	struct:DataStoreNodeTemplate
add	datastore.h	/^  DataStoreNodeTemplate& add(const char* key) { return add(new DataStoreNodeTemplate(key, DS_NODE_TYPE_NULL)); }$/;"	f	struct:DataStoreNodeTemplate
add	dcache.cpp	/^int LoadFillReqQueue<size>::add(const LoadFillReq& req) {$/;"	f	class:LoadFillReqQueue
add	logic.h	/^  void add(const T& t) {$/;"	f	struct:HistoryBuffer
add	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* add() {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* add(int type) {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* add(int type, const FetchBufferEntry& uop) {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* add(int type, const RIPVirtPhys& rvp) {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* add(int type, const ReorderBufferEntry* rob) {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore.cpp	/^int ListOfStateLists::add(StateList* list) {$/;"	f	class:ListOfStateLists
add	ooocore.h	/^    OutOfOrderCoreEvent* add() {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore.h	/^    OutOfOrderCoreEvent* add(int type) {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore.h	/^    OutOfOrderCoreEvent* add(int type, const FetchBufferEntry& uop) {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore.h	/^    OutOfOrderCoreEvent* add(int type, const RIPVirtPhys& rvp) {$/;"	f	struct:OutOfOrderModel::EventLog
add	ooocore.h	/^    OutOfOrderCoreEvent* add(int type, const ReorderBufferEntry* rob) {$/;"	f	struct:OutOfOrderModel::EventLog
add	seqcore.cpp	/^  SequentialCoreEvent* add() {$/;"	f	struct:SequentialCoreEventLog
add	seqcore.cpp	/^  SequentialCoreEvent* add(int type, int coreid, const TransOp& uop, W64 rip, int uopid, W64 uuid, W64 eomid) {$/;"	f	struct:SequentialCoreEventLog
add	superstl.h	/^      int add(const T& entry) {$/;"	f	struct:superstl::ChunkList::Chunk
add	superstl.h	/^    T& add(T& obj) {$/;"	f	struct:superstl::SelfHashtable
add	superstl.h	/^    T* add(T obj) {$/;"	f	struct:superstl::GenericChunkList
add	superstl.h	/^    T* add(T* obj) {$/;"	f	struct:superstl::SelfHashtable
add	superstl.h	/^    T* add(const K& key, const T& value) { $/;"	f	struct:superstl::Hashtable
add	superstl.h	/^    T* add(const T& e) {$/;"	f	struct:superstl::SearchableChunkList16Entry
add	superstl.h	/^    bool add(const T& entry, Locator& hint) {$/;"	f	struct:superstl::ChunkList
add	superstl.h	/^    ptr_t add(T value) {$/;"	f	struct:superstl::FixedValueHashtable
add	superstl.h	/^    ptr_t add(Tkey key, Tdata value) {$/;"	f	struct:superstl::FixedKeyValueHashtable
add	superstl.h	/^    void add(int qid, T tag) {$/;"	f	struct:superstl::FixedIntegerQueueSet
add_commit	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* add_commit(int type, const ReorderBufferEntry* rob) {$/;"	f	struct:OutOfOrderModel::EventLog
add_commit	ooocore.h	/^    OutOfOrderCoreEvent* add_commit(int type, const ReorderBufferEntry* rob) {$/;"	f	struct:OutOfOrderModel::EventLog
add_index_modulo	globals.h	/^inline int add_index_modulo(int index, int increment, int bufsize) {$/;"	f
add_load_store	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* add_load_store(int type, const ReorderBufferEntry* rob, LoadStoreQueueEntry* inherit_sfr = null, Waddr addr = 0) {$/;"	f	struct:OutOfOrderModel::EventLog
add_load_store	ooocore.h	/^    OutOfOrderCoreEvent* add_load_store(int type, const ReorderBufferEntry* rob, LoadStoreQueueEntry* inherit_sfr = null, Waddr addr = 0) {$/;"	f	struct:OutOfOrderModel::EventLog
add_magnitudes	mathlib.cpp	/^  static void add_magnitudes(const mp_no *x, const mp_no *y, mp_no *z, int p) {$/;"	f	namespace:math::mpa	file:
add_page_table_update	ptlxen.h	/^T add_page_table_update(T& target, const T& source) {$/;"	f
add_to_free_pool	mm.cpp	/^  void add_to_free_pool(void* p, size_t size) {$/;"	f	struct:ExtentAllocator
add_to_head	superstl.h	/^    void add_to_head(T& obj) { add_to_head(LM::linkof(&obj)); }$/;"	f	class:superstl::queue
add_to_head	superstl.h	/^    void add_to_head(T* obj) { add_to_head(LM::linkof(obj)); }$/;"	f	class:superstl::queue
add_to_head	superstl.h	/^    void add_to_head(queuelink<T>& root) {$/;"	f	class:superstl::queuelink
add_to_head	superstl.h	/^    void add_to_head(selflistlink* link) { addlink(this, link, next); }$/;"	f	class:superstl::queue
add_to_tail	superstl.h	/^    void add_to_tail(T& obj) { add_to_tail(LM::linkof(&obj)); }$/;"	f	class:superstl::queue
add_to_tail	superstl.h	/^    void add_to_tail(T* obj) { add_to_tail(LM::linkof(obj)); }$/;"	f	class:superstl::queue
add_to_tail	superstl.h	/^    void add_to_tail(queuelink<T>& root) {$/;"	f	class:superstl::queuelink
add_to_tail	superstl.h	/^    void add_to_tail(selflistlink* link) { addlink(prev, link, this); }$/;"	f	class:superstl::queue
addcommitref	ooocore-amd-k8.h	/^    void addcommitref(int archreg, W8 threadid) { addref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
addcommitref	ooocore.h	/^    void addcommitref(int archreg, W8 threadid) { addref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
addentry	config.h	/^  void addentry(void* baseptr, void* field, int type, const char* name, const char* description) {$/;"	f	struct:ConfigurationParserBase
addfloat	datastore.h	/^  DataStoreNode& addfloat(const char* key, double value) { return add(new DataStoreNode(key, (double)value)); }$/;"	f	struct:DataStoreNode
addfloat	datastore.h	/^  DataStoreNode& addfloat(const char* key, double* value, int count) { return add(new DataStoreNode(key, (double*)value, count)); }$/;"	f	struct:DataStoreNode
addfloat	datastore.h	/^  DataStoreNodeTemplate& addfloat(const char* key, int count = 1) { return add(new DataStoreNodeTemplate(key, DS_NODE_TYPE_FLOAT, count)); }$/;"	f	struct:DataStoreNodeTemplate
addhead	superstl.h	/^    void addhead(int qid, T tag) {$/;"	f	struct:superstl::FixedIntegerQueueSet
addhead	superstl.h	/^    void addhead(selfqueuelink& root) {$/;"	f	class:superstl::selfqueuelink
addhead	superstl.h	/^    void addhead(selfqueuelink* root) {$/;"	f	class:superstl::selfqueuelink
addint	datastore.h	/^  DataStoreNodeTemplate& addint(const char* key, int count = 1) { return add(new DataStoreNodeTemplate(key, DS_NODE_TYPE_INT, count)); }$/;"	f	struct:DataStoreNodeTemplate
addlink	superstl.h	/^    void addlink(queuelink<T>* prev, queuelink<T>* next) {$/;"	f	class:superstl::queuelink
addlink	superstl.h	/^    void addlink(selflistlink* prev, selflistlink* link, selflistlink* next) {$/;"	f	class:superstl::queue
addlink	superstl.h	/^    void addlink(selfqueuelink* prev, selfqueuelink* next) {$/;"	f	class:superstl::selfqueuelink
addmachine	ptlsim.cpp	/^void PTLsimMachine::addmachine(const char* name, PTLsimMachine* machine) {$/;"	f	class:PTLsimMachine
addmod	superstl.h	/^    inline int addmod(int a, int b) { return ((a + b) & bufmask); }$/;"	f	class:superstl::idstream
addr	dcache-amd-k8.h	/^      W64 addr;     \/\/ physical line address we are waiting for$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
addr	dcache-amd-k8.h	/^    W64 addr;       \/\/ physical address$/;"	m	struct:CacheSubsystem::LoadFillReq
addr	dcache.h	/^      W64 addr;     \/\/ physical line address we are waiting for$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
addr	dcache.h	/^    W64 addr;       \/\/ physical address$/;"	m	struct:CacheSubsystem::LoadFillReq
addr	kernel.cpp	/^  W32 addr;$/;"	m	struct:old_mmap32_arg_struct	file:
addr	logic.h	/^    W64* addr;$/;"	m	struct:CommitRollbackCache::BackupCacheLine
addr	ptlhwdef.h	/^      W64 addr:48, rdflags:16;$/;"	m	struct:IssueState::__anon114::__anon115
addr_list	seqcore.cpp	/^  W64 addr_list[N];$/;"	m	struct:TransactionalMemory	file:
addr_to_hash_slot	mm.cpp	/^  int addr_to_hash_slot(void* addr) const {$/;"	f	struct:ExtentAllocator
addref	ooocore-amd-k8.h	/^    void addref() { refcount++; }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
addref	ooocore-amd-k8.h	/^    void addref(const ReorderBufferEntry& rob, W8 threadid) { addref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
addref	ooocore.h	/^    void addref() { refcount++; }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
addref	ooocore.h	/^    void addref(const ReorderBufferEntry& rob, W8 threadid) { addref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
address	mm-private.h	/^  W32 address;$/;"	m	struct:MemoryManagerEvent
address	mm.cpp	/^  void* address;$/;"	m	struct:AddressSizeSpan	file:
address_generate_and_load_or_store	decode-core.cpp	/^void TraceDecoder::address_generate_and_load_or_store(int destreg, int srcreg, const DecodedOperand& memref, int opcode, int datatype, int cachelevel, bool force_seg_bias, bool rmw) {$/;"	f	class:TraceDecoder
addrgen	oooexec.cpp	/^Waddr ReorderBufferEntry::addrgen(LoadStoreQueueEntry& state, Waddr& origaddr, Waddr& virtpage, W64 ra, W64 rb, W64 rc, PTEUpdate& pteupdate, Waddr& addr, int& exception, PageFaultErrorCode& pfec, bool& annul) {$/;"	f	class:ReorderBufferEntry
addrgen	seqcore.cpp	/^  Waddr addrgen(const TransOp& uop, SFR& state, Waddr& origaddr, W64 ra, W64 rb, W64 rc, PTEUpdate& pteupdate, Waddr& addr, int& exception, PageFaultErrorCode& pfec, Level1PTE& pteused, bool& annul) {$/;"	f	struct:SequentialCore
addrsize_prefix	decode.h	/^  bool addrsize_prefix;$/;"	m	struct:TraceDecoder
addrvalid	ptlhwdef.h	/^  W64 addrvalid:1, invalid:1, datavalid:1, physaddr:45, bytemask:8, tag:8;$/;"	m	struct:SFR
addscaled	datastore.h	/^  DataStoreNode& addscaled(const DataStoreNode& b, double scale) {$/;"	f	struct:DataStoreNode
addspecref	ooocore-amd-k8.h	/^    void addspecref(int archreg, W8 threadid) { addref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
addspecref	ooocore.h	/^    void addspecref(int archreg, W8 threadid) { addref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
addstring	datastore.h	/^  DataStoreNodeTemplate& addstring(const char* key, int limit, int count = 1) {$/;"	f	struct:DataStoreNodeTemplate
addtail	superstl.h	/^    void addtail(selfqueuelink& root) {$/;"	f	class:superstl::selfqueuelink
addtail	superstl.h	/^    void addtail(selfqueuelink* root) {$/;"	f	class:superstl::selfqueuelink
addto	superstl.h	/^    void addto(queuelink<T>& root) {$/;"	f	class:superstl::queuelink
addto	superstl.h	/^    void addto(selflistlink*& root) {$/;"	f	class:superstl::selflistlink
addto	superstl.h	/^    void addto(selfqueuelink& root) {$/;"	f	class:superstl::selfqueuelink
addto	superstl.h	/^    void addto(selfqueuelink* root) {$/;"	f	class:superstl::selfqueuelink
addunique	superstl.h	/^    T* addunique(T obj) {$/;"	f	struct:superstl::GenericChunkList
aligned	globals.h	/^static inline bool aligned(W64 address, int size) {$/;"	f
aligned	ooocore-amd-k8.h	/^        W64 aligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::type
aligned	ooocore-amd-k8.h	/^        W64 aligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::type
aligned	ooocore.h	/^        W64 aligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::type
aligned	ooocore.h	/^        W64 aligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::type
alignfixup	seqcore.cpp	/^    } alignfixup;$/;"	m	union:SequentialCoreEvent::__anon86	typeref:struct:SequentialCoreEvent::__anon86::__anon89	file:
alignto	globals.h	43;"	d
aligntype	dcache-amd-k8.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
aligntype	dcache.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
all	superstl.h	/^    bool all() const { return allset(N); }$/;"	f	class:superstl::bitvec
all_consumers_off_bypass	ooocore-amd-k8.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
all_consumers_off_bypass	ooocore.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
all_consumers_sourced_from_bypass	ooocore-amd-k8.h	/^        byte transient:1, all_consumers_sourced_from_bypass:1, no_branches_between_renamings:1, dest_renamed_before_writeback:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon55
all_consumers_sourced_from_bypass	ooocore-amd-k8.h	/^    W8  all_consumers_sourced_from_bypass:1;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
all_consumers_sourced_from_bypass	ooocore.h	/^        byte transient:1, all_consumers_sourced_from_bypass:1, no_branches_between_renamings:1, dest_renamed_before_writeback:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon19
all_consumers_sourced_from_bypass	ooocore.h	/^    W8  all_consumers_sourced_from_bypass:1;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
all_insns_fast	stats.h	/^      W64 all_insns_fast;$/;"	m	struct:PTLsimStats::decoder::bb_decode_type
alloc	logic.h	/^  T* alloc() {$/;"	f	struct:FixedQueue
alloc	logic.h	/^  T* alloc() {$/;"	f	struct:Queue
alloc	mm.cpp	/^  void* alloc() {$/;"	f	struct:SlabAllocator
alloc	mm.cpp	/^  void* alloc(size_t size) {$/;"	f	struct:ExtentAllocator
alloc	ooocore-amd-k8.h	/^    struct alloc {$/;"	s	struct:PerContextOutOfOrderCoreStats::frontend
alloc	ooocore-amd-k8.h	/^    } alloc;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend	typeref:struct:PerContextOutOfOrderCoreStats::frontend::alloc
alloc	ooocore.cpp	/^PhysicalRegister* PhysicalRegisterFile::alloc(W8 threadid, int r) {$/;"	f	class:PhysicalRegisterFile
alloc	ooocore.h	/^    struct alloc {$/;"	s	struct:PerContextOutOfOrderCoreStats::frontend
alloc	ooocore.h	/^    } alloc;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend	typeref:struct:PerContextOutOfOrderCoreStats::frontend::alloc
alloc	superstl.h	/^    W64s alloc() {$/;"	f	struct:superstl::BitmapAllocator3Level
alloc	superstl.h	/^    W64s alloc(W64 index) {$/;"	f	struct:superstl::BitmapAllocator3Level
alloc_control_port	ptlmon.cpp	/^  void alloc_control_port() {$/;"	f	struct:XenController
alloc_extent	mm.cpp	/^  void alloc_extent(FreeExtent* r) {$/;"	f	struct:ExtentAllocator
alloc_from_page	mm.cpp	/^  FreeObjectHeader* alloc_from_page(PageHeader* page) {  $/;"	f	struct:SlabAllocator
alloc_new_page	mm.cpp	/^  PageHeader* alloc_new_page() {$/;"	f	struct:SlabAllocator
alloc_page	ptlmon.cpp	620;"	d	file:
alloc_pages	ptlmon.cpp	621;"	d	file:
alloc_ptlsim_pages	ptlmon.cpp	/^  bool alloc_ptlsim_pages(mfn_t* mfns, int ptl_page_count) {$/;"	f	struct:XenController
alloc_reserved_entry	ooocore-amd-k8.h	/^    bool alloc_reserved_entry() {$/;"	f	struct:OutOfOrderModel::IssueQueue
alloc_reserved_entry	ooocore.h	/^    bool alloc_reserved_entry() {$/;"	f	struct:OutOfOrderModel::IssueQueue
allocated	ooocore-amd-k8.h	/^    bool allocated() const { return (state != PHYSREG_FREE); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
allocated	ooocore.h	/^    bool allocated() const { return (state != PHYSREG_FREE); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
allocations	ooocore-amd-k8.h	/^    W64 allocations;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
allocations	ooocore.h	/^    W64 allocations;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
allocator	mm.cpp	/^    SlabAllocator* allocator;$/;"	m	struct:SlabAllocator::PageHeader	file:
allocmap	kernel.cpp	/^AddressSpace::spat_t AddressSpace::allocmap() {$/;"	f	class:AddressSpace
allocs	mm.cpp	/^  W64 allocs;$/;"	m	struct:ExtentAllocator	file:
allocs	mm.cpp	/^  W64 allocs;$/;"	m	struct:SlabAllocator	file:
allow_exec	kernel.h	/^  void allow_exec(void* address, Waddr size) { make_accessible(address, size, execmap); }$/;"	f	class:AddressSpace
allow_read	kernel.h	/^  void allow_read(void* address, Waddr size) { make_accessible(address, size, readmap); }$/;"	f	class:AddressSpace
allow_write	kernel.h	/^  void allow_write(void* address, Waddr size) { make_accessible(address, size, writemap); }$/;"	f	class:AddressSpace
allowed_clusters	ooocore-amd-k8.h	/^        W16 allowed_clusters;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon47
allowed_clusters	ooocore.h	/^        W16 allowed_clusters;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon11
allready	ooocore-amd-k8.h	/^    bitvec<size> allready;$/;"	m	struct:OutOfOrderModel::IssueQueue
allready	ooocore.h	/^    bitvec<size> allready;$/;"	m	struct:OutOfOrderModel::IssueQueue
allset	superstl.h	/^    bool allset() const { return (~(*this)).iszero(); }$/;"	f	class:superstl::bitvec
alu_reg_or_mem	decode-core.cpp	/^void TraceDecoder::alu_reg_or_mem(int opcode, const DecodedOperand& rd, const DecodedOperand& ra, W32 setflags, int rcreg, $/;"	f	class:TraceDecoder
aluop	uopimpl.cpp	/^inline void aluop(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
aluop3s	uopimpl.cpp	/^inline void aluop3s(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
always_mask_port	ptlxen-events.cpp	/^bitvec<4096> always_mask_port;$/;"	v
am	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
amd_k8_counter_config	perfctrs.cpp	/^CounterPairConfig amd_k8_counter_config[GENERIC_PERFCTR_COUNT] = {$/;"	v
and_flag_gen_op	uopimpl.cpp	/^template <typename T> struct and_flag_gen_op { $/;"	s	file:
andop	superstl.h	/^    void andop(const bitvecbase<0>&) { }$/;"	f	struct:superstl::bitvecbase
andop	superstl.h	/^    void andop(const bitvecbase<1>& x) { w &= x.w; }$/;"	f	struct:superstl::bitvecbase
andop	superstl.h	/^    void andop(const bitvecbase<N>& x) {$/;"	f	struct:superstl::bitvecbase
annul	dcache.cpp	/^void LoadFillReqQueue<size>::annul(int lfrqslot) {$/;"	f	class:LoadFillReqQueue
annul	logic.h	/^  void annul(T& entry) {$/;"	f	struct:FixedQueue
annul	logic.h	/^  void annul(T* entry) { annul(*entry); }$/;"	f	struct:FixedQueue
annul	ooocore-amd-k8.h	/^      } annul;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon52
annul	ooocore-amd-k8.h	/^    bool annul(int slot) {$/;"	f	struct:OutOfOrderModel::IssueQueue
annul	ooocore.h	/^      } annul;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon16
annul	ooocore.h	/^    bool annul(int slot) {$/;"	f	struct:OutOfOrderModel::IssueQueue
annul	oooexec.cpp	/^W64 ReorderBufferEntry::annul(bool keep_misspec_uop, bool return_first_annulled_rip) {$/;"	f	class:ReorderBufferEntry
annul_after	ooocore-amd-k8.h	/^    W64 annul_after() { return annul(true); }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
annul_after	ooocore.h	/^    W64 annul_after() { return annul(true); }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
annul_after_and_including	ooocore-amd-k8.h	/^    W64 annul_after_and_including() { return annul(false); }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
annul_after_and_including	ooocore.h	/^    W64 annul_after_and_including() { return annul(false); }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
annul_fetchq	ooopipe.cpp	/^void ThreadContext::annul_fetchq() {$/;"	f	class:ThreadContext
annul_lfrq	dcache.cpp	/^void MissBuffer<SIZE>::annul_lfrq(int slot) {$/;"	f	class:MissBuffer
annul_lfrq_slot	dcache.cpp	/^void CacheHierarchy::annul_lfrq_slot(int lfrqslot) {$/;"	f	class:CacheHierarchy
annulpop	branchpred.cpp	/^  void annulpop(const ReturnAddressStackEntry& old) {$/;"	f	struct:ReturnAddressStack
annulpush	branchpred.cpp	/^  void annulpush(const ReturnAddressStackEntry& old) {$/;"	f	struct:ReturnAddressStack
annulras	branchpred.cpp	/^  void annulras(const PredictorUpdate& predinfo) {$/;"	f	struct:CombinedPredictor
annulras	branchpred.cpp	/^void BranchPredictorInterface::annulras(const PredictorUpdate& predinfo) {$/;"	f	class:BranchPredictorInterface
annulras	ooocore-amd-k8.h	/^        byte annulras;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon52
annulras	ooocore.h	/^        byte annulras;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon16
annuls	dcache-amd-k8.h	/^    W64 annuls;$/;"	m	struct:DataCacheStats::lfrq
annuls	dcache.h	/^    W64 annuls;$/;"	m	struct:DataCacheStats::lfrq
annuls	ooocore-amd-k8.h	/^      W64 annuls;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
annuls	ooocore.h	/^      W64 annuls;$/;"	m	struct:OutOfOrderCoreStats::branchpred::ras
annuls	ooocore.h	/^      W64 annuls;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
annuluop	ooocore-amd-k8.h	/^    bool annuluop(int uopid) {$/;"	f	struct:OutOfOrderModel::IssueQueue
annuluop	ooocore.h	/^    bool annuluop(int uopid) {$/;"	f	struct:OutOfOrderModel::IssueQueue
any_flags_in_insn	ptlhwdef.h	/^  byte final_insn_in_bb:1, final_arch_in_insn:1, final_flags_in_insn:1, any_flags_in_insn:1, pad:3, marked:1;$/;"	m	struct:TransOpBase
apicid	cpuid.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	struct:ProcessorMiscInfo::__anon33	file:
apicid	decode-complex.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	struct:ProcessorMiscInfo::__anon71	file:
apply	datastore.h	/^  DataStoreNode& apply(const F& func, const DataStoreNode& b) {$/;"	f	struct:DataStoreNode
apply	datastore.h	/^  static DataStoreNode* apply(const F& func, const DataStoreNode& a, const DataStoreNode& b) {$/;"	f	struct:DataStoreNode
arch_pseudo_reg_to_arch_reg	decode-core.cpp	/^const byte arch_pseudo_reg_to_arch_reg[APR_COUNT] = {$/;"	v
arch_reg_names	ptlhwdef.cpp	/^const char* arch_reg_names[TRANSREG_COUNT] = {$/;"	v
archdest_can_commit	ooopipe.cpp	/^  const byte archdest_can_commit[TRANSREG_COUNT] = {$/;"	v
archdest_is_visible	ooopipe.cpp	/^  const byte archdest_is_visible[TRANSREG_COUNT] = {$/;"	v
archreg	ooocore-amd-k8.h	/^    W8  archreg;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
archreg	ooocore-amd-k8.h	/^    byte archreg;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
archreg	ooocore.h	/^    W8  archreg;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
archreg	ooocore.h	/^    byte archreg;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
archreg_remap_table	seqcore.cpp	/^static const byte archreg_remap_table[TRANSREG_COUNT] = {$/;"	v	file:
arf	seqcore.cpp	/^  W64 arf[TRANSREG_COUNT];$/;"	m	struct:SequentialCore	file:
arflags	seqcore.cpp	/^  W16 arflags[TRANSREG_COUNT];$/;"	m	struct:SequentialCore	file:
arg1	ptlxen.h	/^      W64 arg1;$/;"	m	struct:PTLsimHostCall::__anon99::__anon101
arg2	ptlxen.h	/^      W64 arg2;$/;"	m	struct:PTLsimHostCall::__anon99::__anon101
arg3	ptlxen.h	/^      W64 arg3;$/;"	m	struct:PTLsimHostCall::__anon99::__anon101
arg4	ptlxen.h	/^      W64 arg4;$/;"	m	struct:PTLsimHostCall::__anon99::__anon101
arg5	ptlxen.h	/^      W64 arg5;$/;"	m	struct:PTLsimHostCall::__anon99::__anon101
arg6	ptlxen.h	/^      W64 arg6;$/;"	m	struct:PTLsimHostCall::__anon99::__anon101
args	stats.h	/^      char args[256];$/;"	m	struct:PTLsimStats::simulator::run
array	superstl.h	/^    array() { }$/;"	f	struct:superstl::array
array	superstl.h	/^  struct array {$/;"	s	namespace:superstl
array_t	logic.h	/^  typedef LockableCommitRollbackAssociativeArray<T, V, setcount, waycount, linesize, stats> array_t;$/;"	t	struct:CommitRollbackCache
arraycopy	globals.h	/^inline void arraycopy(T* dest, const T* source, int count) { memcpy(dest, source, count * sizeof(T)); }$/;"	f
asmlinkage	globals.h	52;"	d
asp	kernel.cpp	/^AddressSpace asp;$/;"	v
assert	dcache-amd-k8.h	35;"	d
assert	dcache-amd-k8.h	36;"	d
assert	dcache.h	35;"	d
assert	dcache.h	36;"	d
assert	globals.h	72;"	d
assert	ooocore.cpp	24;"	d	file:
assert	ooocore.cpp	25;"	d	file:
assert	oooexec.cpp	23;"	d	file:
assert	oooexec.cpp	24;"	d	file:
assert	ooopipe.cpp	23;"	d	file:
assert	ooopipe.cpp	24;"	d	file:
assert	seqcore.cpp	21;"	d	file:
assert	seqcore.cpp	22;"	d	file:
assert_fail	glibc.cpp	/^extern "C" void assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) {$/;"	f
assert_fail	kernel.cpp	/^extern "C" void assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) {$/;"	f
assert_fail	ptlxen.cpp	/^asmlinkage void assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) {$/;"	f
assert_fail_trap	globals.h	/^static inline void assert_fail_trap(const char *__assertion, const char *__file, unsigned int __line, const char *__function) {$/;"	f
assign	superstl.h	/^    bitvec<N>& assign(size_t index, int val) {$/;"	f	class:superstl::bitvec
assignbit	globals.h	184;"	d
assist	seqcore.cpp	/^    } assist;$/;"	m	union:SequentialCoreEvent::__anon86	typeref:struct:SequentialCoreEvent::__anon86::__anon93	file:
assist_cld	decode-complex.cpp	/^void assist_cld(Context& ctx) {$/;"	f
assist_cpuid	decode-complex.cpp	/^void assist_cpuid(Context& ctx) {$/;"	f
assist_div	decode-complex.cpp	/^template <> void assist_div<W64>(Context& ctx) { assert(false); }$/;"	f
assist_div	decode-complex.cpp	/^template <typename T> void assist_div(Context& ctx) {$/;"	f
assist_exec_page_fault	decode-core.cpp	/^void assist_exec_page_fault(Context& ctx) {$/;"	f
assist_func_t	ptlhwdef.h	/^typedef void (*assist_func_t)(Context& ctx);$/;"	t
assist_fxrstor	decode-complex.cpp	/^void assist_fxrstor(Context& ctx) {$/;"	f
assist_fxsave	decode-complex.cpp	/^void assist_fxsave(Context& ctx) {$/;"	f
assist_gp_fault	decode-core.cpp	/^void assist_gp_fault(Context& ctx) {$/;"	f
assist_hypercall	decode-complex.cpp	/^void assist_hypercall(Context& ctx) {$/;"	f
assist_idiv	decode-complex.cpp	/^template <> void assist_idiv<W64>(Context& ctx) { assert(false); }$/;"	f
assist_idiv	decode-complex.cpp	/^template <typename T> void assist_idiv(Context& ctx) {$/;"	f
assist_index	decode-core.cpp	/^int assist_index(assist_func_t assist) {$/;"	f
assist_int	decode-complex.cpp	/^void assist_int(Context& ctx) {$/;"	f
assist_invalid_opcode	decode-core.cpp	/^void assist_invalid_opcode(Context& ctx) {$/;"	f
assist_ioport_in	decode-complex.cpp	/^void assist_ioport_in(Context& ctx) {$/;"	f
assist_ioport_out	decode-complex.cpp	/^void assist_ioport_out(Context& ctx) {$/;"	f
assist_iret16	decode-complex.cpp	/^void assist_iret16(Context& ctx) {$/;"	f
assist_iret32	decode-complex.cpp	/^void assist_iret32(Context& ctx) {$/;"	f
assist_iret64	decode-complex.cpp	/^void assist_iret64(Context& ctx) {$/;"	f
assist_ldmxcsr	decode-complex.cpp	/^void assist_ldmxcsr(Context& ctx) {$/;"	f
assist_name	decode-core.cpp	/^const char* assist_name(assist_func_t assist) {$/;"	f
assist_names	decode.h	/^static const char* assist_names[ASSIST_COUNT] = {$/;"	v
assist_popf	decode-complex.cpp	/^void assist_popf(Context& ctx) {$/;"	f
assist_ptlcall	kernel.cpp	/^void assist_ptlcall(Context& ctx) {$/;"	f
assist_ptlcall	ptlxen.cpp	/^void assist_ptlcall(Context& ctx) {$/;"	f
assist_rdmsr	decode-complex.cpp	/^void assist_rdmsr(Context& ctx) {$/;"	f
assist_rdtsc	decode-complex.cpp	/^void assist_rdtsc(Context& ctx) {$/;"	f
assist_requested_break	ptlxen.cpp	/^int assist_requested_break = 0;$/;"	v
assist_requested_break_command	ptlxen.cpp	/^stringbuf assist_requested_break_command;$/;"	v
assist_std	decode-complex.cpp	/^void assist_std(Context& ctx) {$/;"	f
assist_syscall	decode-complex.cpp	/^void assist_syscall(Context& ctx) {$/;"	f
assist_sysenter	decode-complex.cpp	/^void assist_sysenter(Context& ctx) {$/;"	f
assist_write_cr0	decode-complex.cpp	/^void assist_write_cr0(Context& ctx) {$/;"	f
assist_write_cr2	decode-complex.cpp	/^void assist_write_cr2(Context& ctx) {$/;"	f
assist_write_cr3	decode-complex.cpp	/^void assist_write_cr3(Context& ctx) {$/;"	f
assist_write_cr4	decode-complex.cpp	/^void assist_write_cr4(Context& ctx) {$/;"	f
assist_write_debug_reg	decode-complex.cpp	/^void assist_write_debug_reg(Context& ctx) {$/;"	f
assist_write_segreg	decode-complex.cpp	/^void assist_write_segreg(Context& ctx) {$/;"	f
assist_wrmsr	decode-complex.cpp	/^void assist_wrmsr(Context& ctx) {$/;"	f
assist_x87_fclex	decode-x87.cpp	/^void assist_x87_fclex(Context& ctx) {$/;"	f
assist_x87_finit	decode-x87.cpp	/^void assist_x87_finit(Context& ctx) {$/;"	f
assist_x87_fld80	decode-x87.cpp	/^void assist_x87_fld80(Context& ctx) {$/;"	f
assist_x87_fprem	decode-x87.cpp	/^void assist_x87_fprem(Context& ctx) {$/;"	f
assist_x87_fprem1	decode-x87.cpp	/^void assist_x87_fprem1(Context& ctx) {$/;"	f
assist_x87_frndint	decode-x87.cpp	/^void assist_x87_frndint(Context& ctx) {$/;"	f
assist_x87_frstor	decode-x87.cpp	/^void assist_x87_frstor(Context& ctx) {$/;"	f
assist_x87_fsave	decode-x87.cpp	/^void assist_x87_fsave(Context& ctx) {$/;"	f
assist_x87_fscale	decode-x87.cpp	/^void assist_x87_fscale(Context& ctx) {$/;"	f
assist_x87_fstp80	decode-x87.cpp	/^void assist_x87_fstp80(Context& ctx) {$/;"	f
assist_x87_fxam	decode-x87.cpp	/^void assist_x87_fxam(Context& ctx) {$/;"	f
assistid_to_func	decode-core.cpp	/^const assist_func_t assistid_to_func[ASSIST_COUNT] = {$/;"	v
assists	stats.h	/^    W64 assists[ASSIST_COUNT]; \/\/ label: assist_names$/;"	m	struct:PTLsimStats::external
assoc_t	ooocore-amd-k8.h	/^    typedef FullyAssociativeTags16bit<size, size> assoc_t;$/;"	t	struct:OutOfOrderModel::IssueQueue
assoc_t	ooocore.h	/^    typedef FullyAssociativeTags16bit<size, size> assoc_t;$/;"	t	struct:OutOfOrderModel::IssueQueue
atexit	klibc.cpp	/^extern "C" int atexit(void (*function)(void)) { return 0; }$/;"	f
atof	klibc.cpp	/^extern "C" double atof(const char* s) {$/;"	f
atoi_with_check	ptlmon.cpp	/^int atoi_with_check(const char* s) {$/;"	f
atomicclear	superstl.h	/^      bool atomicclear() { return x86_locked_btr(*wp, bpos); }$/;"	f	class:superstl::bitvec::reference
atomicinv	superstl.h	/^      bool atomicinv() { return x86_locked_btc(*wp, bpos); }$/;"	f	class:superstl::bitvec::reference
atomicset	superstl.h	/^      bool atomicset() { return x86_locked_bts(*wp, bpos); }$/;"	f	class:superstl::bitvec::reference
attach	ptlmon.cpp	/^  bool attach(int domain) {$/;"	f	struct:XenController
auxv_start	kernel.cpp	/^native_auxv_t* auxv_start;$/;"	v
avail_mfn_count	ptlxen.h	/^  W64 avail_mfn_count;$/;"	m	struct:PTLsimMonitorInfo
average_latency	dcache-amd-k8.h	/^    double average_latency;$/;"	m	struct:DataCacheStats::lfrq
average_latency	dcache.h	/^    double average_latency;$/;"	m	struct:DataCacheStats::lfrq
average_of_subtrees	datastore.cpp	/^DataStoreNode* DataStoreNode::average_of_subtrees() const {$/;"	f	class:DataStoreNode
average_of_subtrees_cache	datastore.h	/^  DataStoreNode* average_of_subtrees_cache;$/;"	m	struct:DataStoreNode
avl	ptlhwdef.h	/^	W16 limit:4, avl:1, l:1, d:1, g:1, base2:8;$/;"	m	struct:SegmentDescriptor
avl	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
avl	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
avl	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
avl	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
avlhi	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
avlhi	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
avlhi	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
avlhi	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
b	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
b	ptlstats.cpp	/^  float b;$/;"	m	struct:RGBAColor	file:
b	superstl.h	/^    const bitvec<N>& b;$/;"	m	struct:superstl::hilo
b0	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	struct:PermbControlInfo::__anon133
b1	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	struct:PermbControlInfo::__anon133
b2	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	struct:PermbControlInfo::__anon133
b3	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	struct:PermbControlInfo::__anon133
b4	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	struct:PermbControlInfo::__anon133
b5	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	struct:PermbControlInfo::__anon133
b6	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	struct:PermbControlInfo::__anon133
b7	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	struct:PermbControlInfo::__anon133
b_mode	decode.h	/^enum { b_mode, v_mode, w_mode, d_mode, q_mode, x_mode, dq_mode };$/;"	e	enum:__anon140
backup_and_reopen_logfile	ptlsim.cpp	/^void backup_and_reopen_logfile() {$/;"	f
bank_conflict	ooocore-amd-k8.h	/^          W64 bank_conflict;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
bank_conflict	ooocore-amd-k8.h	/^          W64 bank_conflict;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
bank_conflict	ooocore.h	/^          W64 bank_conflict;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
bank_conflict	ooocore.h	/^          W64 bank_conflict;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
barrier	globals.h	312;"	d
barrier	ooocore-amd-k8.h	/^      W64 barrier;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
barrier	ooocore.h	/^      W64 barrier;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
barrier	ptlmon.cpp	162;"	d	file:
base	decode.h	/^  byte base:3, index:3, scale:2;$/;"	m	struct:SIBByte
base	ptlhwdef.h	/^  W64 base;$/;"	m	struct:SegmentDescriptorCache
base0	ptlhwdef.h	/^	W16 base0;$/;"	m	struct:SegmentDescriptor
base1	ptlhwdef.h	/^	W16 base1:8, type:4, s:1, dpl:2, p:1;$/;"	m	struct:SegmentDescriptor
base2	ptlhwdef.h	/^	W16 limit:4, avl:1, l:1, d:1, g:1, base2:8;$/;"	m	struct:SegmentDescriptor
base_addr	kernel.cpp	/^  W32 base_addr;$/;"	m	struct:user_desc_32bit	file:
base_environ	klibc.cpp	/^char* base_environ[] = {null};$/;"	v
base_system_time	ptlhwdef.h	/^  W64 base_system_time;$/;"	m	struct:ContextBase
base_t	branchpred.cpp	/^  typedef Queue<ReturnAddressStackEntry, SIZE> base_t;$/;"	t	struct:ReturnAddressStack	file:
base_t	dcache-amd-k8.h	/^    typedef AssociativeArray<W64, V, setcount, waycount, linesize, stats> base_t;$/;"	t	struct:CacheSubsystem::DataCache
base_t	dcache-amd-k8.h	/^    typedef FullyAssociativeTagsNbitOneHot<size, 40> base_t;$/;"	t	struct:CacheSubsystem::TranslationLookasideBuffer
base_t	dcache.h	/^    typedef AssociativeArray<W64, V, setcount, waycount, linesize, stats> base_t;$/;"	t	struct:CacheSubsystem::DataCache
base_t	dcache.h	/^    typedef FullyAssociativeTagsNbitOneHot<size, 40> base_t;$/;"	t	struct:CacheSubsystem::TranslationLookasideBuffer
base_t	logic.h	/^  typedef FixedQueue<T, SIZE> base_t;$/;"	t	struct:Queue
base_t	logic.h	/^  typedef W16 base_t;$/;"	t	struct:FullyAssociativeTags16bit
base_t	logic.h	/^  typedef W64 base_t;$/;"	t	struct:FullyAssociativeTagsNbitOneHot
base_t	logic.h	/^  typedef byte base_t;$/;"	t	struct:FullyAssociativeTags8bit
base_t	superstl.h	/^    typedef KeyValuePair<K, T> base_t;$/;"	t	struct:superstl::ObjectHashtableEntry
base_t	superstl.h	/^    typedef SelfHashtable<K, entry_t, setcount, ObjectHashtableLinkManager<K, T, KM> > base_t;$/;"	t	struct:superstl::Hashtable
base_t	superstl.h	/^    typedef bitvecbase<BITVEC_WORDS(N)> base_t;$/;"	t	class:superstl::bitvec
base_tsc	ptlhwdef.h	/^  W64 base_tsc;$/;"	m	struct:ContextBase
baseof	globals.h	120;"	d
basereg	decode.h	/^      int basereg;$/;"	m	struct:DecodedOperand::__anon142::__anon145
basetls	kernel.cpp	/^ThreadState basetls;$/;"	v
basic_blocks	stats.h	/^      W64 basic_blocks;$/;"	m	struct:PTLsimStats::decoder::throughput
basicblocks	stats.h	/^    W64 basicblocks;$/;"	m	struct:PTLsimStats::summary
bb	decode.h	/^  BasicBlock bb;$/;"	m	struct:TraceDecoder
bb	mathlib.cpp	/^  static const mynumber  bb = {{0x55556E24, 0x3ED55555 }};\/*  5.0862630208387126e-06  *\/$/;"	v	file:
bb	seqcore.cpp	/^      void* bb;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon92	file:
bb	seqcore.cpp	/^    } bb;$/;"	m	union:SequentialCoreEvent::__anon86	typeref:struct:SequentialCoreEvent::__anon86::__anon92	file:
bb_decode_type	stats.h	/^    struct bb_decode_type { \/\/ node: summable$/;"	s	struct:PTLsimStats::decoder
bb_decode_type	stats.h	/^    } bb_decode_type;$/;"	m	struct:PTLsimStats::decoder	typeref:struct:PTLsimStats::decoder::bb_decode_type
bb_type_names	ptlhwdef.cpp	/^const char* bb_type_names[BB_TYPE_COUNT] = {"br", "bru", "jmp", "brp"};$/;"	v
bb_uop_count	ooocore-amd-k8.h	/^        W16 bb_uop_count;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon44
bb_uop_count	ooocore.h	/^        W16 bb_uop_count;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon8
bbcache	decode-core.cpp	/^BasicBlockCache bbcache;$/;"	v
bbcache	stats.h	/^    struct bbcache {$/;"	s	struct:PTLsimStats::decoder
bbcache	stats.h	/^    } bbcache;$/;"	m	struct:PTLsimStats::decoder	typeref:struct:PTLsimStats::decoder::bbcache
bbcache_dump_file	decode-core.cpp	/^odstream bbcache_dump_file;$/;"	v
bbcache_dump_filename	ptlsim.h	/^  stringbuf bbcache_dump_filename;$/;"	m	struct:PTLsimConfig
bbcache_inserts	seqcore.cpp	/^  W64 bbcache_inserts;$/;"	m	struct:SequentialCore	file:
bbcache_reclaim	decode-core.cpp	/^void bbcache_reclaim(size_t bytes, int urgency) {$/;"	f
bbcache_removes	seqcore.cpp	/^  W64 bbcache_removes;$/;"	m	struct:SequentialCore	file:
bbcount	seqcore.cpp	/^      byte bbcount;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon92	file:
bbindex	ptlhwdef.h	/^  byte bbindex;$/;"	m	struct:TransOpBase
bbpages	decode-core.cpp	/^BasicBlockPageCache bbpages;$/;"	v
bias_by_segreg	decode-core.cpp	/^int TraceDecoder::bias_by_segreg(int basereg) {$/;"	f	class:TraceDecoder
big	mathlib.cpp	/^  static const mynumber   big = {{0x00000000, 0x43380000}};  \/*  6755399441055744      *\/$/;"	v	file:
big	mathlib.cpp	/^  static const mynumber big = {{0x00000000, 0x42c80000 }};\/*  52776558133248          *\/$/;"	v	file:
big	mathlib.cpp	/^  static const mynumber big = {{0x00000000, 0x42c80000}}; \/* 52776558133248         *\/$/;"	v	file:
big1	mathlib.cpp	/^  static const mynumber  big1 = {{0x00000000, 0x43580000}};  \/* 27021597764222976      *\/$/;"	v	file:
bimodal	branchpred.cpp	/^  BimodalPredictor<BIMODSIZE> bimodal;$/;"	m	struct:CombinedPredictor	file:
bimodal	branchpred.h	/^  W32 ctxid:8, flags:8, bimodal:1, twolevel:1, meta:1, ras_push:1;$/;"	m	struct:PredictorUpdate
bit	globals.h	177;"	d
bit_indices_set_8bits	ooopipe.cpp	/^static byte bit_indices_set_8bits[1<<8][8] = {$/;"	v	file:
bitcount	superstl.h	/^    int bitcount;$/;"	m	struct:superstl::hilo
bitmap_t	superstl.h	/^    typedef bitvec<64> bitmap_t;$/;"	t	struct:superstl::BitmapAllocator3Level
bitmask	globals.h	179;"	d
bitmaskstring	superstl.h	/^    bitmaskstring() { }$/;"	f	struct:superstl::bitmaskstring
bitmaskstring	superstl.h	/^    bitmaskstring(const W64 bits, W64 mask, const int n, bool reverse = false) {$/;"	f	struct:superstl::bitmaskstring
bitmaskstring	superstl.h	/^  DeclareStringBufToStream(bitmaskstring);$/;"	v
bitmaskstring	superstl.h	/^  struct bitmaskstring {$/;"	s	namespace:superstl
bitof	superstl.h	/^    static size_t bitof(size_t index) { return index % BITS_PER_WORD; }$/;"	f	struct:superstl::bitvecbase
bits	globals.h	180;"	d
bits	ptlhwdef.h	/^  W64 bits;$/;"	m	struct:flagstring
bits	superstl.h	/^    W64 bits;$/;"	m	struct:superstl::bitmaskstring
bits	superstl.h	/^    W64 bits;$/;"	m	struct:superstl::bitstring
bitseq	globals.h	812;"	d
bitsext16	globals.h	/^static inline W16s bitsext16(W16s x, const int i, const int l) { return signext16(bits(x, i, l), l); }$/;"	f
bitsext32	globals.h	/^static inline W32s bitsext32(W32s x, const int i, const int l) { return signext32(bits(x, i, l), l); }$/;"	f
bitsext64	globals.h	/^static inline W64s bitsext64(W64s x, const int i, const int l) { return signext64(bits(x, i, l), l); }$/;"	f
bitstring	superstl.h	/^    bitstring() { }$/;"	f	struct:superstl::bitstring
bitstring	superstl.h	/^    bitstring(const W64 bits, const int n, bool reverse = false) {$/;"	f	struct:superstl::bitstring
bitstring	superstl.h	/^  DeclareStringBufToStream(bitstring);$/;"	v
bitstring	superstl.h	/^  struct bitstring {$/;"	s	namespace:superstl
bitswap	globals.h	/^static inline T bitswap(T v) {$/;"	f
bitvec	superstl.h	/^    bitvec() { }$/;"	f	class:superstl::bitvec
bitvec	superstl.h	/^    bitvec(const bitvec<N>& vec): base_t(vec) { }$/;"	f	class:superstl::bitvec
bitvec	superstl.h	/^    bitvec(unsigned long long val): base_t(val) { sanitize(); }$/;"	f	class:superstl::bitvec
bitvec	superstl.h	/^  class bitvec: private bitvecbase<BITVEC_WORDS(N)> {$/;"	c	namespace:superstl
bitvec_sanitizer	superstl.h	/^  struct bitvec_sanitizer {$/;"	s	namespace:superstl
bitvec_sanitizer	superstl.h	/^  struct bitvec_sanitizer<0> { $/;"	s	namespace:superstl
bitvecbase	superstl.h	/^    bitvecbase() { resetop(); }$/;"	f	struct:superstl::bitvecbase
bitvecbase	superstl.h	/^    bitvecbase() { }$/;"	f	struct:superstl::bitvecbase
bitvecbase	superstl.h	/^    bitvecbase(const bitvecbase<N>& vec) { foreach (i, N) w[i] = vec.w[i]; }$/;"	f	struct:superstl::bitvecbase
bitvecbase	superstl.h	/^    bitvecbase(unsigned long long val) {$/;"	f	struct:superstl::bitvecbase
bitvecbase	superstl.h	/^    bitvecbase(unsigned long long val): w(val) {}$/;"	f	struct:superstl::bitvecbase
bitvecbase	superstl.h	/^    bitvecbase(unsigned long long) { }$/;"	f	struct:superstl::bitvecbase
bitvecbase	superstl.h	/^    bitvecbase(void): w(0) {}$/;"	f	struct:superstl::bitvecbase
bitvecbase	superstl.h	/^  struct bitvecbase {$/;"	s	namespace:superstl
bitvecbase	superstl.h	/^  struct bitvecbase<0> {$/;"	s	namespace:superstl
bitvecbase	superstl.h	/^  struct bitvecbase<1> {$/;"	s	namespace:superstl
black_linetype	ptlstats.cpp	/^const LineAttributes black_linetype = {1, 0, {0,   0,   0, 255}, 0.10, 0.00, 0.00, 0.00, 0, {0,   0,   0,   255}};$/;"	v
blocking	ptlxen.h	/^      bool blocking;$/;"	m	struct:PTLsimHostCall::__anon99::__anon102
blocks	ooocore-amd-k8.h	/^    W64 blocks;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
blocks	ooocore.h	/^    W64 blocks;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
bogus_rip	ooocore-amd-k8.h	/^      W64 bogus_rip;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
bogus_rip	ooocore.h	/^      W64 bogus_rip;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
bool	globals.h	/^MakePrimitive(bool);$/;"	v
bootinfo	ptlmon.cpp	/^  PTLsimMonitorInfo* bootinfo;$/;"	m	struct:XenController	file:
bootinfo	ptlxen.h	350;"	d
bounds_entry	lowlevel-64bit-xen.S	/^bounds_entry:$/;"	l
bpos	superstl.h	/^      T bpos;$/;"	m	class:superstl::bitvec::reference
bptype	ooocore-amd-k8.h	/^    int bptype;$/;"	m	struct:OutOfOrderModel::BranchPredictorUpdateInfo
bptype	ooocore.h	/^    int bptype;$/;"	m	struct:OutOfOrderModel::BranchPredictorUpdateInfo
br	ooocore-amd-k8.h	/^      W64 br;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::alloc
br	ooocore-amd-k8.h	/^      W64 br[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::dispatch::source
br	ooocore-amd-k8.h	/^      W64 br[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::issue::source
br	ooocore.h	/^      W64 br;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::alloc
br	ooocore.h	/^      W64 br[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::dispatch::source
br	ooocore.h	/^      W64 br[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::issue::source
branch_mispredict	ooocore-amd-k8.h	/^      W64 branch_mispredict;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
branch_mispredict	ooocore.h	/^      W64 branch_mispredict;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
branch_taken	ooocore-amd-k8.h	/^      W64 branch_taken;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
branch_taken	ooocore.h	/^      W64 branch_taken;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
branch_type_names	ptlhwdef.h	/^static const char* branch_type_names[8] = {$/;"	v
branchpred	ooocore-amd-k8.h	/^    BranchPredictorInterface branchpred;$/;"	m	struct:OutOfOrderModel::ThreadContext
branchpred	ooocore-amd-k8.h	/^  struct branchpred {$/;"	s	struct:PerContextOutOfOrderCoreStats
branchpred	ooocore-amd-k8.h	/^  } branchpred;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::branchpred
branchpred	ooocore.h	/^    BranchPredictorInterface branchpred;$/;"	m	struct:OutOfOrderModel::ThreadContext
branchpred	ooocore.h	/^  struct branchpred {$/;"	s	struct:OutOfOrderCoreStats
branchpred	ooocore.h	/^  struct branchpred {$/;"	s	struct:PerContextOutOfOrderCoreStats
branchpred	ooocore.h	/^  } branchpred;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::branchpred
branchpred	ooocore.h	/^  } branchpred;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::branchpred
branchpred_outcome_names	branchpred.h	/^static const char* branchpred_outcome_names[2] = {"mispred", "correct"};$/;"	v
brandid	cpuid.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	struct:ProcessorMiscInfo::__anon33	file:
brandid	decode-complex.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	struct:ProcessorMiscInfo::__anon71	file:
branred	mathlib.cpp	/^namespace branred {$/;"	n	namespace:math	file:
breakout_port	ptlxen.h	/^  W16 breakout_port;$/;"	m	struct:PTLsimMonitorInfo
bring_up_secondary_vcpu	ptlxen.cpp	/^void bring_up_secondary_vcpu(int vcpuid) {$/;"	f
brk	kernel.h	/^  void* brk;$/;"	m	class:AddressSpace
brkbase	kernel.h	/^  void* brkbase;$/;"	m	class:AddressSpace
broadcast	oooexec.cpp	/^bool IssueQueue<size, operandcount>::broadcast(tag_t uopid) {$/;"	f	class:IssueQueue
brreg	ptlhwdef.h	/^    } brreg;$/;"	m	union:IssueState::__anon114	typeref:struct:IssueState::__anon114::__anon117
brtype	ptlhwdef.h	/^  byte marked:1, mfence:1, x87:1, sse:1, nondeterministic:1, brtype:3;$/;"	m	struct:BasicBlockBase
bsloww	mathlib.cpp	/^static double bsloww(double x,double dx, double orig,int n) {$/;"	f	namespace:math	file:
bsloww1	mathlib.cpp	/^static double bsloww1(double x, double dx, double orig,int n) {$/;"	f	namespace:math	file:
bsloww2	mathlib.cpp	/^static double bsloww2(double x, double dx, double orig, int n) {$/;"	f	namespace:math	file:
bswap	globals.h	/^template <typename T> inline T bswap(T r) { asm("bswap %[r]" : [r] "+r" (r)); return r; }$/;"	f
btb	branchpred.cpp	/^  BranchTargetBuffer<BTBSETS, BTBWAYS> btb;$/;"	m	struct:CombinedPredictor	file:
buf	datastore.h	/^  byte* buf;$/;"	m	struct:StatsFileReader
buf	ptlxen.h	/^      char* buf;$/;"	m	struct:PTLsimHostCall::__anon99::__anon102
buf	ptlxen.h	/^      const char* buf;$/;"	m	struct:PTLsimHostCall::__anon99::__anon104
buf	superstl.h	/^    byte* buf;$/;"	m	class:superstl::idstream
buf	superstl.h	/^    byte* buf;$/;"	m	class:superstl::odstream
buf	superstl.h	/^    char* buf;$/;"	m	class:superstl::readline
buf	superstl.h	/^    char* buf;$/;"	m	class:superstl::stringbuf
bufmask	superstl.h	/^    W32 bufmask;$/;"	m	class:superstl::idstream
bufsize	superstl.h	/^    int bufsize;$/;"	m	class:superstl::idstream
bufsize	superstl.h	/^    int bufsize;$/;"	m	class:superstl::odstream
bufsub	datastore.h	/^  byte* bufsub;$/;"	m	struct:StatsFileReader
bufused	superstl.h	/^    int bufused;$/;"	m	class:superstl::idstream
build_compiler	stats.h	/^      char build_compiler[16];$/;"	m	struct:PTLsimStats::simulator::version
build_hostname	stats.h	/^      char build_hostname[64];$/;"	m	struct:PTLsimStats::simulator::version
build_physmap_page_tables	ptlxen-memory.cpp	/^void build_physmap_page_tables() {$/;"	f
build_timestamp	stats.h	/^      char build_timestamp[32];$/;"	m	struct:PTLsimStats::simulator::version
buildvec	uopimpl.cpp	/^static inline vec16b buildvec(W64 hi, W64 lo) {$/;"	f	file:
byte	globals.h	/^typedef unsigned char byte;$/;"	t
byte	ptlcalls.h	/^typedef unsigned char byte;$/;"	t
bytemask	ptlhwdef.h	/^  W64 addrvalid:1, invalid:1, datavalid:1, physaddr:45, bytemask:8, tag:8;$/;"	m	struct:SFR
bytemask_list	seqcore.cpp	/^  W8  bytemask_list[N];$/;"	m	struct:TransactionalMemory	file:
bytemaskstring	superstl.h	/^    bytemaskstring() { }$/;"	f	struct:superstl::bytemaskstring
bytemaskstring	superstl.h	/^    bytemaskstring(const byte* bytes, W64 mask, int n, int splitat = 16) {$/;"	f	struct:superstl::bytemaskstring
bytemaskstring	superstl.h	/^  DeclareStringBufToStream(bytemaskstring);$/;"	v
bytemaskstring	superstl.h	/^  struct bytemaskstring {$/;"	s	namespace:superstl
byteof	superstl.h	/^    static size_t byteof(size_t index) { return (index % BITS_PER_WORD) \/ __CHAR_BIT__; }$/;"	f	struct:superstl::bitvecbase
byteoffset	decode.h	/^  int byteoffset;$/;"	m	struct:TraceDecoder
bytes	cpuid.cpp	/^  W16 bytes;$/;"	m	struct:DescriptorTablePointer	file:
bytes	kernel.cpp	/^  byte bytes[64];$/;"	m	struct:InsideSimEscapeCode	file:
bytes	mm-private.h	/^  W32 bytes;$/;"	m	struct:MemoryManagerEvent
bytes	ptlhwdef.h	/^  W16 bytes;$/;"	m	struct:BasicBlockBase
bytes	ptlhwdef.h	/^  byte bytes:4, som:1, eom:1, is_sse:1, is_x87:1;$/;"	m	struct:TransOpBase
bytes	ptlxen.cpp	/^  W16 bytes;$/;"	m	struct:DescriptorTablePointer	file:
bytes	stats.h	/^      W64 bytes;$/;"	m	struct:PTLsimStats::decoder::throughput
bytes	superstl.h	/^    const byte* bytes;$/;"	m	struct:superstl::bytemaskstring
bytes	superstl.h	/^    const byte* bytes;$/;"	m	struct:superstl::bytestring
bytes_are_all_zero	superstl.h	/^  static inline bool bytes_are_all_zero(const void* ptr, size_t bytes) {$/;"	f	namespace:superstl
bytes_in_current_insn	seqcore.cpp	/^      byte bytes_in_current_insn;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon90	file:
bytes_in_current_insn	seqcore.cpp	/^  int bytes_in_current_insn;$/;"	m	struct:SequentialCore	file:
bytestring	superstl.h	/^    bytestring() { }$/;"	f	struct:superstl::bytestring
bytestring	superstl.h	/^    bytestring(const byte* bytes, int n, int splitat = 16) {$/;"	f	struct:superstl::bytestring
bytestring	superstl.h	/^  DeclareStringBufToStream(bytestring);$/;"	v
bytestring	superstl.h	/^  struct bytestring {$/;"	s	namespace:superstl
c0	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
c1	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
c2	mathlib.cpp	/^  static const mynumber  c2 = {{0x00000000, 0x3FE00000}};\/*  0.5                    *\/$/;"	v	file:
c2	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
c3	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
c4	mathlib.cpp	/^  static const mynumber  c4 = {{0x55555555, 0xBFA55555}};\/* -0.041666666666666664   *\/$/;"	v	file:
c6	mathlib.cpp	/^  static const mynumber  c6 = {{0x16C16A96, 0x3F56C16C}};\/*  0.0013888888888888055  *\/$/;"	v	file:
c8	mathlib.cpp	/^  static const mynumber  c8 = {{0x821D5987, 0xBEFA019F}};\/* -2.480157866754367e-05  *\/$/;"	v	file:
cache	ooocore-amd-k8.h	/^        W64 cache;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::forward
cache	ooocore.h	/^        W64 cache;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::forward
cache_callbacks	ooocore-amd-k8.h	/^    OutOfOrderCoreCacheCallbacks cache_callbacks;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
cache_callbacks	ooocore.h	/^    OutOfOrderCoreCacheCallbacks cache_callbacks;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
cache_names	dcache-amd-k8.h	/^  static const char* cache_names[4] = {"L1", "I1", "L2", "L3"};$/;"	v
cache_names	dcache.h	/^  static const char* cache_names[4] = {"L1", "I1", "L2", "L3"};$/;"	v
cached_pte	ptlhwdef.h	/^  Level1PTE cached_pte[PTE_CACHE_SIZE];$/;"	m	struct:ContextBase
cached_pte_virt	ptlhwdef.h	/^  W64 cached_pte_virt[PTE_CACHE_SIZE];$/;"	m	struct:ContextBase
cachelevel	ptlhwdef.h	/^  byte internal:1, locked:1, cachelevel:2, datatype:4;$/;"	m	struct:TransOpBase
caches	ooocore-amd-k8.h	/^    CacheSubsystem::CacheHierarchy caches;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
caches	ooocore.h	/^    CacheSubsystem::CacheHierarchy caches;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
call	ptlhwdef.h	/^  byte type:4, repblock:1, invalidblock:1, call:1, ret:1;$/;"	m	struct:BasicBlockBase
call_code_addr	ptlcalls.h	/^  W64 call_code_addr; \/\/ thunk function to call$/;"	m	struct:PTLsimThunkPage
call_global_constuctors	klibc.cpp	/^void call_global_constuctors() {$/;"	f
call_within_sim_thunk	kernel.cpp	/^  InsideSimEscapeCode call_within_sim_thunk;$/;"	m	struct:PTLsimThunkPagePrivate	file:
callback	dcache-amd-k8.h	/^    PerCoreCacheCallbacks* callback;$/;"	m	struct:CacheSubsystem::CacheHierarchy
callback	dcache.h	/^    PerCoreCacheCallbacks* callback;$/;"	m	struct:CacheSubsystem::CacheHierarchy
caller	mm-private.h	/^  W32 caller;$/;"	m	struct:MemoryManagerEvent
capacity	superstl.h	/^    inline int capacity() const { return reserved; }$/;"	f	class:superstl::dynarray
capture_initial_timestamps	ptlxen-events.cpp	/^void capture_initial_timestamps() {$/;"	f
capture_stats	mm.cpp	/^  DataStoreNode& capture_stats(DataStoreNode& root) {$/;"	f	struct:ExtentAllocator
capture_stats	mm.cpp	/^  DataStoreNode& capture_stats(DataStoreNode& root) {$/;"	f	struct:SlabAllocator
capture_stats_snapshot	ptlsim.cpp	/^void capture_stats_snapshot(const char* name) {$/;"	f
capture_table	ptlstats.cpp	/^bool capture_table(dynarray<char*>& rowlist, dynarray<char*>& collist, dynarray<double>& sum_of_all_rows, dynarray< dynarray<double> >& data,$/;"	f
capture_uop_context	uopimpl.cpp	/^inline void capture_uop_context(const IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags, int opcode, int size, int cond = 0, int extshift = 0, W64 riptaken = 0, W64 ripseq = 0) { }$/;"	f
cc2	mathlib.cpp	/^  static const mynumber cc2 = {{0x00000000, 0xBA282FD8}};\/* -1.5264073330037701e-28 *\/$/;"	v	file:
cc32	mathlib.cpp	/^  static void cc32(mp_no *x, mp_no *y, int p) {$/;"	f	namespace:math::mpa	file:
cc4	mathlib.cpp	/^  static const mynumber cc4 = {{0x2FFF257E, 0xBC4554BC}};\/* -2.312711276085743e-18  *\/$/;"	v	file:
cc6	mathlib.cpp	/^  static const mynumber cc6 = {{0xE6346F14, 0xBBD2E846}};\/* -1.6015133010194884e-20 *\/$/;"	v	file:
cc8	mathlib.cpp	/^  static const mynumber cc8 = {{0x72FFE5CC, 0x3B7AB71E}};\/*  3.5357416224857556e-22 *\/$/;"	v	file:
ccA	ptlhwdef.h	1180;"	d
ccAB	ptlhwdef.h	1182;"	d
ccABC	ptlhwdef.h	1183;"	d
ccB	ptlhwdef.h	1181;"	d
ccC	ptlhwdef.h	1184;"	d
cd	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
ceil	globals.h	/^template <typename T, typename A> static inline T ceil(T x, A a) { return (T)((((T)x) + ((T)(a-1))) & ~((T)(a-1))); }$/;"	f
ceil	mathlib.cpp	/^  double ceil(double x) {$/;"	f	namespace:math
ceilptr	globals.h	/^template <typename T, typename A> static inline T* ceilptr(T* x, A a) { return (T*)ceil((Waddr)x, a); }$/;"	f
chain	superstl.h	/^    odstream* chain;$/;"	m	class:superstl::odstream
change_runstate	ptlxen-events.cpp	/^bool Context::change_runstate(int newstate) {$/;"	f	class:Context
changestate	dcache-amd-k8.h	/^    void changestate(int idx, bitvec<size>& oldstate, bitvec<size>& newstate) {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
changestate	dcache.h	/^    void changestate(int idx, bitvec<size>& oldstate, bitvec<size>& newstate) {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
changestate	ooocore-amd-k8.h	/^    void changestate(StateList& newqueue, bool place_at_head = false, ReorderBufferEntry* prevrob = null) {$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
changestate	ooocore-amd-k8.h	/^    void changestate(int newstate) {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
changestate	ooocore.h	/^    void changestate(StateList& newqueue, bool place_at_head = false, ReorderBufferEntry* prevrob = null) {$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
changestate	ooocore.h	/^    void changestate(int newstate) {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
check	kernel.h	/^  bool check(void* p, int prot) const {$/;"	f	class:AddressSpace
check_and_translate	kernel.h	/^inline Waddr Context::check_and_translate(Waddr virtaddr, int sizeshift, bool store, bool internal, int& exception, PageFaultErrorCode& pfec, PTEUpdate& pteupdate, Level1PTE& pteused) {$/;"	f	class:Context
check_and_translate	ptlhwdef.h	/^  Waddr check_and_translate(Waddr virtaddr, int sizeshift, bool store, bool internal, int& exception, PageFaultErrorCode& pfec, PTEUpdate& pteupdate) {$/;"	f	struct:Context
check_and_translate	ptlxen-memory.cpp	/^Waddr Context::check_and_translate(Waddr virtaddr, int sizeshift, bool store, bool internal, int& exception, PageFaultErrorCode& pfec, PTEUpdate& pteupdate, Level1PTE& pteused) {$/;"	f	class:Context
check_events	ptlxen.h	/^inline bool Context::check_events() const {$/;"	f	class:Context
check_for_async_sim_break	kernel.cpp	/^bool check_for_async_sim_break() {$/;"	f
check_for_async_sim_break	ptlxen.cpp	/^bool check_for_async_sim_break() {$/;"	f
check_ptlcall_insn	ptlcalls.h	/^static inline W64 check_ptlcall_insn() {$/;"	f
check_refcounts	ooocore.cpp	/^void OutOfOrderCore::check_refcounts() {$/;"	f	class:OutOfOrderCore
check_rob	ooocore.cpp	/^void OutOfOrderCore::check_rob() {$/;"	f	class:OutOfOrderCore
check_running_under_ptlsim	ptlcalls.h	/^static inline int check_running_under_ptlsim() {$/;"	f
check_warned_about_x87	decode-x87.cpp	/^void check_warned_about_x87() {$/;"	f
checkvalid	ooocore.cpp	/^void StateList::checkvalid() {$/;"	f	class:StateList
chk_recovery_rip	ooocore-amd-k8.h	/^    W64 chk_recovery_rip;$/;"	m	struct:OutOfOrderModel::ThreadContext
chk_recovery_rip	ooocore.h	/^    W64 chk_recovery_rip;$/;"	m	struct:OutOfOrderModel::ThreadContext
chk_recovery_rip	seqcore.cpp	/^      W64 chk_recovery_rip;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon90	file:
chunk	superstl.h	/^        Chunk* chunk;$/;"	m	struct:superstl::ChunkList::Chunk::Iterator
chunk	superstl.h	/^      Chunk* chunk;$/;"	m	struct:superstl::ChunkList::Iterator
chunk	superstl.h	/^      Chunk* chunk;$/;"	m	struct:superstl::ChunkList::Locator
chunk	superstl.h	/^      GenericChunkList<T>* chunk;$/;"	m	struct:superstl::GenericChunkList::Iterator
chunk	superstl.h	/^      chunk_t* chunk;$/;"	m	struct:superstl::SearchableChunkList16Entry::Iterator
chunk_t	superstl.h	/^      typedef SearchableChunkList16Entry<T, bytes> chunk_t;$/;"	t	struct:superstl::SearchableChunkList16Entry::Iterator
chunkcount	logic.h	/^  static const int chunkcount = ((size*2)+15) \/ 16;$/;"	m	struct:FullyAssociativeTags16bit
chunkcount	logic.h	/^  static const int chunkcount = (size+15) \/ 16;$/;"	m	struct:FullyAssociativeTags8bit
chunkcount	logic.h	/^  static const int chunkcount = (size+15) \/ 16;$/;"	m	struct:FullyAssociativeTagsNbitOneHot
chunks_allocated	mm.cpp	/^  W64 chunks_allocated;$/;"	m	struct:ExtentAllocator	file:
cleanup	datastore.cpp	/^void DataStoreNode::cleanup() {$/;"	f	class:DataStoreNode
clear	seqcore.cpp	/^  void clear() { tail = start; }$/;"	f	struct:SequentialCoreEventLog
clear	superstl.h	/^    inline void clear() { resize(0); }$/;"	f	class:superstl::dynarray
clear	superstl.h	/^    void clear() {$/;"	f	struct:superstl::ChunkList
clear	superstl.h	/^    void clear() {$/;"	f	struct:superstl::array
clear	superstl.h	/^    void clear(bool free_after_remove = false) {$/;"	f	struct:superstl::SelfHashtable
clear_and_free	superstl.h	/^    void clear_and_free() {$/;"	f	struct:superstl::SelfHashtable
clear_evtchn	ptlxen-events.cpp	/^void clear_evtchn(int port) {$/;"	f
clearbit	globals.h	183;"	d
cleardirty	kernel.h	/^  void cleardirty(Waddr mfn) { make_page_inaccessible((void*)(mfn << 12), dirtymap); }$/;"	f	class:AddressSpace
clearlist	logic.h	/^  ClearList clearlist[64];$/;"	m	struct:LockableCommitRollbackAssociativeArray
clearlist_exceeded	logic.h	/^  bool clearlist_exceeded;$/;"	m	struct:LockableCommitRollbackAssociativeArray
clearstats	dcache-amd-k8.h	/^    void clearstats() {$/;"	f	struct:CacheSubsystem::CacheLine
clearstats	dcache-amd-k8.h	/^    void clearstats() {$/;"	f	struct:CacheSubsystem::CacheLineWithValidMask
clearstats	dcache-amd-k8.h	/^    void clearstats() {$/;"	f	struct:CacheSubsystem::DataCache
clearstats	dcache.h	/^    void clearstats() {$/;"	f	struct:CacheSubsystem::CacheLine
clearstats	dcache.h	/^    void clearstats() {$/;"	f	struct:CacheSubsystem::CacheLineWithValidMask
clearstats	dcache.h	/^    void clearstats() {$/;"	f	struct:CacheSubsystem::DataCache
cleartail	logic.h	/^  int cleartail;$/;"	m	struct:LockableCommitRollbackAssociativeArray
cleartrans	kernel.h	/^  void cleartrans(Waddr mfn) { make_page_inaccessible((void*)(mfn << 12), transmap); }$/;"	f	class:AddressSpace
clflush	cpuid.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	struct:ProcessorMiscInfo::__anon33	file:
clflush	decode-complex.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	struct:ProcessorMiscInfo::__anon71	file:
cli	ptlxen-events.cpp	/^void cli() {$/;"	f
clipto	globals.h	/^template <typename T> static inline T clipto(const T& v, const T& minv, const T& maxv) { return min(max(v, minv), maxv); }$/;"	f
clock	dcache.cpp	/^void CacheHierarchy::clock() {$/;"	f	class:CacheHierarchy
clock	dcache.cpp	/^void LoadFillReqQueue<size>::clock() {$/;"	f	class:LoadFillReqQueue
clock	dcache.cpp	/^void MissBuffer<SIZE>::clock() {$/;"	f	class:MissBuffer
clock	logic.h	/^  void clock(bool clkenable = true) {$/;"	f	struct:SynchronousRegisterFile
clock	logic.h	/^  void clock(bool clkenable = true) {$/;"	f	struct:latch
clock	oooexec.cpp	/^void IssueQueue<size, operandcount>::clock() {$/;"	f	class:IssueQueue
clone	datastore.h	/^  DataStoreNode* clone() const { return map(IdentityOperator()); }$/;"	f	struct:DataStoreNode
clone	ptlhwdef.cpp	/^BasicBlock* BasicBlock::clone() {$/;"	f	class:BasicBlock
close	datastore.cpp	/^void StatsFileReader::close() {$/;"	f	class:StatsFileReader
close	datastore.cpp	/^void StatsFileWriter::close() {$/;"	f	class:StatsFileWriter
close	superstl.cpp	/^  void idstream::close() {$/;"	f	class:superstl::idstream
close	superstl.cpp	/^  void odstream::close() {$/;"	f	class:superstl::odstream
close_on_destroy	superstl.h	/^    bool close_on_destroy;$/;"	m	class:superstl::idstream
close_on_destroy	superstl.h	/^    bool close_on_destroy;$/;"	m	class:superstl::odstream
close_streams	superstl.cpp	/^  static void close_streams() {$/;"	f	namespace:superstl	file:
closepath	ptlstats.cpp	/^  void closepath() {$/;"	f	class:SVGCreator
cluster	ooocore-amd-k8.h	/^    W64 cluster[OutOfOrderModel::MAX_CLUSTERS]; \/\/ label: OutOfOrderModel::cluster_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch
cluster	ooocore-amd-k8.h	/^    W8s  cluster;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
cluster	ooocore-amd-k8.h	/^    byte cluster;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
cluster	ooocore.h	/^    W64 cluster[OutOfOrderModel::MAX_CLUSTERS]; \/\/ label: OutOfOrderModel::cluster_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch
cluster	ooocore.h	/^    W8s  cluster;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
cluster	ooocore.h	/^    byte cluster;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
cluster_names	ooocore-amd-k8.h	/^  static const char* cluster_names[MAX_CLUSTERS] = {"int1", "int2", "int3", "fp"};$/;"	v
cluster_names	ooocore.h	/^  static const char* cluster_names[MAX_CLUSTERS] = {"all"};$/;"	v
cluster_names	ooocore.h	/^  static const char* cluster_names[MAX_CLUSTERS] = {"int0", "int1", "ld", "fp"};$/;"	v
clusters	ooocore-amd-k8.h	/^  const Cluster clusters[MAX_CLUSTERS] = {$/;"	v
clusters	ooocore.h	/^  const Cluster clusters[MAX_CLUSTERS] = {$/;"	v
cmpeq_arrays	superstl.h	/^  int cmpeq_arrays(const T* a, const T* b, int n) {$/;"	f	namespace:superstl
cmpxchg	globals.h	/^static inline T cmpxchg(T& mem, T newv, T cmpv) {$/;"	f
cmtrec	seqcore.cpp	/^  CommitRecord* cmtrec;$/;"	m	struct:SequentialCore	file:
coeff	datastore.h	/^  context_t coeff;$/;"	m	struct:AddScaleOperator
coeff	datastore.h	/^  double coeff;$/;"	m	struct:ScaleOperator
collapse	logic.h	/^  void collapse(int index) {$/;"	f	struct:FullyAssociativeTags16bit
collapse	logic.h	/^  void collapse(int index) {$/;"	f	struct:FullyAssociativeTags8bit
collect_common_sysinfo	ptlsim.cpp	/^void collect_common_sysinfo(PTLsimStats& stats) {$/;"	f
collect_into_supernode	ptlstats.cpp	/^DataStoreNode* collect_into_supernode(int argc, char** argv, char* path, const char* deltastart = null, const char* deltaend = "final") {$/;"	f
collect_sysinfo	kernel.cpp	/^void collect_sysinfo(PTLsimStats& stats, int argc, char** argv) {$/;"	f
collect_sysinfo	ptlxen.cpp	/^void collect_sysinfo(PTLsimStats& stats) {$/;"	f
colnames	ptlstats.cpp	/^  dynarray<char*>& colnames;$/;"	m	class:TableCreator	file:
command	ptlcalls.h	/^  W64 command; \/\/ pointer to command string$/;"	m	struct:PTLsimCommandDescriptor
commit	logic.h	/^  void commit() {$/;"	f	struct:CommitRollbackCache
commit	logic.h	/^  void commit(T& entry) {$/;"	f	struct:FixedQueue
commit	logic.h	/^  void commit(T* entry) { commit(*entry); }$/;"	f	struct:FixedQueue
commit	ooocore-amd-k8.h	/^      double commit;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
commit	ooocore-amd-k8.h	/^      } commit;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
commit	ooocore-amd-k8.h	/^    void commit() { changestate(PHYSREG_ARCH); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
commit	ooocore-amd-k8.h	/^  struct commit {$/;"	s	struct:OutOfOrderCoreStats
commit	ooocore-amd-k8.h	/^  struct commit {$/;"	s	struct:PerContextOutOfOrderCoreStats
commit	ooocore-amd-k8.h	/^  } commit;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::commit
commit	ooocore-amd-k8.h	/^  } commit;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::commit
commit	ooocore.h	/^      double commit;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
commit	ooocore.h	/^      } commit;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
commit	ooocore.h	/^    void commit() { changestate(PHYSREG_ARCH); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
commit	ooocore.h	/^  struct commit {$/;"	s	struct:OutOfOrderCoreStats
commit	ooocore.h	/^  struct commit {$/;"	s	struct:PerContextOutOfOrderCoreStats
commit	ooocore.h	/^  } commit;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::commit
commit	ooocore.h	/^  } commit;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::commit
commit	ooopipe.cpp	/^int ReorderBufferEntry::commit() {$/;"	f	class:ReorderBufferEntry
commit	ooopipe.cpp	/^int ThreadContext::commit() {$/;"	f	class:ThreadContext
commit	seqcore.cpp	/^  void commit() {$/;"	f	struct:TransactionalMemory
commit_page_table_updates	ptlxen.h	/^static inline int commit_page_table_updates() {$/;"	f
commitarf	ptlhwdef.h	/^  W64 commitarf[64];$/;"	m	struct:ContextBase
commitcount	ooocore-amd-k8.h	/^    int commitcount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
commitcount	ooocore.h	/^    int commitcount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
commitrrt	ooocore-amd-k8.h	/^    RegisterRenameTable commitrrt;$/;"	m	struct:OutOfOrderModel::ThreadContext
commitrrt	ooocore.h	/^    RegisterRenameTable commitrrt;$/;"	m	struct:OutOfOrderModel::ThreadContext
commitstore	dcache.cpp	/^W64 CacheHierarchy::commitstore(const SFR& sfr, int threadid, bool perform_actual_write) {$/;"	f	class:CacheHierarchy
compare_and_gen_flags	uopimpl.cpp	/^W16 compare_and_gen_flags(T ra, T rb) {$/;"	f
compare_and_gen_flags	uopimpl.cpp	/^W16 compare_and_gen_flags(W64 ra, W64 rb) {$/;"	f
complete	dcache.cpp	/^void CacheHierarchy::complete() {$/;"	f	class:CacheHierarchy
complete	dcache.cpp	/^void CacheHierarchy::complete(int threadid) {$/;"	f	class:CacheHierarchy
complete	logic.h	/^  void complete() { }$/;"	f	struct:CommitRollbackCache
complete	ooocore-amd-k8.h	/^        W64 complete;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
complete	ooocore-amd-k8.h	/^        W64 complete;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
complete	ooocore-amd-k8.h	/^      W64 complete;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
complete	ooocore-amd-k8.h	/^      W64 complete;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
complete	ooocore-amd-k8.h	/^      double complete;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
complete	ooocore-amd-k8.h	/^    void complete() { changestate(PHYSREG_BYPASS); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
complete	ooocore.h	/^        W64 complete;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
complete	ooocore.h	/^        W64 complete;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
complete	ooocore.h	/^      W64 complete;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
complete	ooocore.h	/^      W64 complete;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
complete	ooocore.h	/^      double complete;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
complete	ooocore.h	/^    void complete() { changestate(PHYSREG_BYPASS); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
complete	ooopipe.cpp	/^int ThreadContext::complete(int cluster) {$/;"	f	class:ThreadContext
complete_hostcall	ptlmon.cpp	/^  int complete_hostcall() {$/;"	f	struct:XenController
complete_upcall	ptlmon.cpp	/^  void complete_upcall(W64 uuid) {$/;"	f	struct:XenController
complete_upcall	ptlxen.cpp	/^int complete_upcall(W64 uuid) {$/;"	f
complete_upcall	ptlxen.h	/^    } complete_upcall;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon103
compressword	superstl.h	/^  static inline int compressword(byte*& p, W64s v) {$/;"	f	namespace:superstl
compute_time_scale	ptlxen-events.cpp	/^static void compute_time_scale(W32& tsc_to_system_mul, W8s& tsc_shift, W64 hz) {$/;"	f	file:
cond	ooocore-amd-k8.h	/^    W64 cond[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
cond	ooocore.h	/^    W64 cond[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:OutOfOrderCoreStats::branchpred
cond	ooocore.h	/^    W64 cond[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
cond	ptlhwdef.h	/^  byte cond:4, setflags:3, nouserflags:1;$/;"	m	struct:TransOpBase
cond_code_names	ptlhwdef.cpp	/^const char* cond_code_names[16] = { "o", "no", "c", "nc", "e", "ne", "be", "nbe", "s", "ns", "p", "np", "l", "nl", "le", "nle" };$/;"	v
cond_code_to_flag_regs	ptlhwdef.cpp	/^const CondCodeToFlagRegs cond_code_to_flag_regs[16] = {$/;"	v
condmove	globals.h	/^void condmove(K cond, T& v, T newv) {$/;"	f
confidence	ptlhwdef.h	/^  W32 confidence;$/;"	m	struct:BasicBlockBase
config	perfctrs.cpp	/^  CounterConfig config[MAX_PERFCTRS];$/;"	m	struct:CounterPairConfig	file:
config	ptlsim.cpp	/^PTLsimConfig config;$/;"	v
config	ptlstats.cpp	/^PTLstatsConfig config;$/;"	v
config	stats.h	/^      char config[256];$/;"	m	struct:PTLsimStats::simulator::config
config	stats.h	/^    struct config {$/;"	s	struct:PTLsimStats::simulator
config	stats.h	/^    } config;$/;"	m	struct:PTLsimStats::simulator	typeref:struct:PTLsimStats::simulator::config
configparser	ptlsim.cpp	/^ConfigurationParser<PTLsimConfig> configparser;$/;"	v
configparser	ptlstats.cpp	/^ConfigurationParser<PTLstatsConfig> configparser;$/;"	v
consecutive_commits_inside_spinlock	ooocore-amd-k8.h	/^    W64 consecutive_commits_inside_spinlock;$/;"	m	struct:OutOfOrderModel::ThreadContext
consecutive_commits_inside_spinlock	ooocore.h	/^    W64 consecutive_commits_inside_spinlock;$/;"	m	struct:OutOfOrderModel::ThreadContext
console_mfn	ptlsim.h	/^  W64 console_mfn;$/;"	m	struct:PTLsimConfig
constbits	globals.h	/^struct constbits {$/;"	s
consumer_count	ooocore-amd-k8.h	/^        W16 consumer_count;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon55
consumer_count	ooocore-amd-k8.h	/^    W64 consumer_count[256]; \/\/ histo: 0, 255, 1$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend
consumer_count	ooocore-amd-k8.h	/^    byte consumer_count;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
consumer_count	ooocore.h	/^        W16 consumer_count;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon19
consumer_count	ooocore.h	/^    W64 consumer_count[256]; \/\/ histo: 0, 255, 1$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend
consumer_count	ooocore.h	/^    byte consumer_count;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
contains	superstl.h	/^      bool contains(T* entry) const {$/;"	f	struct:superstl::ChunkList::Chunk
contains	superstl.h	/^    bool contains(T p) const { return ((p >= lo) && (p <= hi)); }$/;"	f	struct:superstl::range
contains	superstl.h	/^    bool contains(T value) const {$/;"	f	struct:superstl::FixedValueHashtable
contents	kernel.cpp	/^  W32 contents:2;$/;"	m	struct:user_desc_32bit	file:
context_spinlock	ptlxen.h	/^  byte context_spinlock;$/;"	m	struct:PTLsimMonitorInfo
context_t	datastore.h	/^  typedef double context_t;$/;"	t	struct:AddScaleOperator
contextbase	ptlxen.h	433;"	d
contextcount	kernel.h	247;"	d
contextcount	ptlxen.h	439;"	d
contextof	kernel.h	/^static inline Context& contextof(int vcpu) { return ctx; }$/;"	f
contextof	ptlxen.h	/^static inline Context& contextof(int vcpu) {$/;"	f
continuous_validation	ptlsim.h	/^  bool continuous_validation;$/;"	m	struct:PTLsimConfig
coprocessor_error_entry	lowlevel-64bit-xen.S	/^coprocessor_error_entry:$/;"	l
copy_args_env_auxv	kernel.cpp	/^byte* copy_args_env_auxv(byte* destptr, const byte* origargv) {$/;"	f
copy_from_process_memory	kernel.cpp	/^void copy_from_process_memory(int pid, void* target, const void* source, int size) {$/;"	f
copy_from_user	kernel.h	/^inline int Context::copy_from_user(void* target, Waddr addr, int bytes, PageFaultErrorCode& pfec, Waddr& faultaddr, bool forexec, Level1PTE& ptelo, Level1PTE& ptehi) {$/;"	f	class:Context
copy_from_user	ptlhwdef.h	/^  int copy_from_user(void* target, Waddr source, int bytes) {$/;"	f	struct:Context
copy_from_user	ptlhwdef.h	/^  int copy_from_user(void* target, Waddr source, int bytes, PageFaultErrorCode& pfec, Waddr& faultaddr, bool forexec = false) {$/;"	f	struct:Context
copy_from_user	ptlxen-memory.cpp	/^int Context::copy_from_user(void* target, Waddr source, int bytes, PageFaultErrorCode& pfec, Waddr& faultaddr, bool forexec, Level1PTE& ptelo, Level1PTE& ptehi) {$/;"	f	class:Context
copy_from_user_phys_prechecked	ptlxen-memory.cpp	/^int copy_from_user_phys_prechecked(void* target, Waddr source, int bytes, Level1PTE ptelo, Level1PTE ptehi, Waddr& faultaddr) {$/;"	f
copy_from_user_phys_prechecked	ptlxen.h	/^static inline int copy_from_user_phys_prechecked(void* target, Waddr source, int bytes, Level1PTE ptelo, Level1PTE ptehi) {$/;"	f
copy_to_process_memory	kernel.cpp	/^void copy_to_process_memory(int pid, void* target, const void* source, int size) {$/;"	f
copy_to_user	kernel.h	/^inline int Context::copy_to_user(Waddr target, void* source, int bytes, PageFaultErrorCode& pfec, Waddr& faultaddr) {$/;"	f	class:Context
copy_to_user	ptlhwdef.h	/^  int copy_to_user(Waddr target, void* source, int bytes) {$/;"	f	struct:Context
copy_to_user	ptlxen-memory.cpp	/^int Context::copy_to_user(Waddr target, void* source, int bytes, PageFaultErrorCode& pfec, Waddr& faultaddr) {$/;"	f	class:Context
copysign	mathlib.cpp	/^	double copysign(double x, double y) {$/;"	f	namespace:math
core	ooocore-amd-k8.h	/^    OutOfOrderCore& core;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreCacheCallbacks
core	ooocore-amd-k8.h	/^    OutOfOrderCore& core;$/;"	m	struct:OutOfOrderModel::ThreadContext
core	ooocore.h	/^    OutOfOrderCore& core;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreCacheCallbacks
core	ooocore.h	/^    OutOfOrderCore& core;$/;"	m	struct:OutOfOrderModel::ThreadContext
core_freq_hz	kernel.cpp	/^static W64 core_freq_hz = 0;$/;"	v	file:
core_freq_hz	ptlhwdef.h	/^  W64 core_freq_hz;$/;"	m	struct:ContextBase
core_freq_hz	ptlsim.h	/^  W64 core_freq_hz;$/;"	m	struct:PTLsimConfig
core_name	ptlsim.h	/^  stringbuf core_name;$/;"	m	struct:PTLsimConfig
core_to_external_state	ooocore-amd-k8.h	/^    void core_to_external_state() { }$/;"	f	struct:OutOfOrderModel::ThreadContext
core_to_external_state	ooocore.h	/^    void core_to_external_state() { }$/;"	f	struct:OutOfOrderModel::ThreadContext
core_to_external_state	seqcore.cpp	/^  void core_to_external_state(Context& ctx) {$/;"	f	struct:SequentialCore
coreid	ooocore-amd-k8.h	/^    W8   coreid;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
coreid	ooocore-amd-k8.h	/^    W8  coreid;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
coreid	ooocore-amd-k8.h	/^    byte coreid;$/;"	m	struct:OutOfOrderModel::IssueQueue
coreid	ooocore-amd-k8.h	/^    byte coreid;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
coreid	ooocore-amd-k8.h	/^    byte coreid;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
coreid	ooocore-amd-k8.h	/^    int coreid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
coreid	ooocore.h	/^    W8   coreid;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
coreid	ooocore.h	/^    W8  coreid;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
coreid	ooocore.h	/^    byte coreid;$/;"	m	struct:OutOfOrderModel::IssueQueue
coreid	ooocore.h	/^    byte coreid;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
coreid	ooocore.h	/^    byte coreid;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
coreid	ooocore.h	/^    int coreid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
coreid	seqcore.cpp	/^  byte coreid;$/;"	m	struct:SequentialCoreEvent	file:
coreof	ooocore.cpp	/^OutOfOrderCore& OutOfOrderModel::coreof(int coreid) {$/;"	f	class:OutOfOrderModel
cores	ooocore-amd-k8.h	/^    OutOfOrderCore* cores[MAX_SMT_CORES];$/;"	m	struct:OutOfOrderModel::OutOfOrderMachine
cores	ooocore.h	/^    OutOfOrderCore* cores[MAX_SMT_CORES];$/;"	m	struct:OutOfOrderModel::OutOfOrderMachine
cores	seqcore.cpp	/^  SequentialCore* cores[MAX_CONTEXTS];$/;"	m	struct:SequentialMachine	file:
cos	mathlib.cpp	/^  double cos(double x)$/;"	f	namespace:math
count	datastore.cpp	/^  W32 count;$/;"	m	struct:DataStoreNodeArrayHeader	file:
count	datastore.h	/^  W32 count; \/\/ element count in this node$/;"	m	struct:DataStoreNodeTemplateBase
count	datastore.h	/^  W32 count;$/;"	m	struct:DataStoreNode
count	dcache.h	/^    int count;$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
count	dcache.h	/^    int count;$/;"	m	struct:CacheSubsystem::MissBuffer
count	logic.h	/^  int count; \/\/ count of entries$/;"	m	struct:FixedQueue
count	ooocore-amd-k8.h	/^        W16 count;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon53
count	ooocore-amd-k8.h	/^    int count;$/;"	m	struct:OutOfOrderModel::IssueQueue
count	ooocore-amd-k8.h	/^    int count;$/;"	m	struct:OutOfOrderModel::ListOfStateLists
count	ooocore-amd-k8.h	/^    int count;$/;"	m	struct:OutOfOrderModel::StateList
count	ooocore.h	/^        W16 count;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon17
count	ooocore.h	/^    int count;$/;"	m	struct:OutOfOrderModel::IssueQueue
count	ooocore.h	/^    int count;$/;"	m	struct:OutOfOrderModel::ListOfStateLists
count	ooocore.h	/^    int count;$/;"	m	struct:OutOfOrderModel::StateList
count	ptlhwdef.h	/^  W16 count;$/;"	m	struct:BasicBlockBase
count	ptlsim.h	/^  int count;$/;"	m	struct:TransOpBuffer
count	seqcore.cpp	/^  int count;$/;"	m	struct:TransactionalMemory	file:
count	stats.h	/^      W64 count;$/;"	m	struct:PTLsimStats::decoder::bbcache
count	stats.h	/^      W64 count;$/;"	m	struct:PTLsimStats::decoder::pagecache
count	superstl.h	/^    inline int count() const { return length; }$/;"	f	class:superstl::dynarray
count	superstl.h	/^    int count() { return elemcount; }$/;"	f	struct:superstl::ChunkList
count	superstl.h	/^    int count;$/;"	m	struct:superstl::FixedKeyValueHashtable
count	superstl.h	/^    int count;$/;"	m	struct:superstl::FixedValueHashtable
count	superstl.h	/^    int count;$/;"	m	struct:superstl::SelfHashtable
count	superstl.h	/^    int count;$/;"	m	struct:superstl::stack
counter	superstl.h	/^    W16 counter;$/;"	m	struct:superstl::RecursiveMutex
covered_by_sfr	dcache.cpp	/^bool CacheHierarchy::covered_by_sfr(W64 addr, SFR* sfr, int sizeshift) {$/;"	f	class:CacheHierarchy
cp1	branchpred.h	/^  byte* cp1;$/;"	m	struct:PredictorUpdate
cp2	branchpred.h	/^  byte* cp2;$/;"	m	struct:PredictorUpdate
cpl	ptlhwdef.h	/^  W64 rip:48, cpl:2, maskevents:1, cs:13;$/;"	m	struct:TrapTarget
cpmeta	branchpred.h	/^  byte* cpmeta;$/;"	m	struct:PredictorUpdate
cpu	ptlxen.h	/^      W32 cpu;$/;"	m	struct:PTLsimHostCall::__anon99::__anon106
cpu_frstor	ptlhwdef.h	/^inline void cpu_frstor(X87State& state) {$/;"	f
cpu_fsave	ptlhwdef.h	/^inline void cpu_fsave(X87State& state) {$/;"	f
cpu_get_fpcw	ptlhwdef.h	/^inline W16 cpu_get_fpcw() {$/;"	f
cpu_pause	globals.h	/^static inline void cpu_pause() { asm volatile("pause" : : : "memory"); }$/;"	f
cpu_set_fpcw	ptlhwdef.h	/^inline void cpu_set_fpcw(W16 fpcw) {$/;"	f
cpu_type	ptlmon.cpp	/^  int cpu_type;$/;"	m	struct:XenController	file:
cpu_type	ptlxen.cpp	/^int cpu_type = CPU_TYPE_UNKNOWN;$/;"	v
cpuid	globals.h	/^static inline void cpuid(int op, W32& eax, W32& ebx, W32& ecx, W32& edx) {$/;"	f
cpuid_description	decode-complex.cpp	/^static const char cpuid_description[48+1] = "Intel(R) Xeon(TM) CPU 2.00 GHz                  ";$/;"	v	file:
cpuid_vendor	decode-complex.cpp	/^static const char cpuid_vendor[12+1] = "GenuineIntel";$/;"	v	file:
cpuidxen	cpuid.cpp	/^static inline void cpuidxen(int op, W32& eax, W32& ebx, W32& ecx, W32& edx) {$/;"	f	file:
cputime	ooocore-amd-k8.h	/^    struct cputime { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::simulator
cputime	ooocore-amd-k8.h	/^    } cputime;$/;"	m	struct:OutOfOrderCoreStats::simulator	typeref:struct:OutOfOrderCoreStats::simulator::cputime
cputime	ooocore.h	/^    struct cputime { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::simulator
cputime	ooocore.h	/^    } cputime;$/;"	m	struct:OutOfOrderCoreStats::simulator	typeref:struct:OutOfOrderCoreStats::simulator::cputime
cr0	ptlhwdef.h	/^  CR0 cr0;$/;"	m	struct:ContextBase
cr1	ptlhwdef.h	/^  Waddr cr1, cr2, cr3;$/;"	m	struct:ContextBase
cr2	ptlhwdef.h	/^  Waddr cr1, cr2, cr3;$/;"	m	struct:ContextBase
cr3	ptlhwdef.h	/^  Waddr cr1, cr2, cr3;$/;"	m	struct:ContextBase
cr4	ptlhwdef.h	/^  CR4 cr4;$/;"	m	struct:ContextBase
cr5	ptlhwdef.h	/^  Waddr cr5, cr6, cr7;$/;"	m	struct:ContextBase
cr6	ptlhwdef.h	/^  Waddr cr5, cr6, cr7;$/;"	m	struct:ContextBase
cr7	ptlhwdef.h	/^  Waddr cr5, cr6, cr7;$/;"	m	struct:ContextBase
crc	superstl.h	/^    W32 crc;$/;"	m	struct:superstl::CRC32
crctable	superstl.cpp	/^const W32 CRC32::crctable[256] = {$/;"	m	class:CRC32	file:
crctable	superstl.h	/^    static const W32 crctable[256];$/;"	m	struct:superstl::CRC32
create_bounce_frame	ptlxen.cpp	/^bool Context::create_bounce_frame(W16 target_cs, Waddr target_rip, int action) {$/;"	f	class:Context
create_grouped_bargraph	ptlstats.cpp	/^void create_grouped_bargraph(ostream& os, char* statname, char* rownames, char* colnames, char* row_col_pattern,$/;"	f
create_svg_of_histogram_percent_bargraph	ptlstats.cpp	/^void create_svg_of_histogram_percent_bargraph(ostream& os, W64s* histogram, int count, const char* title = null, double imagewidth = 300.0, double imageheight = 100.0) {$/;"	f
create_svg_of_percentage_line_graph	ptlstats.cpp	/^void create_svg_of_percentage_line_graph(ostream& os, double* xpoints, int xcount, double** ypoints, int ycount, char** ynames,$/;"	f
create_table	ptlstats.cpp	/^void create_table(ostream& os, int tabletype, char* statname, char* rownames, char* colnames, char* row_col_pattern, int scale_relative_to_col) {$/;"	f
crosses_page	stats.h	/^      W64 crosses_page;$/;"	m	struct:PTLsimStats::decoder::page_crossings
cs	decode-complex.cpp	/^  W64 rip, cs, rflags, rsp, ss;$/;"	m	struct:IRETStackFrame	file:
cs	ptlhwdef.h	/^      W16 cs;$/;"	m	struct:FXSAVEStruct::__anon120::__anon121
cs	ptlhwdef.h	/^  W16 cs;$/;"	m	struct:X87State
cs	ptlhwdef.h	/^  W64 rip:48, cpl:2, maskevents:1, cs:13;$/;"	m	struct:TrapTarget
cs2	mathlib.cpp	/^          cs2 =  4.99999999999999999999950396842453E-01,$/;"	v	file:
cs4	mathlib.cpp	/^          cs4 = -4.16666666666664434524222570944589E-02,$/;"	v	file:
cs6	mathlib.cpp	/^          cs6 =  1.38888874007937613028114285595617E-03;$/;"	v	file:
cslow2	mathlib.cpp	/^static double cslow2(double x) {$/;"	f	namespace:math	file:
csloww	mathlib.cpp	/^static double csloww(double x,double dx, double orig) {$/;"	f	namespace:math	file:
csloww1	mathlib.cpp	/^static double csloww1(double x, double dx, double orig) {$/;"	f	namespace:math	file:
csloww2	mathlib.cpp	/^static double csloww2(double x, double dx, double orig, int n) {$/;"	f	namespace:math	file:
ct	superstl.h	/^    CycleTimer& ct;$/;"	m	struct:superstl::CycleTimerScope
ctcommit	ooocore.cpp	/^  CycleTimer ctcommit;$/;"	v
ctcomplete	ooocore.cpp	/^  CycleTimer ctcomplete;$/;"	v
ctdecode	ooocore.cpp	/^  CycleTimer ctdecode;$/;"	v
ctdispatch	ooocore.cpp	/^  CycleTimer ctdispatch;$/;"	v
ctfetch	ooocore.cpp	/^  CycleTimer ctfetch;$/;"	v
ctfrontend	ooocore.cpp	/^  CycleTimer ctfrontend;$/;"	v
ctissue	ooocore.cpp	/^  CycleTimer ctissue;$/;"	v
ctissueload	ooocore.cpp	/^  CycleTimer ctissueload;$/;"	v
ctissuestore	ooocore.cpp	/^  CycleTimer ctissuestore;$/;"	v
ctor_func_ptr	klibc.cpp	/^typedef void (*ctor_func_ptr) (void);$/;"	t	file:
ctor_list	linkstart.S	/^ctor_list:$/;"	l
ctor_list_end	linkend.S	/^ctor_list_end:$/;"	l
ctrename	ooocore.cpp	/^  CycleTimer ctrename;$/;"	v
ctseq	seqcore.cpp	/^  CycleTimer ctseq;$/;"	m	struct:SequentialCore	file:
cttotal	ooocore.cpp	/^  CycleTimer cttotal;$/;"	v
cttransfer	ooocore.cpp	/^  CycleTimer cttransfer;$/;"	v
ctwriteback	ooocore.cpp	/^  CycleTimer ctwriteback;$/;"	v
ctx	ooocore-amd-k8.h	/^    Context& ctx;$/;"	m	struct:OutOfOrderModel::ThreadContext
ctx	ooocore.h	/^    Context& ctx;$/;"	m	struct:OutOfOrderModel::ThreadContext
ctx	ptlmon.cpp	/^  Context* ctx;$/;"	m	struct:XenController	file:
ctx	seqcore.cpp	/^  Context& ctx;$/;"	m	struct:SequentialCore	file:
ctxid	branchpred.h	/^  W32 ctxid:8, flags:8, bimodal:1, twolevel:1, meta:1, ras_push:1;$/;"	m	struct:PredictorUpdate
ctzclzop	uopimpl.cpp	/^inline void ctzclzop(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
cube	globals.h	176;"	d
cumulative_histogram	datastore.h	/^  int force_sum_of_subtrees_only:1, percent_of_toplevel:1, hide_zero_branches:1, cumulative_histogram:1, show_stars_in_histogram:1;$/;"	m	struct:DataStoreNodePrintSettings
cumulative_histogram	ptlstats.cpp	/^  bool cumulative_histogram;$/;"	m	struct:PTLstatsConfig	file:
current	logic.h	/^  int current;$/;"	m	struct:HistoryBuffer
current_basic_block	ooocore-amd-k8.h	/^    BasicBlock* current_basic_block;$/;"	m	struct:OutOfOrderModel::ThreadContext
current_basic_block	ooocore.h	/^    BasicBlock* current_basic_block;$/;"	m	struct:OutOfOrderModel::ThreadContext
current_basic_block	seqcore.cpp	/^  BasicBlock* current_basic_block;$/;"	m	struct:SequentialCore	file:
current_basic_block_transop_index	ooocore-amd-k8.h	/^    int current_basic_block_transop_index;$/;"	m	struct:OutOfOrderModel::ThreadContext
current_basic_block_transop_index	ooocore.h	/^    int current_basic_block_transop_index;$/;"	m	struct:OutOfOrderModel::ThreadContext
current_bbcache_dump_filename	ptlsim.cpp	/^stringbuf current_bbcache_dump_filename;$/;"	v
current_bytes_allocated	mm.cpp	/^  W64 current_bytes_allocated;$/;"	m	struct:ExtentAllocator	file:
current_bytes_allocated	mm.cpp	/^  W64 current_bytes_allocated;$/;"	m	struct:SlabAllocator	file:
current_bytes_free	mm.cpp	/^  W64 current_bytes_free;$/;"	m	struct:ExtentAllocator	file:
current_icache_block	ooocore-amd-k8.h	/^    W64 current_icache_block;$/;"	m	struct:OutOfOrderModel::ThreadContext
current_icache_block	ooocore.h	/^    W64 current_icache_block;$/;"	m	struct:OutOfOrderModel::ThreadContext
current_log_filename	ptlsim.cpp	/^stringbuf current_log_filename;$/;"	v
current_machine	ptlsim.cpp	/^PTLsimMachine* current_machine = null;$/;"	v
current_objs_allocated	mm.cpp	/^  W64 current_objs_allocated;$/;"	m	struct:SlabAllocator	file:
current_pages_allocated	mm.cpp	/^  W64 current_pages_allocated;$/;"	m	struct:SlabAllocator	file:
current_state_list	ooocore-amd-k8.h	/^        StateList* current_state_list;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon53
current_state_list	ooocore-amd-k8.h	/^    struct StateList* current_state_list;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry	typeref:struct:OutOfOrderModel::ReorderBufferEntry::StateList
current_state_list	ooocore.h	/^        StateList* current_state_list;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon17
current_state_list	ooocore.h	/^    struct StateList* current_state_list;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry	typeref:struct:OutOfOrderModel::ReorderBufferEntry::StateList
current_stats_filename	ptlsim.cpp	/^stringbuf current_stats_filename;$/;"	v
current_uop_in_macro_op	seqcore.cpp	/^  int current_uop_in_macro_op;$/;"	m	struct:SequentialCore	file:
current_uuid	seqcore.cpp	/^  W64 current_uuid;$/;"	m	struct:SequentialCore	file:
current_vcpuid	kernel.cpp	/^int current_vcpuid() { return 0; }$/;"	f
current_vcpuid	ptlxen.cpp	/^int current_vcpuid() {$/;"	f
cutter	mathlib.cpp	/^  static const number cutter         = {{0x00000000, 0x44b00000}}; \/* 2**76  *\/$/;"	v	file:
cw	ptlhwdef.h	/^  X87ControlWord cw;$/;"	m	struct:FXSAVEStruct
cw	ptlhwdef.h	/^  X87ControlWord cw;$/;"	m	struct:X87State
cycle	ooocore-amd-k8.h	/^    W32 cycle;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
cycle	ooocore.h	/^    W32 cycle;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
cycle	seqcore.cpp	/^  W32 cycle;$/;"	m	struct:SequentialCoreEvent	file:
cycles	dcache-amd-k8.h	/^      W32 cycles;$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
cycles	dcache.h	/^      W32 cycles;$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
cycles	ooocore-amd-k8.h	/^  W64 cycles;$/;"	m	struct:OutOfOrderCoreStats
cycles	ooocore.h	/^  W64 cycles;$/;"	m	struct:OutOfOrderCoreStats
cycles	stats.h	/^    W64 cycles;$/;"	m	struct:PTLsimStats::summary
cycles	superstl.h	/^    inline W64 cycles() const {$/;"	f	class:superstl::CycleTimer
cycles_at_last_mode_switch	ptlxen.cpp	/^W64 cycles_at_last_mode_switch = 0;$/;"	v
cycles_in_mode	stats.h	/^    EventsInMode cycles_in_mode;$/;"	m	struct:PTLsimStats::external
cycles_left	ooocore-amd-k8.h	/^        W16 cycles_left;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon46
cycles_left	ooocore-amd-k8.h	/^        W16 cycles_left;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon49
cycles_left	ooocore-amd-k8.h	/^        W16 cycles_left;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
cycles_left	ooocore-amd-k8.h	/^    W16s cycles_left; \/\/ execution latency counter, decremented every cycle when executing$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
cycles_left	ooocore.h	/^        W16 cycles_left;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon10
cycles_left	ooocore.h	/^        W16 cycles_left;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon13
cycles_left	ooocore.h	/^        W16 cycles_left;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
cycles_left	ooocore.h	/^    W16s cycles_left; \/\/ execution latency counter, decremented every cycle when executing$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
cycles_per_sec	stats.h	/^        double cycles_per_sec;$/;"	m	struct:PTLsimStats::simulator::performance::rate
d	globals.h	/^  double d;$/;"	m	union:W64orDouble
d	mathlib.cpp	/^    double d[40]; \/* e holds its exponent (...,-2,-1,0,1,2,...) and            *\/$/;"	m	struct:math::mpa::mp_no	file:
d	mathlib.cpp	/^  double d;$/;"	m	union:math::ieee754_double	file:
d	mathlib.cpp	/^  typedef union { int i[2]; double d; } number;$/;"	m	union:math::mpa::__anon80	file:
d	ptlhwdef.h	/^	W16 limit:4, avl:1, l:1, d:1, g:1, base2:8;$/;"	m	struct:SegmentDescriptor
d	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
d	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
d	ptlhwdef.h	/^  byte a:1, d:1, ptwrite:1, pad:5;$/;"	m	struct:PTEUpdateBase
d	ptlhwdef.h	/^  double d;$/;"	m	union:SSEType
d_mode	decode.h	/^enum { b_mode, v_mode, w_mode, d_mode, q_mode, x_mode, dq_mode };$/;"	e	enum:__anon140
dashoff	ptlstats.cpp	/^  float dashoff;$/;"	m	class:SVGCreator	file:
dashoff	ptlstats.cpp	/^  float dashoff;$/;"	m	struct:LineAttributes	file:
dashoffset	ptlstats.cpp	/^  float dashoffset;$/;"	m	class:SVGCreator	file:
dashoffset	ptlstats.cpp	/^  float dashoffset;$/;"	m	struct:LineAttributes	file:
dashon	ptlstats.cpp	/^  float dashon;$/;"	m	class:SVGCreator	file:
dashon	ptlstats.cpp	/^  float dashon;$/;"	m	struct:LineAttributes	file:
data	Makefile	/^	objcopy -I binary -O $(DATA_OBJ_TYPE) -B i386 --rename-section .data=.dst,alloc,load,readonly,data,contents ptlsim.dst ptlsim.dst.o$/;"	m
data	Makefile	/^	objcopy -I binary -O $(DATA_OBJ_TYPE) -B i386 --rename-section .data=.ptlxen,alloc,load,readonly,data,contents ptlxen.bin ptlxen.bin.o$/;"	m
data	Makefile	/^	objcopy -I binary -O $(DATA_OBJ_TYPE) -B i386 --rename-section .data=.usage,alloc,load,readonly,data,contents usage.txt usage.o$/;"	m
data	cpuid.cpp	/^  W32 data;$/;"	m	union:CacheInfo	file:
data	cpuid.cpp	/^  W32 data;$/;"	m	union:L2CacheInfo	file:
data	cpuid.cpp	/^  W32 data;$/;"	m	union:ProcessorMiscInfo	file:
data	cpuid.cpp	/^  W32 data;$/;"	m	union:ProcessorModelInfo	file:
data	cpuid.cpp	/^  W32 data;$/;"	m	union:TLBInfo	file:
data	cpuid.cpp	/^  W32 data[3];$/;"	m	union:CPUVendorID	file:
data	dcache-amd-k8.h	/^    W64 data;       \/\/ data already known so far (e.g. from SFR)$/;"	m	struct:CacheSubsystem::LoadFillReq
data	dcache.h	/^    W64 data;       \/\/ data already known so far (e.g. from SFR)$/;"	m	struct:CacheSubsystem::LoadFillReq
data	decode-complex.cpp	/^  W32 data;$/;"	m	union:ProcessorMiscInfo	file:
data	decode-complex.cpp	/^  W32 data;$/;"	m	union:ProcessorModelInfo	file:
data	globals.h	/^  W32 data;$/;"	m	union:MXCSR
data	logic.h	/^    W64 data[linesize \/ sizeof(W64)];$/;"	m	struct:CommitRollbackCache::BackupCacheLine
data	logic.h	/^  T data;$/;"	m	struct:latch
data	logic.h	/^  V data[ways];$/;"	m	struct:FullyAssociativeArray
data	logic.h	/^  V data[ways];$/;"	m	struct:LockableFullyAssociativeArray
data	logic.h	/^  latch<T> data[size];$/;"	m	struct:SynchronousRegisterFile
data	ooocore-amd-k8.h	/^        W64 data;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon55
data	ooocore-amd-k8.h	/^    W64 data;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
data	ooocore.h	/^        W64 data;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon19
data	ooocore.h	/^    W64 data;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
data	ptlhwdef.h	/^  W32 data;$/;"	m	union:MaskControlInfo
data	ptlhwdef.h	/^  W32 data;$/;"	m	union:PermbControlInfo
data	ptlhwdef.h	/^  W64 data;$/;"	m	struct:SFR
data	ptlmon.cpp	/^  char* data;$/;"	m	struct:PendingRequest	file:
data	ptlxen.h	/^  W32 data[3];$/;"	m	union:CPUVendorID
data	superstl.h	/^      T data[N];$/;"	m	struct:superstl::ChunkList::Chunk
data	superstl.h	/^    T data[N];$/;"	m	struct:superstl::FixedValueHashtable
data	superstl.h	/^    T data[size];$/;"	m	struct:superstl::array
data	superstl.h	/^    T data[size];$/;"	m	struct:superstl::stack
data	superstl.h	/^    T* data;$/;"	m	class:superstl::dynarray
data	superstl.h	/^    T* data;$/;"	m	class:superstl::queuelink
data	superstl.h	/^    Tdata data[N];$/;"	m	struct:superstl::FixedKeyValueHashtable
data_list	seqcore.cpp	/^  W64 data_list[N];$/;"	m	struct:TransactionalMemory	file:
data_to_store	ooocore-amd-k8.h	/^        W64 data_to_store;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
data_to_store	ooocore.h	/^        W64 data_to_store;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
dataoffs	ptlhwdef.h	/^  W32 dataoffs;$/;"	m	struct:X87State
datatype	ooocore-amd-k8.h	/^      W64 datatype[DATATYPE_COUNT]; \/\/ label: datatype_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load
datatype	ooocore-amd-k8.h	/^      W64 datatype[DATATYPE_COUNT]; \/\/ label: datatype_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store
datatype	ooocore.h	/^      W64 datatype[DATATYPE_COUNT]; \/\/ label: datatype_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load
datatype	ooocore.h	/^      W64 datatype[DATATYPE_COUNT]; \/\/ label: datatype_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store
datatype	ptlhwdef.h	/^  byte internal:1, locked:1, cachelevel:2, datatype:4;$/;"	m	struct:TransOpBase
datatype_names	ptlhwdef.cpp	/^const char* datatype_names[DATATYPE_COUNT] = {$/;"	v
datavalid	ptlhwdef.h	/^  W64 addrvalid:1, invalid:1, datavalid:1, physaddr:45, bytemask:8, tag:8;$/;"	m	struct:SFR
daz	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
dcache	dcache-amd-k8.h	/^      W16 dcache:1, icache:1;    \/\/ L1I vs L1D$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
dcache	dcache.h	/^      W16 dcache:1, icache:1;    \/\/ L1I vs L1D$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
dcache	ooocore-amd-k8.h	/^  struct dcache {$/;"	s	struct:PerContextOutOfOrderCoreStats
dcache	ooocore-amd-k8.h	/^  } dcache;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::dcache
dcache	ooocore.h	/^  struct dcache {$/;"	s	struct:PerContextOutOfOrderCoreStats
dcache	ooocore.h	/^  } dcache;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::dcache
dcache	stats.h	/^  DataCacheStats dcache;$/;"	m	struct:PTLsimStats
dcache_wakeup	dcache.cpp	/^void PerCoreCacheCallbacks::dcache_wakeup(LoadStoreInfo lsi, W64 physaddr) { }$/;"	f	class:PerCoreCacheCallbacks
dcache_wakeup	oooexec.cpp	/^void OutOfOrderCoreCacheCallbacks::dcache_wakeup(LoadStoreInfo lsi, W64 physaddr) {$/;"	f	class:OutOfOrderCoreCacheCallbacks
de	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
de	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
de	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
deadlock_flushes	ooocore-amd-k8.h	/^      W64 deadlock_flushes;$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
deadlock_flushes	ooocore.h	/^      W64 deadlock_flushes;$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
deadlock_uops_flushed	ooocore-amd-k8.h	/^      W64 deadlock_uops_flushed;$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
deadlock_uops_flushed	ooocore.h	/^      W64 deadlock_uops_flushed;$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
debug_unmap_phys_page_tree	ptlxen-memory.cpp	/^static const bool debug_unmap_phys_page_tree = 1;$/;"	v	file:
decl_div_rem	superstl.cpp	1092;"	d	file:
decl_div_rem_s	superstl.cpp	1093;"	d	file:
declare_issueq_templates	ooocore-amd-k8.h	1503;"	d
declare_issueq_templates	ooocore.h	1526;"	d
declare_syscall0	ptlxen.cpp	544;"	d	file:
declare_syscall0	ptlxen.cpp	552;"	d	file:
declare_syscall0	syscalls.h	385;"	d
declare_syscall0	syscalls.h	90;"	d
declare_syscall1	ptlxen.cpp	545;"	d	file:
declare_syscall1	ptlxen.cpp	555;"	d	file:
declare_syscall1	syscalls.h	388;"	d
declare_syscall1	syscalls.h	93;"	d
declare_syscall2	ptlxen.cpp	546;"	d	file:
declare_syscall2	ptlxen.cpp	558;"	d	file:
declare_syscall2	syscalls.h	391;"	d
declare_syscall2	syscalls.h	96;"	d
declare_syscall3	ptlxen.cpp	547;"	d	file:
declare_syscall3	ptlxen.cpp	561;"	d	file:
declare_syscall3	syscalls.h	394;"	d
declare_syscall3	syscalls.h	99;"	d
declare_syscall4	ptlxen.cpp	548;"	d	file:
declare_syscall4	ptlxen.cpp	564;"	d	file:
declare_syscall4	syscalls.h	103;"	d
declare_syscall4	syscalls.h	397;"	d
declare_syscall5	ptlxen.cpp	549;"	d	file:
declare_syscall5	ptlxen.cpp	567;"	d	file:
declare_syscall5	syscalls.h	108;"	d
declare_syscall5	syscalls.h	401;"	d
declare_syscall6	ptlxen.cpp	550;"	d	file:
declare_syscall6	ptlxen.cpp	571;"	d	file:
declare_syscall6	syscalls.h	113;"	d
declare_syscall6	syscalls.h	405;"	d
decode	ooocore-amd-k8.h	/^      double decode;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
decode	ooocore.h	/^      double decode;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
decode_complex	decode-complex.cpp	/^bool TraceDecoder::decode_complex() {$/;"	f	class:TraceDecoder
decode_fast	decode-fast.cpp	/^bool TraceDecoder::decode_fast() {$/;"	f	class:TraceDecoder
decode_prefixes	decode-core.cpp	/^void TraceDecoder::decode_prefixes() {$/;"	f	class:TraceDecoder
decode_sse	decode-sse.cpp	/^bool TraceDecoder::decode_sse() {$/;"	f	class:TraceDecoder
decode_tag	ooocore-amd-k8.h	/^  void decode_tag(issueq_tag_t tag, int& threadid, int& idx) {$/;"	f	namespace:OutOfOrderModel
decode_tag	ooocore.h	/^  void decode_tag(issueq_tag_t tag, int& threadid, int& idx) {$/;"	f	namespace:OutOfOrderModel
decode_type_names	decode.h	/^static const char* decode_type_names[DECODE_TYPE_COUNT] = {$/;"	v
decode_x87	decode-x87.cpp	/^bool TraceDecoder::decode_x87() {$/;"	f	class:TraceDecoder
decoder	stats.h	/^  struct decoder {$/;"	s	struct:PTLsimStats
decoder	stats.h	/^  } decoder;$/;"	m	struct:PTLsimStats	typeref:struct:PTLsimStats::decoder
decrement	logic.h	/^  void decrement(base_t amount = 1) {$/;"	f	struct:FullyAssociativeTags16bit
decrement	logic.h	/^  void decrement(base_t amount = 1) {$/;"	f	struct:FullyAssociativeTags8bit
deliver	dcache-amd-k8.h	/^    struct deliver { \/\/ node: summable$/;"	s	struct:DataCacheStats::missbuf
deliver	dcache-amd-k8.h	/^    } deliver;$/;"	m	struct:DataCacheStats::missbuf	typeref:struct:DataCacheStats::missbuf::deliver
deliver	dcache.h	/^    struct deliver { \/\/ node: summable$/;"	s	struct:DataCacheStats::missbuf
deliver	dcache.h	/^    } deliver;$/;"	m	struct:DataCacheStats::missbuf	typeref:struct:DataCacheStats::missbuf::deliver
deliver_timer_interrupt_to_vcpu	ptlxen-events.cpp	/^static bool deliver_timer_interrupt_to_vcpu(int vcpuid, bool forced) {$/;"	f	file:
denorm	mathlib.cpp	/^  static void denorm(const mp_no *x, double *y, int p)$/;"	f	namespace:math::mpa	file:
dependency	ooocore-amd-k8.h	/^      struct dependency { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load
dependency	ooocore-amd-k8.h	/^      } dependency;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
dependency	ooocore.h	/^      struct dependency { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load
dependency	ooocore.h	/^      } dependency;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
dependent_operands	ooocore-amd-k8.h	/^        byte dependent_operands;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon53
dependent_operands	ooocore.h	/^        byte dependent_operands;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon17
dependent_uops	ooocore-amd-k8.h	/^      W64 dependent_uops[OutOfOrderModel::ROB_SIZE+1]; \/\/ histo: 0, OutOfOrderModel::ROB_SIZE, 1$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
dependent_uops	ooocore.h	/^      W64 dependent_uops[OutOfOrderModel::ROB_SIZE+1]; \/\/ histo: 0, OutOfOrderModel::ROB_SIZE, 1$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
dequeue	logic.h	/^  T* dequeue() {$/;"	f	struct:FixedQueue
dequeue	ooocore-amd-k8.h	/^    selfqueuelink* dequeue() {$/;"	f	struct:OutOfOrderModel::StateList
dequeue	ooocore.h	/^    selfqueuelink* dequeue() {$/;"	f	struct:OutOfOrderModel::StateList
dequeue	superstl.h	/^    T dequeue(int qid) {$/;"	f	struct:superstl::FixedIntegerQueueSet
dequeue	superstl.h	/^    T* dequeue() { return remove_head(); }$/;"	f	class:superstl::queue
description	config.h	/^  const char* description;$/;"	m	struct:ConfigurationOption
dest_renamed_before_writeback	ooocore-amd-k8.h	/^        byte transient:1, all_consumers_sourced_from_bypass:1, no_branches_between_renamings:1, dest_renamed_before_writeback:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon55
dest_renamed_before_writeback	ooocore-amd-k8.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
dest_renamed_before_writeback	ooocore.h	/^        byte transient:1, all_consumers_sourced_from_bypass:1, no_branches_between_renamings:1, dest_renamed_before_writeback:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon19
dest_renamed_before_writeback	ooocore.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
destroy	branchpred.cpp	/^void BranchPredictorInterface::destroy() {$/;"	f	class:BranchPredictorInterface
detach	ptlmon.cpp	/^  int detach() {$/;"	f	struct:XenController
detect_repeated_pattern	superstl.h	/^  bool detect_repeated_pattern(const T* list, int n, int& pattern_length, int& repeat_count, int& remaining_count) {$/;"	f	namespace:superstl
device_not_available_entry	lowlevel-64bit-xen.S	/^device_not_available_entry:$/;"	l
devmajor	kernel.cpp	/^  unsigned short devmajor;$/;"	m	struct:MemoryMapExtent	file:
devminor	kernel.cpp	/^  unsigned short devminor;$/;"	m	struct:MemoryMapExtent	file:
df	ptlhwdef.h	/^  W64 mfnlo:28, use64:1, kernel:1, padlo:2, mfnhi:28, df:1, padhi:3;$/;"	m	struct:RIPVirtPhysBase
digits	datastore.cpp	/^static inline int digits(W64 v) {$/;"	f	file:
dirflag	decode.h	/^  byte dirflag;$/;"	m	struct:TraceDecoder
dirty	ptlhwdef.h	/^  byte dirty; \/\/ VCPU was just brought online$/;"	m	struct:ContextBase
dirtymap	kernel.h	/^  spat_t dirtymap;$/;"	m	class:AddressSpace
disable_breakout_insn	ptlxen.cpp	/^void disable_breakout_insn() {$/;"	f
disable_ptlsim_call_gate	kernel.cpp	/^void disable_ptlsim_call_gate() {$/;"	f
disable_virtualized_tsc	ptlxen-events.cpp	/^void disable_virtualized_tsc(int vcpuid) {$/;"	f
disallow_exec	kernel.h	/^  void disallow_exec(void* address, Waddr size) { make_inaccessible(address, size, execmap); }$/;"	f	class:AddressSpace
disallow_read	kernel.h	/^  void disallow_read(void* address, Waddr size) { make_inaccessible(address, size, readmap); }$/;"	f	class:AddressSpace
disallow_write	kernel.h	/^  void disallow_write(void* address, Waddr size) { make_inaccessible(address, size, writemap); }$/;"	f	class:AddressSpace
dispatch	ooocore-amd-k8.h	/^      double dispatch;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
dispatch	ooocore-amd-k8.h	/^      } dispatch;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon48
dispatch	ooocore-amd-k8.h	/^  struct dispatch {$/;"	s	struct:OutOfOrderCoreStats
dispatch	ooocore-amd-k8.h	/^  struct dispatch {$/;"	s	struct:PerContextOutOfOrderCoreStats
dispatch	ooocore-amd-k8.h	/^  } dispatch;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::dispatch
dispatch	ooocore-amd-k8.h	/^  } dispatch;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::dispatch
dispatch	ooocore.h	/^      double dispatch;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
dispatch	ooocore.h	/^      } dispatch;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon12
dispatch	ooocore.h	/^  struct dispatch {$/;"	s	struct:OutOfOrderCoreStats
dispatch	ooocore.h	/^  struct dispatch {$/;"	s	struct:PerContextOutOfOrderCoreStats
dispatch	ooocore.h	/^  } dispatch;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::dispatch
dispatch	ooocore.h	/^  } dispatch;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::dispatch
dispatch	ooopipe.cpp	/^int ThreadContext::dispatch() {$/;"	f	class:ThreadContext
dispatch_deadlock_countdown	ooocore-amd-k8.h	/^    int dispatch_deadlock_countdown;    $/;"	m	struct:OutOfOrderModel::ThreadContext
dispatch_deadlock_countdown	ooocore.h	/^    int dispatch_deadlock_countdown;    $/;"	m	struct:OutOfOrderModel::ThreadContext
dispatch_source_counter	ooocore-amd-k8.h	/^    W64 dispatch_source_counter;$/;"	m	struct:OutOfOrderModel::StateList
dispatch_source_counter	ooocore.h	/^    W64 dispatch_source_counter;$/;"	m	struct:OutOfOrderModel::StateList
dispatchcount	ooocore-amd-k8.h	/^    int dispatchcount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
dispatchcount	ooocore.h	/^    int dispatchcount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
div_frac	ptlxen-events.cpp	/^static inline W32 div_frac(W32 dividend, W32 divisor) {$/;"	f	file:
div_rem	superstl.cpp	/^  bool div_rem(T& quotientlo, T& remainder, T dividend_hi, T dividend_lo, T divisor) {$/;"	f	namespace:superstl
div_rem	superstl.cpp	/^  bool div_rem(W64& quotientlo, W64& remainder, W64 dividend_hi, W64 dividend_lo, W64 divisor) {$/;"	f	namespace:superstl
div_rem_s	superstl.cpp	/^  bool div_rem_s(T& quotientlo, T& remainder, T dividend_hi, T dividend_lo, T udivisor) {$/;"	f	namespace:superstl
div_rem_s	superstl.cpp	/^  bool div_rem_s(W64& quotientlo, W64& remainder, W64 dividend_hi, W64 dividend_lo, W64 divisor) {$/;"	f	namespace:superstl
divide_error_entry	lowlevel-64bit-xen.S	/^divide_error_entry:$/;"	l
dm	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
dm	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
do_commit_page_table_updates	ptlxen-memory.cpp	/^int do_commit_page_table_updates() {$/;"	f
do_div	klibc.h	21;"	d
do_div	klibc.h	32;"	d
do_evtchn_op	ptlmon.cpp	/^static int do_evtchn_op(int xc_handle, int cmd, void *arg, size_t arg_size) {$/;"	f	file:
do_msr_op	ptlmon.cpp	/^static int do_msr_op(int xc, int cmd, int cpu, W32 index, W64& value) {$/;"	f	file:
do_page_fault	ptlxen-memory.cpp	/^asmlinkage void do_page_fault(W64* regs) {$/;"	f
do_privcmd	ptlmon.cpp	/^static int do_privcmd(int xc_handle, unsigned int cmd, unsigned long data) {$/;"	f	file:
do_syscall_32bit	kernel.cpp	/^static inline W32 do_syscall_32bit(W32 sysid, W32 arg1, W32 arg2, W32 arg3, W32 arg4, W32 arg5, W32 arg6) {$/;"	f	file:
do_syscall_32bit	ptlmon.cpp	/^static inline W32 do_syscall_32bit(W32 sysid, W32 arg1, W32 arg2, W32 arg3, W32 arg4, W32 arg5, W32 arg6) {$/;"	f	file:
do_syscall_64bit	kernel.cpp	/^static inline W64 do_syscall_64bit(W64 syscallid, W64 arg1, W64 arg2, W64 arg3, W64 arg4, W64 arg5, W64 arg6) {$/;"	f	file:
do_syscall_64bit	ptlmon.cpp	/^static inline W64 do_syscall_64bit(W64 syscallid, W64 arg1, W64 arg2, W64 arg3, W64 arg4, W64 arg5, W64 arg6) {$/;"	f	file:
do_xen_hypercall	ptlmon.cpp	/^int do_xen_hypercall(int xc_handle, privcmd_hypercall_t *hypercall) {$/;"	f
do_xen_hypercall	ptlxen.cpp	/^static inline W64 do_xen_hypercall(W64 hypercall, W64 arg1, W64 arg2, W64 arg3, W64 arg4, W64 arg5, W64 arg6) {$/;"	f	file:
domain	ptlmon.cpp	/^  int domain;$/;"	m	struct:XenController	file:
domain	ptlmon.cpp	/^int domain = -1;$/;"	v
domain	ptlsim.h	/^  W64 domain;$/;"	m	struct:PTLsimConfig
domid_t	ptlmon.cpp	/^typedef W16 domid_t;$/;"	t	file:
dosincos	mathlib.cpp	/^namespace dosincos {$/;"	n	namespace:math	file:
dp	ptlhwdef.h	/^      W32 dp;$/;"	m	struct:FXSAVEStruct::__anon120::__anon121
dpl	ptlhwdef.h	/^	W16 base1:8, type:4, s:1, dpl:2, p:1;$/;"	m	struct:SegmentDescriptor
dpl	ptlhwdef.h	/^  W32 present:1, use64:1, use32:1, supervisor:1, dpl:2;$/;"	m	struct:SegmentDescriptorCache
dq_mode	decode.h	/^enum { b_mode, v_mode, w_mode, d_mode, q_mode, x_mode, dq_mode };$/;"	e	enum:__anon140
dr0	ptlhwdef.h	/^  DebugReg dr0, dr1, dr2, dr3, dr4, dr5, dr6, dr7;$/;"	m	struct:ContextBase
dr1	ptlhwdef.h	/^  DebugReg dr0, dr1, dr2, dr3, dr4, dr5, dr6, dr7;$/;"	m	struct:ContextBase
dr2	ptlhwdef.h	/^  DebugReg dr0, dr1, dr2, dr3, dr4, dr5, dr6, dr7;$/;"	m	struct:ContextBase
dr3	ptlhwdef.h	/^  DebugReg dr0, dr1, dr2, dr3, dr4, dr5, dr6, dr7;$/;"	m	struct:ContextBase
dr4	ptlhwdef.h	/^  DebugReg dr0, dr1, dr2, dr3, dr4, dr5, dr6, dr7;$/;"	m	struct:ContextBase
dr5	ptlhwdef.h	/^  DebugReg dr0, dr1, dr2, dr3, dr4, dr5, dr6, dr7;$/;"	m	struct:ContextBase
dr6	ptlhwdef.h	/^  DebugReg dr0, dr1, dr2, dr3, dr4, dr5, dr6, dr7;$/;"	m	struct:ContextBase
dr7	ptlhwdef.h	/^  DebugReg dr0, dr1, dr2, dr3, dr4, dr5, dr6, dr7;$/;"	m	struct:ContextBase
ds	ptlhwdef.h	/^      W16 ds;$/;"	m	struct:FXSAVEStruct::__anon120::__anon121
ds	ptlhwdef.h	/^  W16 ds;$/;"	m	struct:X87State
ds	ptlhwdef.h	/^  struct { W32 ms:6, mc:6, ds:6; } info;$/;"	m	struct:MaskControlInfo::__anon132
dst	datastore.h	/^  DataStoreNodeTemplate* dst;$/;"	m	struct:StatsFileReader
dtlb	dcache-amd-k8.h	/^    DTLB dtlb;$/;"	m	struct:CacheSubsystem::CacheHierarchy
dtlb	dcache-amd-k8.h	/^    struct dtlb { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::load
dtlb	dcache-amd-k8.h	/^    } dtlb;$/;"	m	struct:PerContextDataCacheStats::load	typeref:struct:PerContextDataCacheStats::load::dtlb
dtlb	dcache.h	/^    DTLB dtlb;$/;"	m	struct:CacheSubsystem::CacheHierarchy
dtlb	dcache.h	/^    struct dtlb { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::load
dtlb	dcache.h	/^    } dtlb;$/;"	m	struct:PerContextDataCacheStats::load	typeref:struct:PerContextDataCacheStats::load::dtlb
dtlbcheck	kernel.h	/^  bool dtlbcheck(void* page) const { return fastcheck(page, dtlbmap); }$/;"	f	class:AddressSpace
dtlbclear	kernel.h	/^  void dtlbclear(void* page) { make_page_inaccessible(page, dtlbmap); }$/;"	f	class:AddressSpace
dtlbmap	kernel.h	/^  spat_t dtlbmap;$/;"	m	class:AddressSpace
dtlbset	kernel.h	/^  void dtlbset(void* page) { make_page_accessible(page, dtlbmap); }$/;"	f	class:AddressSpace
dtlbsize	cpuid.cpp	/^  struct { W32 itlbsize:8, itlbways:8, dtlbsize:8, dtlbways:8; } fields;$/;"	m	struct:TLBInfo::__anon34	file:
dtlbways	cpuid.cpp	/^  struct { W32 itlbsize:8, itlbways:8, dtlbsize:8, dtlbways:8; } fields;$/;"	m	struct:TLBInfo::__anon34	file:
dummy	ptlxen.h	/^      int dummy;$/;"	m	struct:PTLsimHostCall::__anon99::__anon100
dummy0	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
dummymachine	ptlsim.cpp	/^PTLsimMachine dummymachine;$/;"	v
dump_at_end	ptlsim.h	/^  bool dump_at_end;$/;"	m	struct:PTLsimConfig
dump_smt_state	ooocore.cpp	/^void OutOfOrderCore::dump_smt_state(ostream& os) {$/;"	f	class:OutOfOrderCore
dump_smt_state	ooocore.cpp	/^void ThreadContext::dump_smt_state(ostream& os) {$/;"	f	class:ThreadContext
dump_state	ooocore.cpp	/^void OutOfOrderMachine::dump_state(ostream& os) {$/;"	f	class:OutOfOrderMachine
dump_state	ptlsim.cpp	/^void PTLsimMachine::dump_state(ostream& os) { return; }$/;"	f	class:PTLsimMachine
dump_state	seqcore.cpp	/^  virtual void dump_state(ostream& os) {$/;"	f	struct:SequentialMachine
dump_state_now	ptlsim.h	/^  bool dump_state_now;$/;"	m	struct:PTLsimConfig
dumpcode_filename	ptlsim.h	/^  stringbuf dumpcode_filename;$/;"	m	struct:PTLsimConfig
dup	decode.h	/^    static inline RIPVirtPhys dup(const RIPVirtPhys& key) { return key; }$/;"	f	struct:superstl::HashtableKeyManager
dup	superstl.h	/^    static inline W64 dup(W64 key) { return key; }$/;"	f	struct:superstl::HashtableKeyManager
dup	superstl.h	/^    static inline const char* dup(const char* key) {$/;"	f	struct:superstl::HashtableKeyManager
dupb	globals.h	/^static inline T dupb(const byte b) { return T(b) * T(0x0101010101010101ULL); }$/;"	f
dynamic	datastore.h	/^  W16 summable:1, histogramarray:1, identical_subtrees:1, dynamic:1, labeled_histogram:1;$/;"	m	struct:DataStoreNode
dynarray	superstl.h	/^    dynarray() {$/;"	f	class:superstl::dynarray
dynarray	superstl.h	/^    dynarray(int initcap, int g = 16) {$/;"	f	class:superstl::dynarray
dynarray	superstl.h	/^  class dynarray {$/;"	c	namespace:superstl
e	mathlib.cpp	/^    int e;        \/* floating point number, x: d[0] holds its sign (-1,0 or 1) *\/$/;"	m	struct:math::mpa::mp_no	file:
early_boot_log	ptlxen.cpp	/^void early_boot_log(const void* data, int length) {$/;"	f
early_boot_log_seqid	ptlxen.cpp	/^W64 early_boot_log_seqid = 0;$/;"	v
early_printk	kernel.cpp	/^void early_printk(const char* text) {$/;"	f
early_printk	klibc.cpp	/^static void early_printk(const char* str) {$/;"	f	file:
edge	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
efer	ptlhwdef.h	/^  EFER efer;$/;"	m	struct:ContextBase
eform	decode-core.cpp	/^bool DecodedOperand::eform(TraceDecoder& state, int bytemode) {$/;"	f	class:DecodedOperand
eip	ptlhwdef.h	/^      W32 eip;$/;"	m	struct:FXSAVEStruct::__anon120::__anon121
eip	ptlhwdef.h	/^  W32 eip;$/;"	m	struct:X87State
elemcount	superstl.h	/^    int elemcount;$/;"	m	struct:superstl::ChunkList
em	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
empty	logic.h	/^  bool empty() const {$/;"	f	struct:FixedQueue
empty	ooocore-amd-k8.h	/^    bool empty() const { return (!count); }$/;"	f	struct:OutOfOrderModel::IssueQueue
empty	ooocore.h	/^    bool empty() const { return (!count); }$/;"	f	struct:OutOfOrderModel::IssueQueue
empty	ptlsim.h	/^  bool empty() const {$/;"	f	struct:TransOpBuffer
empty	superstl.h	/^      bool empty() const { return freemap.allset(); }$/;"	f	struct:superstl::ChunkList::Chunk
empty	superstl.h	/^    bool empty() const { return (!count); }$/;"	f	struct:superstl::FixedKeyValueHashtable
empty	superstl.h	/^    bool empty() const { return (!count); }$/;"	f	struct:superstl::FixedValueHashtable
empty	superstl.h	/^    bool empty() const { return (count == 0); }$/;"	f	struct:superstl::stack
empty	superstl.h	/^    bool empty() const { return (next == this); }$/;"	f	class:superstl::queue
empty	superstl.h	/^    bool empty() const { return (size() == 0); }$/;"	f	class:superstl::stringbuf
empty	superstl.h	/^    bool empty() const { return (valid == 0); }$/;"	f	struct:superstl::SearchableChunkList16Entry
empty	superstl.h	/^    bool empty() const {$/;"	f	class:superstl::queuelink
empty	superstl.h	/^    bool empty() const {$/;"	f	class:superstl::selfqueuelink
empty	superstl.h	/^    bool empty() const {$/;"	f	struct:superstl::GenericChunkList
empty	superstl.h	/^    bool empty() { return (elemcount == 0); }$/;"	f	struct:superstl::ChunkList
empty	superstl.h	/^    bool empty(int qid) const {$/;"	f	struct:superstl::FixedIntegerQueueSet
empty	superstl.h	/^    inline bool empty() const { return (length == 0); }$/;"	f	class:superstl::dynarray
enable_breakout_insn	ptlxen.cpp	/^void enable_breakout_insn() {$/;"	f
enable_inline_mm_logging	mm.cpp	/^bool enable_inline_mm_logging = false;$/;"	v
enable_inline_mm_logging	ptlsim.h	/^  bool enable_inline_mm_logging;$/;"	m	struct:PTLsimConfig
enable_mm_validate	mm.cpp	/^bool enable_mm_validate = false;$/;"	v
enable_mm_validate	ptlsim.h	/^  bool enable_mm_validate;$/;"	m	struct:PTLsimConfig
enable_ptlsim_call_gate	kernel.cpp	/^void enable_ptlsim_call_gate() {$/;"	f
enabled	ptlstats.cpp	/^  bool enabled;$/;"	m	struct:LineAttributes	file:
enabled	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
end	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* end;$/;"	m	struct:OutOfOrderModel::EventLog
end	ooocore.h	/^    OutOfOrderCoreEvent* end;$/;"	m	struct:OutOfOrderModel::EventLog
end	ptlsim.h	/^  byte* end;$/;"	m	struct:AddrPair
end	seqcore.cpp	/^  SequentialCoreEvent* end;$/;"	m	struct:SequentialCoreEventLog	file:
end_code	kernel.h	/^  Waddr end_code;$/;"	m	class:AddressSpace
end_header_row	ptlstats.cpp	/^  virtual void end_header_row() {$/;"	f	class:LaTeXTableCreator
end_header_row	ptlstats.cpp	/^  virtual void end_header_row() {$/;"	f	class:TableCreator
end_of_block	decode.h	/^  bool end_of_block;$/;"	m	struct:TraceDecoder
end_row	ptlstats.cpp	/^  virtual void end_row() {$/;"	f	class:LaTeXTableCreator
end_row	ptlstats.cpp	/^  virtual void end_row() {$/;"	f	class:TableCreator
end_table	ptlstats.cpp	/^  virtual void end_table() { }$/;"	f	class:TableCreator
end_table	ptlstats.cpp	/^  virtual void end_table() {$/;"	f	class:LaTeXTableCreator
endaddrlink	mm.cpp	/^    selflistlink endaddrlink;$/;"	m	struct:ExtentAllocator::FreeExtentBase	file:
endaddrlink_to_self	mm.cpp	/^    static FreeExtent* endaddrlink_to_self(selflistlink* link) { return (link) ? (FreeExtent*)(link - 2) : null; }$/;"	f	struct:ExtentAllocator::FreeExtent
endidx	ooocore-amd-k8.h	/^        W16 endidx;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon52
endidx	ooocore.h	/^        W16 endidx;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon16
endl	superstl.h	/^  static const char endl[] = "\\n";$/;"	v
endpath	ptlstats.cpp	/^  void endpath() {$/;"	f	class:SVGCreator
enqueue	logic.h	/^  T* enqueue(const T& data) {$/;"	f	struct:FixedQueue
enqueue	ooocore-amd-k8.h	/^    selfqueuelink* enqueue(selfqueuelink* entry) {$/;"	f	struct:OutOfOrderModel::StateList
enqueue	ooocore.h	/^    selfqueuelink* enqueue(selfqueuelink* entry) {$/;"	f	struct:OutOfOrderModel::StateList
enqueue	superstl.h	/^    void enqueue(T* obj) { add_to_tail(obj); }$/;"	f	class:superstl::queue
enqueue_after	ooocore-amd-k8.h	/^    selfqueuelink* enqueue_after(selfqueuelink* entry, selfqueuelink* preventry) {$/;"	f	struct:OutOfOrderModel::StateList
enqueue_after	ooocore.h	/^    selfqueuelink* enqueue_after(selfqueuelink* entry, selfqueuelink* preventry) {$/;"	f	struct:OutOfOrderModel::StateList
enqueue_upcall	ptlmon.cpp	/^  W64 enqueue_upcall(const char* buf, size_t length) {$/;"	f	struct:XenController
enqueue_upcall_from_socket	ptlmon.cpp	/^  void enqueue_upcall_from_socket(int fd) {$/;"	f	struct:XenController
entry_number	kernel.cpp	/^  W32 entry_number;$/;"	m	struct:user_desc_32bit	file:
entry_t	superstl.h	/^    typedef ObjectHashtableEntry<K, T, KM> entry_t;$/;"	t	struct:superstl::Hashtable
entry_t	superstl.h	/^    typedef ObjectHashtableEntry<K, T, KM> entry_t;$/;"	t	struct:superstl::ObjectHashtableLinkManager
entry_valid	ooocore-amd-k8.h	/^    W8 store:1, lfence:1, sfence:1, entry_valid:1;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
entry_valid	ooocore-amd-k8.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
entry_valid	ooocore.h	/^    W8 store:1, lfence:1, sfence:1, entry_valid:1;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
entry_valid	ooocore.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
entrypoint	kernel.h	/^  Waddr entrypoint;$/;"	m	class:AddressSpace
environ	klibc.cpp	/^char** environ = null;$/;"	v
eom	ptlhwdef.h	/^  byte bytes:4, som:1, eom:1, is_sse:1, is_x87:1;$/;"	m	struct:TransOpBase
eomid	seqcore.cpp	/^  W32 eomid;$/;"	m	struct:SequentialCoreEvent	file:
eomidx	ooocore-amd-k8.h	/^        W16 eomidx;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon52
eomidx	ooocore.h	/^        W16 eomidx;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon16
eos	superstl.h	/^    int eos;$/;"	m	class:superstl::idstream
equal	decode.h	/^    static inline bool equal(const RIPVirtPhys& a, const RIPVirtPhys& b) { return (a == b); }$/;"	f	struct:superstl::HashtableKeyManager
equal	superstl.h	/^    static inline bool equal(W64 a, W64 b) { return (a == b); }$/;"	f	struct:superstl::HashtableKeyManager
equal	superstl.h	/^    static inline bool equal(const char* a, const char* b) {$/;"	f	struct:superstl::HashtableKeyManager
equalop	superstl.h	/^    bool equalop(const bitvecbase<0>&) const { return true; }$/;"	f	struct:superstl::bitvecbase
equalop	superstl.h	/^    bool equalop(const bitvecbase<1>& x) const { return w == x.w; }$/;"	f	struct:superstl::bitvecbase
equalop	superstl.h	/^    bool equalop(const bitvecbase<N>& x) const {$/;"	f	struct:superstl::bitvecbase
error	superstl.h	/^    int error;$/;"	m	class:superstl::idstream
error_code	ptlhwdef.h	/^  Waddr error_code;$/;"	m	struct:ContextBase
es	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
et	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
evaluate_cond	uopimpl.cpp	/^inline bool evaluate_cond(int ra, int rb) {$/;"	f
event	mm-private.h	/^  W8  event;$/;"	m	struct:MemoryManagerEvent
event	perfctrs.cpp	/^  W32 event;$/;"	m	struct:CounterConfig	file:
event	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
event_callback_rip	ptlhwdef.h	/^  Waddr event_callback_rip;$/;"	m	struct:ContextBase
event_log_enabled	ptlsim.h	/^  bool event_log_enabled;$/;"	m	struct:PTLsimConfig
event_log_ring_buffer_size	ptlsim.h	/^  W64 event_log_ring_buffer_size;$/;"	m	struct:PTLsimConfig
event_names	mm-private.h	/^static const char* event_names[PTL_MM_EVENT_COUNT] = {"alloc", "free ", "rec-s", "rec-c", "rec-e", "clnup", "init "};$/;"	v
event_trace_record_filename	ptlsim.h	/^  stringbuf event_trace_record_filename;$/;"	m	struct:PTLsimConfig
event_trace_record_stop	ptlsim.h	/^  bool event_trace_record_stop;$/;"	m	struct:PTLsimConfig
event_trace_replay_filename	ptlsim.h	/^  stringbuf event_trace_replay_filename;$/;"	m	struct:PTLsimConfig
event_upcall	ptlxen.cpp	/^bool Context::event_upcall() {$/;"	f	class:Context
eventlog	ooocore-amd-k8.h	/^    EventLog eventlog;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
eventlog	ooocore.h	/^    EventLog eventlog;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
eventlog	seqcore.cpp	/^static SequentialCoreEventLog eventlog;$/;"	v	file:
events_init	ptlxen-events.cpp	/^void events_init() {$/;"	f
events_per_cycle_threshold	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
evicted	dcache-amd-k8.h	/^    static void evicted(const V& line, W64 tag) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
evicted	dcache.h	/^    static void evicted(const V& line, W64 tag) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
evictmap	logic.h	/^  bitvec<size> evictmap;$/;"	m	struct:FullyAssociativeTagsNbitOneHot
evictmap	logic.h	/^  bitvec<ways> evictmap;$/;"	m	struct:FullyAssociativeTags
evictmap	logic.h	/^  bitvec<ways> evictmap;$/;"	m	struct:LockableFullyAssociativeTags
evtchn_get_status	ptlxen-events.cpp	/^evtchn_status_t evtchn_get_status(int port) {$/;"	f
evtchnfd	ptlmon.cpp	/^  int evtchnfd;$/;"	m	struct:XenController	file:
exception	ooocore-amd-k8.h	/^        W64 exception;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
exception	ooocore-amd-k8.h	/^        W64 exception;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
exception	ooocore-amd-k8.h	/^      W64 exception;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
exception	ooocore-amd-k8.h	/^      W64 exception;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
exception	ooocore.h	/^        W64 exception;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
exception	ooocore.h	/^        W64 exception;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
exception	ooocore.h	/^      W64 exception;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
exception	ooocore.h	/^      W64 exception;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
exception	ptlhwdef.h	/^  W64 exception;$/;"	m	struct:ContextBase
exception_name	ptlhwdef.h	/^static inline const char* exception_name(W64 exception) {$/;"	f
exception_names	ptlhwdef.cpp	/^const char* exception_names[EXCEPTION_COUNT] = {$/;"	v
execmap	kernel.h	/^  spat_t execmap;$/;"	m	class:AddressSpace
executable	stats.h	/^      char executable[128];$/;"	m	struct:PTLsimStats::simulator::run
executable_on_cluster_mask	ooocore-amd-k8.h	/^    W16  executable_on_cluster_mask;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
executable_on_cluster_mask	ooocore.h	/^    W16  executable_on_cluster_mask;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
execute	seqcore.cpp	/^  int execute() {$/;"	f	struct:SequentialCore
execute	seqcore.cpp	/^  int execute(BasicBlock* bb, W64 insnlimit) {$/;"	f	struct:SequentialCore
execute_in_place	seqcore.cpp	/^  int execute_in_place(W64 bbcount = limits<W64>::max, W64s insncount = limits<W64s>::max) {$/;"	f	struct:SequentialCore
execute_sequential	seqcore.cpp	/^int execute_sequential(Context& ctx, CommitRecord* cmtrec, W64 bbcount, W64 insncount) {$/;"	f
execute_transactional	seqcore.cpp	/^  int execute_transactional(W64 bbcount = limits<W64>::max, W64s insncount = limits<W64s>::max) {$/;"	f	struct:SequentialCore
exit_after_fullsim	ptlsim.h	/^  bool exit_after_fullsim;$/;"	m	struct:PTLsimConfig
exit_reason	seqcore.h	/^  int exit_reason;$/;"	m	struct:CommitRecord
exitlayer	ptlstats.cpp	/^  void exitlayer() {$/;"	f	class:SVGCreator
exp2	mathlib.cpp	/^  double exp2(double x) {$/;"	f	namespace:math
exp2_accuratetable	mathlib.cpp	/^  static const double exp2_accuratetable[512] = {$/;"	v	file:
exp2_deltatable	mathlib.cpp	/^  static const float exp2_deltatable[512] = {$/;"	v	file:
exp_op_mask	uopimpl.cpp	/^void exp_op_mask(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
exp_op_mov	uopimpl.cpp	/^inline void exp_op_mov(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
expand	superstl.h	/^    void expand() {$/;"	f	class:superstl::stringbuf
expand_command_list	config.cpp	/^void expand_command_list(dynarray<char*>& list, char* args, int depth) {$/;"	f
expand_command_list	config.cpp	/^void expand_command_list(dynarray<char*>& list, int argc, char** argv, int depth) {$/;"	f
expandword	superstl.h	/^  static inline W64s expandword(const byte*& p, int type) {$/;"	f	namespace:superstl
explog	mathlib.cpp	/^  namespace explog {$/;"	n	namespace:math	file:
exponent	globals.h	/^  struct { W64 mantissa:51, qnan:1, exponent:11, negative:1; } ieeenan;$/;"	m	struct:W64orDouble::__anon29
exponent	globals.h	/^  struct { W64 mantissa:52, exponent:11, negative:1; } ieee;$/;"	m	struct:W64orDouble::__anon28
exponent	mathlib.cpp	/^    W32 mantissa0:19, quiet_nan:1, exponent:11, negative:1;$/;"	m	struct:math::ieee754_double::__anon84	file:
exponent	mathlib.cpp	/^    W32 mantissa0:20, exponent:11, negative:1;$/;"	m	struct:math::ieee754_double::__anon83	file:
exponent	mathlib.cpp	/^  struct { W32 mantissa:22, quiet_nan:1, exponent:8, negative:1; } ieee_nan;$/;"	m	struct:math::ieee754_float::__anon82	file:
exponent	mathlib.cpp	/^  struct { W32 mantissa:23, exponent:8, negative:1; } ieee;$/;"	m	struct:math::ieee754_float::__anon81	file:
extbase	decode.h	/^  byte extbase:1, extindex:1, extreg:1, mode64:1, insnbits:4; $/;"	m	struct:RexByte
extent_count	mm.cpp	/^  int extent_count;$/;"	m	struct:ExtentAllocator	file:
extent_reclaim_reqs	mm.cpp	/^  W64 extent_reclaim_reqs;$/;"	m	struct:ExtentAllocator	file:
extent_size_to_slot	mm.cpp	/^  int extent_size_to_slot(size_t size) const {$/;"	f	struct:ExtentAllocator
extents_reclaimed	mm.cpp	/^  W64 extents_reclaimed;$/;"	m	struct:ExtentAllocator	file:
external	stats.h	/^  struct external {$/;"	s	struct:PTLsimStats
external	stats.h	/^  } external;$/;"	m	struct:PTLsimStats	typeref:struct:PTLsimStats::external
external_signal_callback	kernel.cpp	/^extern "C" void external_signal_callback(int sig, siginfo_t* si, void* contextp) {$/;"	f
external_to_core_state	ooopipe.cpp	/^void ThreadContext::external_to_core_state() {$/;"	f	class:ThreadContext
external_to_core_state	seqcore.cpp	/^  void external_to_core_state(const Context& ctx) {$/;"	f	struct:SequentialCore
extfamily	cpuid.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon32	file:
extfamily	decode-complex.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon70	file:
extindex	decode.h	/^  byte extbase:1, extindex:1, extreg:1, mode64:1, insnbits:4; $/;"	m	struct:RexByte
extmodel	cpuid.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon32	file:
extmodel	decode-complex.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon70	file:
extract	logic.h	/^  bitvec<size> extract(base_t tag) {$/;"	f	struct:FullyAssociativeTags16bit
extract	logic.h	/^  bitvec<size> extract(base_t tag) {$/;"	f	struct:FullyAssociativeTags8bit
extract	logic.h	/^  int extract(const vec_t target) {$/;"	f	struct:FullyAssociativeTags16bit
extract	logic.h	/^  int extract(const vec_t target) {$/;"	f	struct:FullyAssociativeTags8bit
extract	superstl.h	/^    bitvec<N> extract(size_t index, size_t count) const {$/;"	f	class:superstl::bitvec
extract_bytes	oooexec.cpp	/^static inline W64 extract_bytes(void* target, int SIZESHIFT, bool SIGNEXT) {$/;"	f	file:
extract_bytes	seqcore.cpp	/^  static inline W64 extract_bytes(void* target, int SIZESHIFT, bool SIGNEXT) {$/;"	f	struct:SequentialCore
extreg	decode.h	/^  byte extbase:1, extindex:1, extreg:1, mode64:1, insnbits:4; $/;"	m	struct:RexByte
extshift	ptlhwdef.h	/^  byte size:2, extshift:2, unaligned:1;$/;"	m	struct:TransOpBase
f	datastore.h	/^    double f;$/;"	m	union:DataStoreNode::DataType
f	globals.h	/^union W32orFloat { W32 w; float f; };$/;"	m	union:W32orFloat
f	mathlib.cpp	/^  float f;$/;"	m	union:math::ieee754_float	file:
f	ptlhwdef.h	/^  struct { float lo, hi; } f;$/;"	m	union:SSEType	typeref:struct:SSEType::__anon118
fabs	mathlib.h	/^  inline double fabs(double a) {$/;"	f	namespace:math
failsafe_callback_rip	ptlhwdef.h	/^  Waddr failsafe_callback_rip;$/;"	m	struct:ContextBase
failsafe_disables_events	ptlhwdef.h	/^  byte failsafe_disables_events;$/;"	m	struct:ContextBase
family	cpuid.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon32	file:
family	decode-complex.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon70	file:
farjump	kernel.cpp	/^  void farjump(FarJumpDescriptor& target) {$/;"	f	struct:SwitchToSimThunkCode
fast_length_decode_only	decode.h	/^  bool fast_length_decode_only;$/;"	m	struct:TraceDecoder
fast_validate	mm.cpp	/^  bool fast_validate() {$/;"	f	struct:ExtentAllocator
fastcheck	kernel.h	/^  bool fastcheck(Waddr addr, spat_t top) const {$/;"	f	class:AddressSpace
fastcheck	kernel.h	/^  bool fastcheck(void* addr, spat_t top) const {$/;"	f	class:AddressSpace
faultaddr	decode.h	/^  Waddr faultaddr;$/;"	m	struct:TraceDecoder
fcmpeqtol	globals.h	/^static inline bool fcmpeqtol(float a, float b) {$/;"	f
fd	kernel.cpp	/^  W32 fd;$/;"	m	struct:old_mmap32_arg_struct	file:
fd	ptlmon.cpp	/^  int fd;$/;"	m	struct:PendingRequest	file:
fd	superstl.h	/^    int fd;$/;"	m	class:superstl::idstream
fd	superstl.h	/^    int fd;$/;"	m	class:superstl::odstream
fence	ooocore-amd-k8.h	/^          W64 fence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
fence	ooocore-amd-k8.h	/^          W64 fence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
fence	ooocore-amd-k8.h	/^        W64 fence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
fence	ooocore-amd-k8.h	/^    struct fence { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache
fence	ooocore-amd-k8.h	/^    } fence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache	typeref:struct:PerContextOutOfOrderCoreStats::dcache::fence
fence	ooocore.h	/^          W64 fence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
fence	ooocore.h	/^          W64 fence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
fence	ooocore.h	/^        W64 fence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
fence	ooocore.h	/^    struct fence { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache
fence	ooocore.h	/^    } fence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache	typeref:struct:PerContextOutOfOrderCoreStats::dcache::fence
fencewakeup	oooexec.cpp	/^void ReorderBufferEntry::fencewakeup() {$/;"	f	class:ReorderBufferEntry
fetch	dcache-amd-k8.h	/^  struct fetch {$/;"	s	struct:PerContextDataCacheStats
fetch	dcache-amd-k8.h	/^  } fetch;$/;"	m	struct:PerContextDataCacheStats	typeref:struct:PerContextDataCacheStats::fetch
fetch	dcache.h	/^  struct fetch {$/;"	s	struct:PerContextDataCacheStats
fetch	dcache.h	/^  } fetch;$/;"	m	struct:PerContextDataCacheStats	typeref:struct:PerContextDataCacheStats::fetch
fetch	decode.h	/^  inline W64 fetch(int n) { W64 r = lowbits(*((W64*)&insnbytes[byteoffset]), n*8); rip += n; byteoffset += n; return r; }$/;"	f	struct:TraceDecoder
fetch	ooocore-amd-k8.h	/^      double fetch;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
fetch	ooocore-amd-k8.h	/^      } fetch;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon44
fetch	ooocore-amd-k8.h	/^  struct fetch {$/;"	s	struct:PerContextOutOfOrderCoreStats
fetch	ooocore-amd-k8.h	/^  } fetch;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::fetch
fetch	ooocore.h	/^      double fetch;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
fetch	ooocore.h	/^      } fetch;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon8
fetch	ooocore.h	/^  struct fetch {$/;"	s	struct:PerContextOutOfOrderCoreStats
fetch	ooocore.h	/^  } fetch;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::fetch
fetch	ooopipe.cpp	/^bool ThreadContext::fetch() {$/;"	f	class:ThreadContext
fetch1	decode.h	/^  inline byte fetch1() { byte r = *((byte*)&insnbytes[byteoffset]); rip += 1; byteoffset += 1; return r; }$/;"	f	struct:TraceDecoder
fetch2	decode.h	/^  inline W16 fetch2() { W16 r = *((W16*)&insnbytes[byteoffset]); rip += 2; byteoffset += 2; return r; }$/;"	f	struct:TraceDecoder
fetch4	decode.h	/^  inline W32 fetch4() { W32 r = *((W32*)&insnbytes[byteoffset]); rip += 4; byteoffset += 4; return r; }$/;"	f	struct:TraceDecoder
fetch8	decode.h	/^  inline W64 fetch8() { W64 r = *((W64*)&insnbytes[byteoffset]); rip += 8; byteoffset += 8; return r; }$/;"	f	struct:TraceDecoder
fetch_bb_address_ringbuf	ooopipe.cpp	/^static RIPVirtPhys fetch_bb_address_ringbuf[256];$/;"	v	file:
fetch_bb_address_ringbuf_head	ooopipe.cpp	/^static W64 fetch_bb_address_ringbuf_head = 0;$/;"	v	file:
fetch_blocks_fetched	seqcore.cpp	/^  W64 fetch_blocks_fetched;$/;"	m	struct:SequentialCore	file:
fetch_or_translate_basic_block	ooopipe.cpp	/^BasicBlock* ThreadContext::fetch_or_translate_basic_block(const RIPVirtPhys& rvp) {  $/;"	f	class:ThreadContext
fetch_or_translate_basic_block	seqcore.cpp	/^  BasicBlock* fetch_or_translate_basic_block(Waddr rip) {$/;"	f	struct:SequentialCore
fetch_uops_fetched	seqcore.cpp	/^  W64 fetch_uops_fetched;$/;"	m	struct:SequentialCore	file:
fetch_user_insns_fetched	seqcore.cpp	/^  W64 fetch_user_insns_fetched;$/;"	m	struct:SequentialCore	file:
fetch_uuid	ooocore-amd-k8.h	/^    W64 fetch_uuid;$/;"	m	struct:OutOfOrderModel::ThreadContext
fetch_uuid	ooocore.h	/^    W64 fetch_uuid;$/;"	m	struct:OutOfOrderModel::ThreadContext
fetchq	ooocore-amd-k8.h	/^    Queue<FetchBufferEntry, FETCH_QUEUE_SIZE> fetchq;$/;"	m	struct:OutOfOrderModel::ThreadContext
fetchq	ooocore.h	/^    Queue<FetchBufferEntry, FETCH_QUEUE_SIZE> fetchq;$/;"	m	struct:OutOfOrderModel::ThreadContext
fetchq_empty	ooocore-amd-k8.h	/^      W64 fetchq_empty;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
fetchq_empty	ooocore.h	/^      W64 fetchq_empty;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
fetchq_full	ooocore-amd-k8.h	/^      W64 fetchq_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
fetchq_full	ooocore.h	/^      W64 fetchq_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
fetchrip	ooocore-amd-k8.h	/^    RIPVirtPhys fetchrip;$/;"	m	struct:OutOfOrderModel::ThreadContext
fetchrip	ooocore.h	/^    RIPVirtPhys fetchrip;$/;"	m	struct:OutOfOrderModel::ThreadContext
ffxsr	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
fields	cpuid.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	union:ProcessorMiscInfo	typeref:struct:ProcessorMiscInfo::__anon33	file:
fields	cpuid.cpp	/^  struct { W32 itlbsize:8, itlbways:8, dtlbsize:8, dtlbways:8; } fields;$/;"	m	union:TLBInfo	typeref:struct:TLBInfo::__anon34	file:
fields	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:4, ways:4, size:16; } fields;$/;"	m	union:L2CacheInfo	typeref:struct:L2CacheInfo::__anon36	file:
fields	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:8, ways:8, size:8; } fields;$/;"	m	union:CacheInfo	typeref:struct:CacheInfo::__anon35	file:
fields	cpuid.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	union:ProcessorModelInfo	typeref:struct:ProcessorModelInfo::__anon32	file:
fields	decode-complex.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	union:ProcessorMiscInfo	typeref:struct:ProcessorMiscInfo::__anon71	file:
fields	decode-complex.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	union:ProcessorModelInfo	typeref:struct:ProcessorModelInfo::__anon70	file:
fields	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	union:MXCSR	typeref:struct:MXCSR::__anon30
fieldsize	config.h	/^  int fieldsize;$/;"	m	struct:ConfigurationOption
filehandle	superstl.h	/^    int filehandle() const { return fd; }$/;"	f	class:superstl::idstream
filehandle	superstl.h	/^    int filehandle() const {$/;"	f	class:superstl::odstream
fill	dcache-amd-k8.h	/^    void fill(W64 tag, const bitvec<linesize>& valid) { this->valid |= valid; }$/;"	f	struct:CacheSubsystem::CacheLineWithValidMask
fill	dcache-amd-k8.h	/^    void fill(W64 tag, const bitvec<linesize>& valid) { }$/;"	f	struct:CacheSubsystem::CacheLine
fill	dcache.h	/^    void fill(W64 tag, const bitvec<linesize>& valid) { this->valid |= valid; }$/;"	f	struct:CacheSubsystem::CacheLineWithValidMask
fill	dcache.h	/^    void fill(W64 tag, const bitvec<linesize>& valid) { }$/;"	f	struct:CacheSubsystem::CacheLine
fill	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* fill(int type) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* fill(int type, const FetchBufferEntry& uop) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* fill(int type, const RIPVirtPhys& rvp) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* fill(int type, const ReorderBufferEntry* rob) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill	ooocore.h	/^    OutOfOrderCoreEvent* fill(int type) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill	ooocore.h	/^    OutOfOrderCoreEvent* fill(int type, const FetchBufferEntry& uop) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill	ooocore.h	/^    OutOfOrderCoreEvent* fill(int type, const RIPVirtPhys& rvp) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill	ooocore.h	/^    OutOfOrderCoreEvent* fill(int type, const ReorderBufferEntry* rob) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill	ptlstats.cpp	/^  RGBA fill;$/;"	m	class:SVGCreator	file:
fill	ptlstats.cpp	/^  RGBAColor fill;$/;"	m	struct:LineAttributes	file:
fill	superstl.cpp	/^  void RandomNumberGenerator::fill(void* p, size_t count) {$/;"	f	class:superstl::RandomNumberGenerator
fill	superstl.h	/^    void fill(const T value) {$/;"	f	class:superstl::dynarray
fill	superstl.h	/^    void fill(const T& v) {$/;"	f	struct:superstl::array
fillL1	dcache-amd-k8.h	/^    byte fillL1:1, fillL2:1;$/;"	m	struct:CacheSubsystem::LoadFillReq
fillL1	dcache.h	/^    byte fillL1:1, fillL2:1;$/;"	m	struct:CacheSubsystem::LoadFillReq
fillL2	dcache-amd-k8.h	/^    byte fillL1:1, fillL2:1;$/;"	m	struct:CacheSubsystem::LoadFillReq
fillL2	dcache.h	/^    byte fillL1:1, fillL2:1;$/;"	m	struct:CacheSubsystem::LoadFillReq
fill_commit	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* fill_commit(int type, const ReorderBufferEntry* rob) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill_commit	ooocore.h	/^    OutOfOrderCoreEvent* fill_commit(int type, const ReorderBufferEntry* rob) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill_load_store	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* fill_load_store(int type, const ReorderBufferEntry* rob, LoadStoreQueueEntry* inherit_sfr, Waddr virtaddr) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill_load_store	ooocore.h	/^    OutOfOrderCoreEvent* fill_load_store(int type, const ReorderBufferEntry* rob, LoadStoreQueueEntry* inherit_sfr, Waddr virtaddr) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCoreEvent
fill_operand_info	ooocore.cpp	/^void PhysicalRegister::fill_operand_info(PhysicalRegisterOperandInfo& opinfo) {$/;"	f	class:PhysicalRegister
fillbuf	decode-core.cpp	/^int TraceDecoder::fillbuf(Context& ctx, byte* insnbytes, int insnbytes_bufsize) {$/;"	f	class:TraceDecoder
fillbuf	superstl.cpp	/^  int idstream::fillbuf() {$/;"	f	class:superstl::idstream
fillbuf_phys_prechecked	decode-core.cpp	/^int TraceDecoder::fillbuf_phys_prechecked(byte* insnbytes, int insnbytes_bufsize, Level1PTE ptelo, Level1PTE ptehi) {$/;"	f	class:TraceDecoder
filled	dcache-amd-k8.h	/^    static void filled(V& line, W64 tag) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
filled	dcache.h	/^    static void filled(V& line, W64 tag) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
filled	ptlstats.cpp	/^  bool filled;$/;"	m	class:SVGCreator	file:
filled	ptlstats.cpp	/^  bool filled;$/;"	m	struct:LineAttributes	file:
filltime	dcache-amd-k8.h	/^    W32 filltime;$/;"	m	struct:CacheSubsystem::CacheLine
filltime	dcache-amd-k8.h	/^    W32 filltime;$/;"	m	struct:CacheSubsystem::CacheLineWithValidMask
filltime	dcache.h	/^    W32 filltime;$/;"	m	struct:CacheSubsystem::CacheLine
filltime	dcache.h	/^    W32 filltime;$/;"	m	struct:CacheSubsystem::CacheLineWithValidMask
fillwith	globals.h	/^template <typename T> static inline void fillwith(T& x, byte v) { memset(&x, v, sizeof(T)); }$/;"	f
final_arch_in_insn	ptlhwdef.h	/^  byte final_insn_in_bb:1, final_arch_in_insn:1, final_flags_in_insn:1, any_flags_in_insn:1, pad:3, marked:1;$/;"	m	struct:TransOpBase
final_flags_in_insn	ptlhwdef.h	/^  byte final_insn_in_bb:1, final_arch_in_insn:1, final_flags_in_insn:1, any_flags_in_insn:1, pad:3, marked:1;$/;"	m	struct:TransOpBase
final_insn_in_bb	ptlhwdef.h	/^  byte final_insn_in_bb:1, final_arch_in_insn:1, final_flags_in_insn:1, any_flags_in_insn:1, pad:3, marked:1;$/;"	m	struct:TransOpBase
finalize	ptlstats.cpp	/^  void finalize() {$/;"	f	class:SVGCreator
find	dcache.cpp	/^int MissBuffer<SIZE>::find(W64 addr) {$/;"	f	class:MissBuffer
find_all_mappings_of_mfn	ptlxen-memory.cpp	/^void find_all_mappings_of_mfn(mfn_t mfn) {$/;"	f
find_auxv_entry	kernel.cpp	/^native_auxv_t* find_auxv_entry(int type) {$/;"	f
find_environ	kernel.cpp	/^char** find_environ(const byte* origargcv) {$/;"	f
find_extent_by_endaddr	mm.cpp	/^  FreeExtent* find_extent_by_endaddr(void* addr) const {$/;"	f	struct:ExtentAllocator
find_extent_by_startaddr	mm.cpp	/^  FreeExtent* find_extent_by_startaddr(void* addr) const {$/;"	f	struct:ExtentAllocator
find_extent_in_size_slot	mm.cpp	/^  FreeExtent* find_extent_in_size_slot(size_t size, int sizeslot) {$/;"	f	struct:ExtentAllocator
find_free_extent_of_size	mm.cpp	/^  FreeExtent* find_free_extent_of_size(size_t size) {$/;"	f	struct:ExtentAllocator
find_nearest_memory_fence	oooexec.cpp	/^LoadStoreQueueEntry* ReorderBufferEntry::find_nearest_memory_fence() {$/;"	f	class:ReorderBufferEntry
find_random_set_bit	ooopipe.cpp	/^static inline int find_random_set_bit(W32 v, int randsource) {$/;"	f	file:
find_sources	ooopipe.cpp	/^bool ReorderBufferEntry::find_sources() {$/;"	f	class:ReorderBufferEntry
finite	mathlib.h	/^	inline int finite(double x) {$/;"	f	namespace:math
finite	mathlib.h	106;"	d
finitef	mathlib.h	/^	inline int finitef(float x) {$/;"	f	namespace:math
finitef	mathlib.h	113;"	d
first_insn_in_bb	decode.h	/^  bool first_insn_in_bb() { return (Waddr(ripstart) == Waddr(bb.rip)); }$/;"	f	struct:TraceDecoder
first_time	ptlmon.cpp	/^  bool first_time;$/;"	m	struct:XenController	file:
first_time_calibration_after_boot	ptlxen-events.cpp	/^static bool first_time_calibration_after_boot = 1;$/;"	v	file:
first_uop_in_insn	decode.h	/^  bool first_uop_in_insn;$/;"	m	struct:TraceDecoder
fits_in_signed_16bit	globals.h	/^static inline bool fits_in_signed_16bit(W64s v) { return fits_in_signed_nbit(v, 16); }$/;"	f
fits_in_signed_32bit	globals.h	/^static inline bool fits_in_signed_32bit(W64s v) { return fits_in_signed_nbit(v, 32); }$/;"	f
fits_in_signed_8bit	globals.h	/^static inline bool fits_in_signed_8bit(W64s v) { return fits_in_signed_nbit(v, 8); }$/;"	f
fits_in_signed_nbit	globals.h	/^static inline bool fits_in_signed_nbit(W64s v, int b) {$/;"	f
fits_in_signed_nbit_tagged	globals.h	/^static inline bool fits_in_signed_nbit_tagged(W64s v, int b) {$/;"	f
fixup_guest_stack_selector	ptlxen.cpp	/^static inline W16 fixup_guest_stack_selector(W16 sel) {$/;"	f	file:
flagops	ptlhwdef.h	/^  W16 flagops;$/;"	m	struct:OpcodeInfo
flags	branchpred.h	/^  W32 ctxid:8, flags:8, bimodal:1, twolevel:1, meta:1, ras_push:1;$/;"	m	struct:PredictorUpdate
flags	kernel.cpp	/^  W32 flags;$/;"	m	struct:old_mmap32_arg_struct	file:
flags	kernel.cpp	/^  unsigned int flags;$/;"	m	struct:MemoryMapExtent	file:
flags	ooocore-amd-k8.h	/^        W16 flags;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon55
flags	ooocore-amd-k8.h	/^      W64 flags;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::renamed
flags	ooocore-amd-k8.h	/^    W16 flags;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
flags	ooocore-amd-k8.h	/^    W32 flags;$/;"	m	struct:OutOfOrderModel::StateList
flags	ooocore.h	/^        W16 flags;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon19
flags	ooocore.h	/^      W64 flags;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::renamed
flags	ooocore.h	/^    W16 flags;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
flags	ooocore.h	/^    W32 flags;$/;"	m	struct:OutOfOrderModel::StateList
flags	ptlhwdef.h	/^      W64 physaddr:48, flags:8, lfrqslot:8;$/;"	m	struct:IssueState::__anon114::__anon116
flagstring	ptlhwdef.h	/^  flagstring() { }$/;"	f	struct:flagstring
flagstring	ptlhwdef.h	/^  flagstring(const W64 bits) {$/;"	f	struct:flagstring
flagstring	ptlhwdef.h	/^struct flagstring {$/;"	s
flatten	ptlhwdef.h	/^  void flatten() {$/;"	f	struct:SegmentDescriptorCache
floatop	uopimpl.cpp	/^inline void floatop(IssueState& state, W64 raraw, W64 rbraw, W64 rcraw, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
floatstring	superstl.h	/^    floatstring() { }$/;"	f	struct:superstl::floatstring
floatstring	superstl.h	/^    floatstring(double value, int width = 0, int precision = 6) {$/;"	f	struct:superstl::floatstring
floatstring	superstl.h	/^  DeclareStringBufToStream(floatstring);$/;"	v
floatstring	superstl.h	/^  struct floatstring {$/;"	s	namespace:superstl
floor	globals.h	/^template <typename T, typename A> static inline T floor(T x, A a) { return (T)(((T)x) & ~((T)(a-1))); }$/;"	f
floor	mathlib.cpp	/^  double floor(double x) {$/;"	f	namespace:math
floorptr	globals.h	/^template <typename T, typename A> static inline T* floorptr(T* x, A a) { return (T*)floor((Waddr)x, a); }$/;"	f
flush	branchpred.cpp	/^void BranchPredictorInterface::flush() { }$/;"	f	class:BranchPredictorInterface
flush	datastore.cpp	/^void StatsFileWriter::flush() {$/;"	f	class:StatsFileWriter
flush	decode-core.cpp	/^bool TraceDecoder::flush() {$/;"	f	class:TraceDecoder
flush	decode-core.cpp	/^void BasicBlockCache::flush() {$/;"	f	class:BasicBlockCache
flush	logic.h	/^  void flush() {$/;"	f	struct:FixedQueue
flush	ooocore.cpp	/^void EventLog::flush(bool only_to_tail) {$/;"	f	class:EventLog
flush	ptlxen.h	/^      bool flush;$/;"	m	struct:PTLsimHostCall::__anon99::__anon104
flush	seqcore.cpp	/^void SequentialCoreEventLog::flush(bool only_to_tail) {$/;"	f	class:SequentialCoreEventLog
flush	superstl.cpp	/^  void odstream::flush() {$/;"	f	class:superstl::odstream
flush	superstl.h	/^  static class iosflush { } flush;$/;"	v	typeref:class:superstl::iosflush
flush_all	dcache-amd-k8.h	/^    int flush_all() {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
flush_all	dcache.h	/^    int flush_all() {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
flush_all_pipelines	ooocore.cpp	/^void OutOfOrderMachine::flush_all_pipelines() {$/;"	f	class:OutOfOrderMachine
flush_cache	ptlxen-memory.cpp	/^int flush_cache() {$/;"	f
flush_command_queue	ptlsim.h	/^  bool flush_command_queue;$/;"	m	struct:PTLsimConfig
flush_event_log_every_cycle	ptlsim.h	/^  bool flush_event_log_every_cycle;$/;"	m	struct:PTLsimConfig
flush_interval	ptlsim.h	/^  W64 flush_interval;$/;"	m	struct:PTLsimConfig
flush_mem_lock_release_list	ooopipe.cpp	/^void ThreadContext::flush_mem_lock_release_list(int start) {$/;"	f	class:ThreadContext
flush_pipeline	ooopipe.cpp	/^void ThreadContext::flush_pipeline() {$/;"	f	class:ThreadContext
flush_pipeline_all	ooopipe.cpp	/^void OutOfOrderCore::flush_pipeline_all() {$/;"	f	class:OutOfOrderCore
flush_stats	ptlsim.cpp	/^void flush_stats() {$/;"	f
flush_thread	dcache-amd-k8.h	/^    int flush_thread(W64 threadid) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
flush_thread	dcache.h	/^    int flush_thread(W64 threadid) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
flush_tlb	ooocore.cpp	/^void OutOfOrderCore::flush_tlb(Context& ctx, int threadid, bool selective, Waddr virtaddr) {$/;"	f	class:OutOfOrderCore
flush_tlb	ooocore.cpp	/^void OutOfOrderMachine::flush_tlb(Context& ctx) {$/;"	f	class:OutOfOrderMachine
flush_tlb	ptlsim.cpp	/^void PTLsimMachine::flush_tlb(Context& ctx) { return; }$/;"	f	class:PTLsimMachine
flush_tlb	ptlxen-memory.cpp	/^int flush_tlb() {$/;"	f
flush_tlb	ptlxen.cpp	/^void Context::flush_tlb(bool propagate_flush_to_model) {$/;"	f	class:Context
flush_tlb_virt	ooocore.cpp	/^void OutOfOrderMachine::flush_tlb_virt(Context& ctx, Waddr virtaddr) {$/;"	f	class:OutOfOrderMachine
flush_tlb_virt	ptlsim.cpp	/^void PTLsimMachine::flush_tlb_virt(Context& ctx, Waddr virtaddr) { return; }$/;"	f	class:PTLsimMachine
flush_tlb_virt	ptlxen.cpp	/^void Context::flush_tlb_virt(Waddr virtaddr, bool propagate_flush_to_model) {$/;"	f	class:Context
flush_upcall_queue	ptlmon.cpp	/^  W64 flush_upcall_queue(W64 uuidlimit = 0) {$/;"	f	struct:XenController
flush_upcall_queue	ptlxen.h	/^    } flush_upcall_queue;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon105
flush_virt	dcache-amd-k8.h	/^    int flush_virt(Waddr virtaddr, W64 threadid) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
flush_virt	dcache.h	/^    int flush_virt(Waddr virtaddr, W64 threadid) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
foldbits	globals.h	/^static inline T foldbits(T a) {$/;"	f
fontinfo	ptlstats.cpp	/^  char* fontinfo;$/;"	m	class:SVGCreator	file:
fop	ptlhwdef.h	/^  W16 fop;$/;"	m	struct:FXSAVEStruct
for_each_cluster	ooocore-amd-k8.h	1547;"	d
for_each_cluster	ooocore.h	1582;"	d
for_each_operand	ooocore-amd-k8.h	1548;"	d
for_each_operand	ooocore.h	1583;"	d
force_evtchn_callback	lowlevel-64bit-xen.S	/^#define force_evtchn_callback() ((void)HYPERVISOR_xen_version(0, 0))$/;"	d
force_evtchn_callback	ptlxen-events.cpp	/^void force_evtchn_callback() {$/;"	f
force_logging_enabled	ptlsim.cpp	/^void force_logging_enabled() {$/;"	f
force_native	ptlsim.h	/^  bool force_native;$/;"	m	struct:PTLsimConfig
force_page_fault_logging	ptlxen-memory.cpp	/^static const bool force_page_fault_logging = 0;$/;"	v	file:
force_readonly_physmap	ptlxen-memory.cpp	/^bool force_readonly_physmap = 0;$/;"	v
force_sum_of_subtrees_only	datastore.h	/^  int force_sum_of_subtrees_only:1, percent_of_toplevel:1, hide_zero_branches:1, cumulative_histogram:1, show_stars_in_histogram:1;$/;"	m	struct:DataStoreNodePrintSettings
force_synchronous_streams	superstl.cpp	/^bool force_synchronous_streams = false;$/;"	v
foreach	globals.h	186;"	d
foreach_backward	logic.h	87;"	d
foreach_backward_before	logic.h	93;"	d
foreach_backward_from	logic.h	90;"	d
foreach_forward	logic.h	78;"	d
foreach_forward_after	logic.h	84;"	d
foreach_forward_from	logic.h	81;"	d
foreach_issueq	ooocore-amd-k8.h	1512;"	d
foreach_issueq	ooocore.h	1536;"	d
foreach_issueq	ooocore.h	1563;"	d
foreach_list_mutable	ooocore-amd-k8.h	535;"	d
foreach_list_mutable	ooocore.h	551;"	d
foreach_list_mutable_linktype	ooocore-amd-k8.h	529;"	d
foreach_list_mutable_linktype	ooocore.h	545;"	d
foreachlink	superstl.h	2338;"	d
format_float	glibc.cpp	/^int format_float(char* buf, int bufsize, double v, int precision, int pad) {$/;"	f
format_float	klibc.cpp	/^int format_float(char* buf, int bufsize, double v, int precision, int pad) {$/;"	f
format_integer	superstl.cpp	/^int format_integer(char* buf, int bufsize, W64s v, int size, int flags, int base, int precision) {$/;"	f
format_number	superstl.cpp	/^char* format_number(char* buf, char* end, W64 num, int base, int size, int precision, int type) {$/;"	f
forward	ooocore-amd-k8.h	/^      struct forward { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load
forward	ooocore-amd-k8.h	/^      struct forward { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::store
forward	ooocore-amd-k8.h	/^      } forward;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::forward
forward	ooocore-amd-k8.h	/^      } forward;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store::forward
forward	ooocore.h	/^      struct forward { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load
forward	ooocore.h	/^      struct forward { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::store
forward	ooocore.h	/^      } forward;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::forward
forward	ooocore.h	/^      } forward;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store::forward
forward	oooexec.cpp	/^int ReorderBufferEntry::forward() {$/;"	f	class:ReorderBufferEntry
forward_at_cycle_lut	ooocore.cpp	/^  W32 forward_at_cycle_lut[MAX_CLUSTERS][MAX_FORWARDING_LATENCY+1];$/;"	v
forward_cycle	ooocore-amd-k8.h	/^        W8  forward_cycle;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
forward_cycle	ooocore-amd-k8.h	/^    W16s forward_cycle; \/\/ forwarding cycle after completion$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
forward_cycle	ooocore.h	/^        W8  forward_cycle;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
forward_cycle	ooocore.h	/^    W16s forward_cycle; \/\/ forwarding cycle after completion$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
forwarding	ooocore-amd-k8.h	/^      } forwarding;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
forwarding	ooocore.h	/^      } forwarding;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
fp	ooocore-amd-k8.h	/^      W64 fp[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::issue::width
fp	ooocore-amd-k8.h	/^      W64 fp[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::writeback::width
fp	ooocore-amd-k8.h	/^      W64 fp[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::dispatch::source
fp	ooocore-amd-k8.h	/^      W64 fp[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::issue::source
fp	ooocore.h	/^      W64 fp[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::issue::width
fp	ooocore.h	/^      W64 fp[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::writeback::width
fp	ooocore.h	/^      W64 fp[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::dispatch::source
fp	ooocore.h	/^      W64 fp[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::issue::source
fpclassify	mathlib.h	/^  inline int fpclassify(double x) {$/;"	f	namespace:math
fpclassify	mathlib.h	153;"	d
fpclassifyf	mathlib.h	/^  inline int fpclassifyf(float x) {$/;"	f	namespace:math
fpclassifyf	mathlib.h	171;"	d
fpcw	ptlhwdef.h	/^  X87ControlWord fpcw;$/;"	m	struct:ContextBase
fpregs	ptlhwdef.h	/^  X87RegPadded fpregs[8];$/;"	m	struct:FXSAVEStruct
fpstack	ptlhwdef.h	/^  W64 fpstack[8];$/;"	m	struct:ContextBase
fraction	superstl.h	/^    double fraction;$/;"	m	struct:superstl::percentstring
free	dcache-amd-k8.h	/^    void free(int lfrqslot) {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
free	dcache.h	/^    void free(int lfrqslot) {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
free	decode.h	/^    static inline void free(RIPVirtPhys& key) { }$/;"	f	struct:superstl::HashtableKeyManager
free	mm.cpp	/^  void free(void* p) {$/;"	f	struct:SlabAllocator
free	mm.cpp	/^  void free(void* p, size_t size) {$/;"	f	struct:ExtentAllocator
free	mm.cpp	/^asmlinkage void free(void* ptr) {$/;"	f
free	ooocore-amd-k8.h	/^      W64 free;$/;"	m	struct:OutOfOrderCoreStats::commit::freereg
free	ooocore-amd-k8.h	/^    void free() {      $/;"	f	struct:OutOfOrderModel::PhysicalRegister
free	ooocore.h	/^      W64 free;$/;"	m	struct:OutOfOrderCoreStats::commit::freereg
free	ooocore.h	/^    void free() {      $/;"	f	struct:OutOfOrderModel::PhysicalRegister
free	ptlhwdef.cpp	/^void BasicBlock::free() {$/;"	f	class:BasicBlock
free	superstl.h	/^    static inline void free(W64 key) { }$/;"	f	struct:superstl::HashtableKeyManager
free	superstl.h	/^    static inline void free(const char* key) {$/;"	f	struct:superstl::HashtableKeyManager
free	superstl.h	/^    void free(W64 index) {$/;"	f	struct:superstl::BitmapAllocator3Level
free_command_list	config.cpp	/^void free_command_list(dynarray<char*>& list) {$/;"	f
free_extent	mm.cpp	/^  void free_extent(FreeExtent* r, size_t size) {$/;"	f	struct:ExtentAllocator
free_extents_by_endaddr_hash	mm.cpp	/^  selflistlink* free_extents_by_endaddr_hash[HASHSLOTS];$/;"	m	struct:ExtentAllocator	file:
free_extents_by_size	mm.cpp	/^  selflistlink* free_extents_by_size[SIZESLOTS];$/;"	m	struct:ExtentAllocator	file:
free_extents_by_startaddr_hash	mm.cpp	/^  selflistlink* free_extents_by_startaddr_hash[HASHSLOTS];$/;"	m	struct:ExtentAllocator	file:
free_page_count	mm.cpp	/^  W16s free_page_count;$/;"	m	struct:SlabAllocator	file:
free_pages	mm.cpp	/^  PageHeader* free_pages;$/;"	m	struct:SlabAllocator	file:
free_regs_recycled	ooocore-amd-k8.h	/^    W64 free_regs_recycled;$/;"	m	struct:OutOfOrderCoreStats::commit
free_regs_recycled	ooocore.h	/^    W64 free_regs_recycled;$/;"	m	struct:OutOfOrderCoreStats::commit
free_shared_entry	ooocore-amd-k8.h	/^    bool free_shared_entry() {$/;"	f	struct:OutOfOrderModel::IssueQueue
free_shared_entry	ooocore.h	/^    bool free_shared_entry() {$/;"	f	struct:OutOfOrderModel::IssueQueue
freecount	mm.cpp	/^    W32s freecount;$/;"	m	struct:SlabAllocator::PageHeader	file:
freelist	mm.cpp	/^    FreeObjectHeader* freelist;$/;"	m	struct:SlabAllocator::PageHeader	file:
freemap	dcache-amd-k8.h	/^    bitvec<SIZE> freemap;$/;"	m	struct:CacheSubsystem::MissBuffer
freemap	dcache-amd-k8.h	/^    bitvec<size> freemap;                    \/\/ Slot is free$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
freemap	dcache.h	/^    bitvec<SIZE> freemap;$/;"	m	struct:CacheSubsystem::MissBuffer
freemap	dcache.h	/^    bitvec<size> freemap;                    \/\/ Slot is free$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
freemap	kernel.cpp	/^void AddressSpace::freemap(AddressSpace::spat_t top) {$/;"	f	class:AddressSpace
freemap	superstl.h	/^      bitvec<N> freemap;$/;"	m	struct:superstl::ChunkList::Chunk
freemem	globals.h	/^static inline void freemem(void* p) { free(p); }$/;"	f
freereg	ooocore-amd-k8.h	/^    struct freereg { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::commit
freereg	ooocore-amd-k8.h	/^    } freereg;$/;"	m	struct:OutOfOrderCoreStats::commit	typeref:struct:OutOfOrderCoreStats::commit::freereg
freereg	ooocore.h	/^    struct freereg { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::commit
freereg	ooocore.h	/^    } freereg;$/;"	m	struct:OutOfOrderCoreStats::commit	typeref:struct:OutOfOrderCoreStats::commit::freereg
frees	mm.cpp	/^  W64 frees;$/;"	m	struct:ExtentAllocator	file:
frees	mm.cpp	/^  W64 frees;$/;"	m	struct:SlabAllocator	file:
frees	ooocore-amd-k8.h	/^    W64 frees;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
frees	ooocore.h	/^    W64 frees;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
frontend	ooocore-amd-k8.h	/^      double frontend;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
frontend	ooocore-amd-k8.h	/^      } frontend;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon46
frontend	ooocore-amd-k8.h	/^  struct frontend {$/;"	s	struct:PerContextOutOfOrderCoreStats
frontend	ooocore-amd-k8.h	/^  } frontend;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::frontend
frontend	ooocore.h	/^      double frontend;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
frontend	ooocore.h	/^      } frontend;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon10
frontend	ooocore.h	/^  struct frontend {$/;"	s	struct:PerContextOutOfOrderCoreStats
frontend	ooocore.h	/^  } frontend;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::frontend
frontend	ooopipe.cpp	/^void ThreadContext::frontend() {$/;"	f	class:ThreadContext
fs_base	ptlhwdef.h	/^  Waddr fs_base;$/;"	m	struct:ContextBase
fsqrt	globals.h	/^static inline float fsqrt(float v) { return (float)math::sqrt(v); }$/;"	f
fu	ooocore-amd-k8.h	/^    W16  fu;       \/\/ Map of functional units on which this uop can issue$/;"	m	struct:OutOfOrderModel::FunctionalUnitInfo
fu	ooocore-amd-k8.h	/^    byte fu;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
fu	ooocore-amd-k8.h	/^    byte fu;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
fu	ooocore.h	/^    W16  fu;       \/\/ Map of functional units on which this uop can issue$/;"	m	struct:OutOfOrderModel::FunctionalUnitInfo
fu	ooocore.h	/^    byte fu;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
fu	ooocore.h	/^    byte fu;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
fu_avail	ooocore-amd-k8.h	/^        W32 fu_avail;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon49
fu_avail	ooocore-amd-k8.h	/^    W32 fu_avail;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
fu_avail	ooocore.h	/^        W32 fu_avail;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon13
fu_avail	ooocore.h	/^    W32 fu_avail;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
fu_mask	ooocore-amd-k8.h	/^    W32 fu_mask;$/;"	m	struct:OutOfOrderModel::Cluster
fu_mask	ooocore.h	/^    W32 fu_mask;$/;"	m	struct:OutOfOrderModel::Cluster
fu_names	ooocore-amd-k8.h	/^  const char* fu_names[FU_COUNT] = {$/;"	v
fu_names	ooocore.h	/^  const char* fu_names[FU_COUNT] = {$/;"	v
fuinfo	ooocore-amd-k8.h	/^  const FunctionalUnitInfo fuinfo[OP_MAX_OPCODE] = {$/;"	v
fuinfo	ooocore.h	/^  const FunctionalUnitInfo fuinfo[OP_MAX_OPCODE] = {$/;"	v
full	dcache-amd-k8.h	/^    bool full() const { return (!freemap); }$/;"	f	struct:CacheSubsystem::MissBuffer
full	dcache-amd-k8.h	/^    bool full() const {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
full	dcache.h	/^    bool full() const { return (!freemap); }$/;"	f	struct:CacheSubsystem::MissBuffer
full	dcache.h	/^    bool full() const {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
full	logic.h	/^  bool full() const {$/;"	f	struct:FixedQueue
full	ooocore-amd-k8.h	/^    bool full() const { return (!remaining()); }$/;"	f	struct:OutOfOrderModel::IssueQueue
full	ooocore.h	/^    bool full() const { return (!remaining()); }$/;"	f	struct:OutOfOrderModel::IssueQueue
full	superstl.h	/^      bool full() const { return (!freemap); }$/;"	f	struct:superstl::ChunkList::Chunk
full	superstl.h	/^    bool full() const { return (!remaining()); }$/;"	f	struct:superstl::FixedKeyValueHashtable
full	superstl.h	/^    bool full() const { return (!remaining()); }$/;"	f	struct:superstl::FixedValueHashtable
full	superstl.h	/^    bool full() const { return (count == size); }$/;"	f	struct:superstl::stack
full	superstl.h	/^    bool full() const { return (valid == bitmask(lengthof(list))); }$/;"	f	struct:superstl::SearchableChunkList16Entry
full_pages	mm.cpp	/^  PageHeader* full_pages;$/;"	m	struct:SlabAllocator	file:
full_validate	mm.cpp	/^  bool full_validate() {$/;"	f	struct:ExtentAllocator
full_width	ooocore-amd-k8.h	/^      W64 full_width;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
full_width	ooocore.h	/^      W64 full_width;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
function	uopimpl.cpp	793;"	d	file:
fxrstor	ptlhwdef.cpp	/^void Context::fxrstor(const FXSAVEStruct& state) {$/;"	f	class:Context
fxsave	ptlhwdef.cpp	/^void Context::fxsave(FXSAVEStruct& state) {$/;"	f	class:Context
fz	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
g	ptlhwdef.h	/^	W16 limit:4, avl:1, l:1, d:1, g:1, base2:8;$/;"	m	struct:SegmentDescriptor
g	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
g	ptlstats.cpp	/^  float g;$/;"	m	struct:RGBAColor	file:
g0	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
g1	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
g2	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
g3	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
gd	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
gdt_entry_valid	ptlxen.cpp	/^bool Context::gdt_entry_valid(W16 idx) {$/;"	f	class:Context
gdt_mfn	ptlxen.cpp	/^mfn_t gdt_mfn;$/;"	v
gdt_page	ptlxen.cpp	/^void* gdt_page;$/;"	v
gdtpages	ptlhwdef.h	/^  Waddr gdtpages[16];$/;"	m	struct:ContextBase
gdtsize	ptlhwdef.h	/^  W16 gdtsize;$/;"	m	struct:ContextBase
ge	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
genalloc	mm.cpp	/^ExtentAllocator<GEN_ALLOC_GRANULARITY, 4096, 2048> genalloc;$/;"	v
general_protection_entry	lowlevel-64bit-xen.S	/^general_protection_entry:$/;"	l
generate_struct_def	datastore.cpp	/^ostream& DataStoreNodeTemplate::generate_struct_def(ostream& os, int depth) const {$/;"	f	class:DataStoreNodeTemplate
generic_perfctr_names	perfctrs.cpp	/^static const char* generic_perfctr_names[GENERIC_PERFCTR_COUNT] = {$/;"	v	file:
get	datastore.cpp	/^DataStoreNode& DataStoreNode::get(const char* key) {$/;"	f	class:DataStoreNode
get	datastore.cpp	/^DataStoreNode* StatsFileReader::get(W64 uuid) {$/;"	f	class:StatsFileReader
get	datastore.cpp	/^DataStoreNode* StatsFileReader::get(const char* name) {$/;"	f	class:StatsFileReader
get	ptlsim.h	/^  bool get(TransOp& uop, uopimpl_func_t& synthop) {$/;"	f	struct:TransOpBuffer
get	superstl.h	/^    T* get() const {$/;"	f	struct:superstl::shortptr
get	superstl.h	/^    T* get(T obj) const {$/;"	f	struct:superstl::GenericChunkList
get	superstl.h	/^    T* get(const K& key) {$/;"	f	struct:superstl::Hashtable
get	superstl.h	/^    T* get(const K& key) {$/;"	f	struct:superstl::SelfHashtable
get	superstl.h	/^    T* get(const T& target) {$/;"	f	struct:superstl::SearchableChunkList16Entry
get	superstl.h	/^    Tdata get(Tkey key) const {$/;"	f	struct:superstl::FixedKeyValueHashtable
get_core_freq_hz	glibc.cpp	/^W64 get_core_freq_hz() {$/;"	f
get_core_freq_hz	kernel.cpp	/^W64 get_core_freq_hz() {$/;"	f
get_core_freq_hz	ptlxen-events.cpp	/^W64 get_core_freq_hz() {$/;"	f
get_core_freq_hz	ptlxen-events.cpp	/^W64 get_core_freq_hz(const vcpu_time_info_t& timeinfo) {$/;"	f
get_cpu_type	ptlxen-common.cpp	/^int get_cpu_type() {$/;"	f
get_cpu_type_name	ptlxen-common.cpp	/^const char* get_cpu_type_name(int cputype) {$/;"	f
get_cr3_mfn	ptlxen.h	/^static inline mfn_t get_cr3_mfn() {$/;"	f
get_eflags	ptlxen.h	/^static inline W32 get_eflags() {$/;"	f
get_fs_base	kernel.cpp	/^Waddr get_fs_base() {$/;"	f
get_full_exec_filename	kernel.cpp	/^const char* get_full_exec_filename() {$/;"	f
get_gdt_entry	ptlxen.cpp	/^SegmentDescriptor Context::get_gdt_entry(W16 idx) {$/;"	f	class:Context
get_gs_base	kernel.cpp	/^Waddr get_gs_base() {$/;"	f
get_lfrq_mb	dcache.cpp	/^int CacheHierarchy::get_lfrq_mb(int lfrqslot) const {$/;"	f	class:CacheHierarchy
get_lfrq_mb_state	dcache.cpp	/^int CacheHierarchy::get_lfrq_mb_state(int lfrqslot) const {$/;"	f	class:CacheHierarchy
get_operand_info	ooocore.cpp	/^stringbuf& ReorderBufferEntry::get_operand_info(stringbuf& sb, int operand) const {$/;"	f	class:ReorderBufferEntry
get_page_bb_count	decode-core.cpp	/^int BasicBlockCache::get_page_bb_count(Waddr mfn) {$/;"	f	class:BasicBlockCache
get_priority	ooocore.cpp	/^int ThreadContext::get_priority() const {$/;"	f	class:ThreadContext
get_ptl_pte	ptlxen.h	/^static inline Level1PTE& get_ptl_pte(void* virt) {$/;"	f
get_ready_to_issue_list	ooocore.cpp	/^StateList& ReorderBufferEntry::get_ready_to_issue_list() const {$/;"	f	class:ReorderBufferEntry
get_rsp	ptlxen.h	/^static inline void* get_rsp() {$/;"	f
get_sim_mfn_type	ptlxen.h	/^static inline int get_sim_mfn_type(W64 simmfn) {$/;"	f
get_sim_physaddr_type	ptlxen.h	/^static inline int get_sim_physaddr_type(W64 physaddr) {$/;"	f
get_stack_reqs_for_args_env_auxv	kernel.cpp	/^int get_stack_reqs_for_args_env_auxv(const byte* origargv) {$/;"	f
get_state_list	ooocore-amd-k8.h	/^    StateList& get_state_list() const { return get_state_list(this->state); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
get_state_list	ooocore.cpp	/^StateList& PhysicalRegister::get_state_list(int s) const {$/;"	f	class:PhysicalRegister
get_state_list	ooocore.h	/^    StateList& get_state_list() const { return get_state_list(this->state); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
get_synthcode_for_cond_branch	uopimpl.cpp	/^uopimpl_func_t get_synthcode_for_cond_branch(int opcode, int cond, int size, bool except) {$/;"	f
get_synthcode_for_uop	uopimpl.cpp	/^uopimpl_func_t get_synthcode_for_uop(int op, int size, bool setflags, int cond, int extshift, bool except, bool internal) {$/;"	f
get_sysenter_retaddr	kernel.cpp	/^W32 get_sysenter_retaddr(W32 end_of_sysenter_insn) {$/;"	f
get_tag	ooocore.cpp	/^issueq_tag_t ReorderBufferEntry::get_tag() {$/;"	f	class:ReorderBufferEntry
get_unaligned_hint	ooopipe.cpp	/^bool OutOfOrderCore::get_unaligned_hint(const RIPVirtPhysBase& rvp) const {$/;"	f	class:OutOfOrderCore
get_virtualized_tsc_bias	ptlxen-events.cpp	/^void get_virtualized_tsc_bias(int vcpuid, W64s& tsc_timestamp_bias, W64s& system_time_bias) {$/;"	f
getattr	kernel.cpp	/^int AddressSpace::getattr(void* addr) {$/;"	f	class:AddressSpace
getbase	mm.cpp	/^    FreeObjectHeader* getbase() const { return (FreeObjectHeader*)floor(Waddr(this), PAGE_SIZE); }$/;"	f	struct:SlabAllocator::PageHeader
getbase	ptlhwdef.h	/^  W64 getbase() const {$/;"	f	struct:SegmentDescriptor
getbootinfo	ptlxen.h	/^static inline void* getbootinfo() { return (void*)(Waddr)PTLSIM_BOOT_PAGE_VIRT_BASE; }$/;"	f
getc	superstl.cpp	/^  bool idstream::getc(char& c) {$/;"	f	class:superstl::idstream
getcaller	globals.h	51;"	d
getcontext	ptlmon.cpp	/^  int getcontext(int vcpu, Context& ctx) {$/;"	f	struct:XenController
getcore	ooocore-amd-k8.h	/^    OutOfOrderCore& getcore() const { return core; }$/;"	f	struct:OutOfOrderModel::ThreadContext
getcore	ooocore-amd-k8.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::IssueQueue
getcore	ooocore-amd-k8.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
getcore	ooocore-amd-k8.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
getcore	ooocore-amd-k8.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
getcore	ooocore-amd-k8.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
getcore	ooocore-amd-k8.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
getcore	ooocore.h	/^    OutOfOrderCore& getcore() const { return core; }$/;"	f	struct:OutOfOrderModel::ThreadContext
getcore	ooocore.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::IssueQueue
getcore	ooocore.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
getcore	ooocore.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
getcore	ooocore.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
getcore	ooocore.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
getcore	ooocore.h	/^    OutOfOrderCore& getcore() const { return coreof(coreid); }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
getcurrent	kernel.h	/^static inline ThreadState* getcurrent() {$/;"	f
getcurrent	ptlsim.cpp	/^PTLsimMachine* PTLsimMachine::getcurrent() {$/;"	f	class:PTLsimMachine
getdata	datastore.cpp	/^DataStoreNode::DataType DataStoreNode::getdata() const {$/;"	f	class:DataStoreNode
getdelta	datastore.cpp	/^DataStoreNode* StatsFileReader::getdelta(W64 uuid, W64 uuidsub) {$/;"	f	class:StatsFileReader
getdelta	datastore.cpp	/^DataStoreNode* StatsFileReader::getdelta(const char* name, const char* namesub) {$/;"	f	class:StatsFileReader
getentries	datastore.cpp	/^DataStoreNodeDirectory& DataStoreNode::getentries() const {$/;"	f	class:DataStoreNode
getentries	superstl.h	/^      int getentries(T* a, int limit) {$/;"	f	struct:superstl::ChunkList::Chunk
getentries	superstl.h	/^    dynarray< KeyValuePair<K, T> >& getentries(dynarray< KeyValuePair<K, T> >& a) {$/;"	f	struct:superstl::Hashtable
getentries	superstl.h	/^    dynarray<T*>& getentries(dynarray<T*>& a) {$/;"	f	struct:superstl::SelfHashtable
getentries	superstl.h	/^    int getentries(T* a, int limit) {$/;"	f	struct:superstl::ChunkList
getenv	klibc.cpp	/^char* getenv(const char* name) {$/;"	f
gethz	superstl.cpp	/^  double CycleTimer::gethz() {$/;"	f	class:superstl::CycleTimer
getlimit	ptlhwdef.h	/^  W64 getlimit() const {$/;"	f	struct:SegmentDescriptor
getmachine	ptlsim.cpp	/^PTLsimMachine* PTLsimMachine::getmachine(const char* name) {$/;"	f	class:PTLsimMachine
getreq	ptlxen-events.cpp	831;"	d	file:
getreq	ptlxen-memory.cpp	1605;"	d	file:
getreq	ptlxen.cpp	1100;"	d	file:
getthread	ooocore.cpp	/^ThreadContext& ReorderBufferEntry::getthread() const { return *getcore().threads[threadid]; }$/;"	f	class:ReorderBufferEntry
getvalid	logic.h	/^  W64 getvalid() { return valid.integer(); }$/;"	f	struct:FullyAssociativeTags16bit
getvalid	logic.h	/^  W64 getvalid() { return valid.integer(); }$/;"	f	struct:FullyAssociativeTags8bit
getword	superstl.h	/^    T getword(size_t index) const { return w[wordof(index)]; }$/;"	f	struct:superstl::bitvecbase
getword	superstl.h	/^    T getword(size_t) const { return w; }$/;"	f	struct:superstl::bitvecbase
getword	superstl.h	/^    T& getword(size_t index) { return w[wordof(index)]; }$/;"	f	struct:superstl::bitvecbase
getword	superstl.h	/^    T& getword(size_t) const { return *new T;  }$/;"	f	struct:superstl::bitvecbase
getword	superstl.h	/^    T& getword(size_t) { return w; }$/;"	f	struct:superstl::bitvecbase
gform	decode-core.cpp	/^bool DecodedOperand::gform(TraceDecoder& state, int bytemode) {$/;"	f	class:DecodedOperand
gform_ext	decode-core.cpp	/^bool DecodedOperand::gform_ext(TraceDecoder& state, int bytemode, int regfield, bool def64, bool in_rex_base) {$/;"	f	class:DecodedOperand
granularity	superstl.h	/^    size_t granularity;$/;"	m	class:superstl::dynarray
graph_clip_percentile	ptlstats.cpp	/^  double graph_clip_percentile;$/;"	m	struct:PTLstatsConfig	file:
graph_height	ptlstats.cpp	/^  double graph_height;$/;"	m	struct:PTLstatsConfig	file:
graph_logk	ptlstats.cpp	/^  double graph_logk;$/;"	m	struct:PTLstatsConfig	file:
graph_logscale	ptlstats.cpp	/^  W64 graph_logscale;$/;"	m	struct:PTLstatsConfig	file:
graph_stacked	ptlstats.cpp	/^  bool graph_stacked;$/;"	m	struct:PTLstatsConfig	file:
graph_title	ptlstats.cpp	/^  stringbuf graph_title;$/;"	m	struct:PTLstatsConfig	file:
graph_width	ptlstats.cpp	/^  double graph_width;$/;"	m	struct:PTLstatsConfig	file:
gs_base_kernel	ptlhwdef.h	/^  Waddr gs_base_kernel;$/;"	m	struct:ContextBase
gs_base_user	ptlhwdef.h	/^  Waddr gs_base_user;$/;"	m	struct:ContextBase
guest_hypercall_histogram	ptlxen.cpp	/^W64 guest_hypercall_histogram[64];$/;"	v
handle_barrier	ooocore.cpp	/^bool ThreadContext::handle_barrier() {$/;"	f	class:ThreadContext
handle_barrier	seqcore.cpp	/^  bool handle_barrier() {$/;"	f	struct:SequentialCore
handle_common_exceptions	seqcore.cpp	/^  int handle_common_exceptions(const TransOp& uop, SFR& state, Waddr& origaddr, Waddr& addr, int& exception, PageFaultErrorCode& pfec, Level1PTE& pteused) {$/;"	f	struct:SequentialCore
handle_common_load_store_exceptions	oooexec.cpp	/^bool ReorderBufferEntry::handle_common_load_store_exceptions(LoadStoreQueueEntry& state, Waddr& origaddr, Waddr& addr, int& exception, PageFaultErrorCode& pfec) {$/;"	f	class:ReorderBufferEntry
handle_config_change	ptlsim.cpp	/^bool handle_config_change(PTLsimConfig& config, int argc, char** argv) {$/;"	f
handle_event	ptlxen-events.cpp	/^void handle_event(int port, int vcpu) {$/;"	f
handle_event_channel_op_hypercall	ptlxen-events.cpp	/^W64 handle_event_channel_op_hypercall(Context& ctx, int op, void* arg, bool debug = 0) {$/;"	f
handle_exception	ooocore.cpp	/^bool ThreadContext::handle_exception() {$/;"	f	class:ThreadContext
handle_exception	seqcore.cpp	/^  bool handle_exception() {$/;"	f	struct:SequentialCore
handle_forced_upcall	ptlxen.cpp	/^W64 handle_forced_upcall(PTLsimConfig& config, char* reqstr) {$/;"	f
handle_grant_table_op_hypercall	ptlxen-memory.cpp	/^W64 handle_grant_table_op_hypercall(Context& ctx, W64 cmd, byte* arg, W64 count, bool debug) {$/;"	f
handle_interrupt	ooocore.cpp	/^bool ThreadContext::handle_interrupt() {$/;"	f	class:ThreadContext
handle_interrupt	seqcore.cpp	/^  bool handle_interrupt() {$/;"	f	struct:SequentialCore
handle_interrupt_at_next_eom	ooocore-amd-k8.h	/^    bool handle_interrupt_at_next_eom;$/;"	m	struct:OutOfOrderModel::ThreadContext
handle_interrupt_at_next_eom	ooocore.h	/^    bool handle_interrupt_at_next_eom;$/;"	m	struct:OutOfOrderModel::ThreadContext
handle_invalid_opcode	ptlcalls.h	/^static inline void handle_invalid_opcode(int sig, siginfo_t* si, void* contextp) {$/;"	f
handle_memory_op_hypercall	ptlxen-memory.cpp	/^W64 handle_memory_op_hypercall(Context& ctx, W64 op, void* arg, bool debug) {$/;"	f
handle_mmu_update_hypercall	ptlxen-memory.cpp	/^W64 handle_mmu_update_hypercall(Context& ctx, mmu_update_t* reqp, W64 count, int* total_updates_ptr, domid_t domain, bool debug) {$/;"	f
handle_mmuext_op_hypercall	ptlxen-memory.cpp	/^W64 handle_mmuext_op_hypercall(Context& ctx, mmuext_op_t* reqp, W64 count, int* total_updates_ptr, domid_t domain, bool debug) {$/;"	f
handle_ptlcall	kernel.cpp	/^W64 handle_ptlcall(W64 rip, W64 callid, W64 arg1, W64 arg2, W64 arg3, W64 arg4, W64 arg5) {$/;"	f
handle_sched_op_hypercall	ptlxen-events.cpp	/^W64 handle_sched_op_hypercall(Context& ctx, W64 op, void* arg, bool debug) {$/;"	f
handle_set_timer_op_hypercall	ptlxen-events.cpp	/^W64 handle_set_timer_op_hypercall(Context& ctx, W64 timeout, bool debug) {$/;"	f
handle_syscall_32bit	kernel.cpp	/^void handle_syscall_32bit(int semantics) {$/;"	f
handle_syscall_64bit	kernel.cpp	/^void handle_syscall_64bit() {$/;"	f
handle_syscall_assist	ptlxen.cpp	/^void handle_syscall_assist(Context& ctx) {$/;"	f
handle_upcall	ptlxen.cpp	/^W64 handle_upcall(PTLsimConfig& config, bool blocking = true) {$/;"	f
handle_upcall_nonblocking	ptlxen.cpp	/^W64 handle_upcall_nonblocking(PTLsimConfig& config) {$/;"	f
handle_update_va_mapping_hypercall	ptlxen-memory.cpp	/^W64 handle_update_va_mapping_hypercall(Context& ctx, W64 va, Level1PTE newpte, W64 flags, bool debug) {$/;"	f
handle_vcpu_op_hypercall	ptlxen-events.cpp	/^W64 handle_vcpu_op_hypercall(Context& ctx, W64 arg1, W64 arg2, W64 arg3, bool debug) {$/;"	f
handle_xen_hypercall	ptlxen.cpp	/^int handle_xen_hypercall(Context& ctx, int hypercallid, W64 arg1, W64 arg2, W64 arg3, W64 arg4, W64 arg5, W64 arg6) {$/;"	f
handle_xen_hypercall_assist	ptlxen.cpp	/^void handle_xen_hypercall_assist(Context& ctx) {$/;"	f
hash	branchpred.cpp	/^  inline int hash(W64 branchaddr) {$/;"	f	struct:BimodalPredictor
hash	decode.h	/^    static inline int hash(const RIPVirtPhys& key) {$/;"	f	struct:superstl::HashtableKeyManager
hash	superstl.h	/^    static inline int hash(W64 key) {$/;"	f	struct:superstl::HashtableKeyManager
hash	superstl.h	/^    static inline int hash(const char* key) {$/;"	f	struct:superstl::HashtableKeyManager
hash_t	datastore.h	/^  typedef Hashtable<const char*, DataStoreNode*, 16> hash_t;$/;"	t	struct:DataStoreNode
hash_unaligned_predictor_slot	ooopipe.cpp	/^int OutOfOrderCore::hash_unaligned_predictor_slot(const RIPVirtPhysBase& rvp) {$/;"	f	class:OutOfOrderCore
hashlink	datastore.h	/^  selflistlink hashlink;$/;"	m	struct:DataStoreNode
hashlink	ptlhwdef.h	/^  selflistlink hashlink;$/;"	m	struct:BasicBlockBase
hashlink	ptlhwdef.h	/^  selflistlink hashlink;$/;"	m	struct:BasicBlockChunkList
hashlink	superstl.h	/^    selflistlink hashlink;$/;"	m	struct:superstl::ObjectHashtableEntry
head	logic.h	/^  int head; \/\/ used for allocation$/;"	m	struct:FixedQueue
head	superstl.h	/^    T* head() const {$/;"	f	class:superstl::queue
head	superstl.h	/^    int head;$/;"	m	class:superstl::idstream
head	superstl.h	/^    queuelink<T>* head() const {$/;"	f	class:superstl::queuelink
head	superstl.h	/^    selflistlink* head;$/;"	m	struct:superstl::ChunkList
head	superstl.h	/^    selfqueuelink* head() const {$/;"	f	class:superstl::selfqueuelink
header	datastore.h	/^  StatsFileHeader header;$/;"	m	struct:StatsFileReader
header	datastore.h	/^  StatsFileHeader header;$/;"	m	struct:StatsFileWriter
headerof	mm.cpp	/^    static PageHeader* headerof(void* p) {$/;"	f	struct:SlabAllocator::PageHeader
heads	superstl.h	/^    T heads[Q];$/;"	m	struct:superstl::FixedIntegerQueueSet
heap_end	ptlxen.h	/^  byte* heap_end;$/;"	m	struct:PTLsimMonitorInfo
heap_start	ptlxen.h	/^  byte* heap_start;$/;"	m	struct:PTLsimMonitorInfo
hexstring	superstl.h	/^    hexstring() { }$/;"	f	struct:superstl::hexstring
hexstring	superstl.h	/^    hexstring(const W64 value, const int n) {$/;"	f	struct:superstl::hexstring
hexstring	superstl.h	/^  DeclareStringBufToStream(hexstring);$/;"	v
hexstring	superstl.h	/^  struct hexstring {$/;"	s	namespace:superstl
hi	globals.h	/^  struct { W32 lo; W32s hi; } hilo;$/;"	m	struct:W64orDouble::__anon27
hi	ptlhwdef.h	/^  W64 lo, hi;$/;"	m	struct:XMMReg
hi	ptlhwdef.h	/^  struct { W32 lo, hi; } w32;$/;"	m	struct:SSEType::__anon119
hi	ptlhwdef.h	/^  struct { float lo, hi; } f;$/;"	m	struct:SSEType::__anon118
hi	superstl.cpp	/^    W64 hi;$/;"	m	struct:superstl::W128	file:
hi	superstl.cpp	/^    W64s hi;$/;"	m	struct:superstl::W128s	file:
hi	superstl.h	/^    T lo, hi;$/;"	m	struct:superstl::range
hibyte	decode.h	/^  W32 sizeshift:3, hibyte:1;$/;"	m	struct:ArchPseudoRegInfo
hide_zero_branches	datastore.h	/^  int force_sum_of_subtrees_only:1, percent_of_toplevel:1, hide_zero_branches:1, cumulative_histogram:1, show_stars_in_histogram:1;$/;"	m	struct:DataStoreNodePrintSettings
hide_zero_branches	ptlstats.cpp	/^  bool hide_zero_branches;$/;"	m	struct:PTLstatsConfig	file:
hierarchy	dcache-amd-k8.h	/^    CacheHierarchy& hierarchy;$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
hierarchy	dcache-amd-k8.h	/^    CacheHierarchy& hierarchy;$/;"	m	struct:CacheSubsystem::MissBuffer
hierarchy	dcache.h	/^    CacheHierarchy& hierarchy;$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
hierarchy	dcache.h	/^    CacheHierarchy& hierarchy;$/;"	m	struct:CacheSubsystem::MissBuffer
highest_count	superstl.h	/^    int highest_count;$/;"	m	struct:superstl::BitmapAllocator3Level
hilo	globals.h	/^  struct { W32 lo; W32s hi; } hilo;$/;"	m	union:W64orDouble	typeref:struct:W64orDouble::__anon27
hilo	superstl.h	/^    hilo() { }$/;"	f	struct:superstl::hilo
hilo	superstl.h	/^    hilo(const bitvec<N>& b_, int bitcount_ = N): b(b_), bitcount(bitcount_) { }$/;"	f	struct:superstl::hilo
hilo	superstl.h	/^  DeclareStringBufToStream(hilo<N>);$/;"	v
hilo	superstl.h	/^  struct hilo {$/;"	s	namespace:superstl
histogram	datastore.cpp	/^DataStoreNode& DataStoreNode::histogram(const char* key, const W64* value, int count, W64s histomin, W64s histomax, W64s histostride) {$/;"	f	class:DataStoreNode
histogram	datastore.cpp	/^DataStoreNode& DataStoreNode::histogram(const char* key, const char** names, const W64* values, int count) {$/;"	f	class:DataStoreNode
histogram	datastore.h	/^  DataStoreNode& histogram(const char* key, const W64* value, int count) {$/;"	f	struct:DataStoreNode
histogram	datastore.h	/^  DataStoreNodeTemplate& histogram(const char* key, int count, W64 histomin, W64 histomax, W64 histostride, const char** names = null) {$/;"	f	struct:DataStoreNodeTemplate
histogram	datastore.h	/^  DataStoreNodeTemplate& histogram(const char* key, int count, const char** names = null) {$/;"	f	struct:DataStoreNodeTemplate
histogram_thresh	datastore.h	/^  float histogram_thresh;$/;"	m	struct:DataStoreNodePrintSettings
histogram_thresh	ptlstats.cpp	/^  double histogram_thresh;$/;"	m	struct:PTLstatsConfig	file:
histogramarray	datastore.cpp	/^  W16 isarray:1, summable:1, histogramarray:1, identical_subtrees:1, labeled_histogram:1;$/;"	m	struct:DataStoreNodeHeader	file:
histogramarray	datastore.h	/^  W16 summable:1, histogramarray:1, identical_subtrees:1, dynamic:1, labeled_histogram:1;$/;"	m	struct:DataStoreNode
histogramarray	datastore.h	/^  W32 histogramarray:1, labeled_histogram:1, summable:1, identical_subtrees:1;$/;"	m	struct:DataStoreNodeTemplateBase
histomax	datastore.cpp	/^  W64 histomax;$/;"	m	struct:DataStoreNodeArrayHeader	file:
histomax	datastore.h	/^  W64 histomax;       \/\/ maxslot$/;"	m	struct:DataStoreNode
histomax	datastore.h	/^  W64 histomax;       \/\/ maxslot$/;"	m	struct:DataStoreNodeTemplateBase
histomin	datastore.cpp	/^  W64 histomin;$/;"	m	struct:DataStoreNodeArrayHeader	file:
histomin	datastore.h	/^  W64 histomin;       \/\/ minslot$/;"	m	struct:DataStoreNode
histomin	datastore.h	/^  W64 histomin;       \/\/ minslot$/;"	m	struct:DataStoreNodeTemplateBase
histostride	datastore.cpp	/^  W64 histostride;$/;"	m	struct:DataStoreNodeArrayHeader	file:
histostride	datastore.h	/^  W64 histostride;    \/\/ real units per histogram slot$/;"	m	struct:DataStoreNode
histostride	datastore.h	/^  W64 histostride;    \/\/ real units per histogram slot$/;"	m	struct:DataStoreNodeTemplateBase
hit	dcache-amd-k8.h	/^    struct hit { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::fetch
hit	dcache-amd-k8.h	/^    struct hit { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::load
hit	dcache-amd-k8.h	/^    } hit;$/;"	m	struct:PerContextDataCacheStats::fetch	typeref:struct:PerContextDataCacheStats::fetch::hit
hit	dcache-amd-k8.h	/^    } hit;$/;"	m	struct:PerContextDataCacheStats::load	typeref:struct:PerContextDataCacheStats::load::hit
hit	dcache.h	/^    struct hit { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::fetch
hit	dcache.h	/^    struct hit { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::load
hit	dcache.h	/^    } hit;$/;"	m	struct:PerContextDataCacheStats::fetch	typeref:struct:PerContextDataCacheStats::fetch::hit
hit	dcache.h	/^    } hit;$/;"	m	struct:PerContextDataCacheStats::load	typeref:struct:PerContextDataCacheStats::load::hit
hitcount	dcache-amd-k8.h	/^    W32 hitcount;$/;"	m	struct:CacheSubsystem::CacheLine
hitcount	dcache-amd-k8.h	/^    W32 hitcount;$/;"	m	struct:CacheSubsystem::CacheLineWithValidMask
hitcount	dcache.h	/^    W32 hitcount;$/;"	m	struct:CacheSubsystem::CacheLine
hitcount	dcache.h	/^    W32 hitcount;$/;"	m	struct:CacheSubsystem::CacheLineWithValidMask
hitcount	ptlhwdef.h	/^  W32 hitcount;$/;"	m	struct:BasicBlockBase
hits	dcache-amd-k8.h	/^      W64 hits;$/;"	m	struct:PerContextDataCacheStats::fetch::itlb
hits	dcache-amd-k8.h	/^      W64 hits;$/;"	m	struct:PerContextDataCacheStats::load::dtlb
hits	dcache.h	/^      W64 hits;$/;"	m	struct:PerContextDataCacheStats::fetch::itlb
hits	dcache.h	/^      W64 hits;$/;"	m	struct:PerContextDataCacheStats::load::dtlb
hiword	superstl.h	/^    T hiword() const { return 0; }$/;"	f	struct:superstl::bitvecbase
hiword	superstl.h	/^    T hiword() const { return w; }$/;"	f	struct:superstl::bitvecbase
hiword	superstl.h	/^    T hiword() const { return w[N - 1]; }$/;"	f	struct:superstl::bitvecbase
hiword	superstl.h	/^    T& hiword() { return w; }$/;"	f	struct:superstl::bitvecbase
hiword	superstl.h	/^    T& hiword() { return w[N - 1]; }$/;"	f	struct:superstl::bitvecbase
host_mfn_to_sim_mfn	ptlxen-memory.cpp	/^W64 host_mfn_to_sim_mfn(W64 hostmfn) {$/;"	f
host_physaddr_to_sim_physaddr	ptlxen.h	/^static inline Waddr host_physaddr_to_sim_physaddr(Waddr hostphys) {$/;"	f
hostcall_port	ptlxen.h	/^  W16 hostcall_port;$/;"	m	struct:PTLsimMonitorInfo
hostname	stats.h	/^      char hostname[64];$/;"	m	struct:PTLsimStats::simulator::run
hostreq	ptlxen.h	/^  PTLsimHostCall hostreq;$/;"	m	struct:PTLsimMonitorInfo
hostreq_calls	ptlxen.cpp	/^W64 hostreq_calls = 0;$/;"	v
hostreq_spinlock	ptlxen.h	/^  Spinlock hostreq_spinlock;$/;"	m	struct:PTLsimMonitorInfo
hostreq_spins	ptlxen.cpp	/^W64 hostreq_spins = 0;$/;"	v
hp	mathlib.cpp	/^  static const mp_no hp = {1,{1.0, 1.0,$/;"	v	file:
hp0	mathlib.cpp	/^  static const mynumber   hp0 = {{0x54442D18, 0x3FF921FB}};  \/* 1.5707963267948966     *\/$/;"	v	file:
hp0	mathlib.cpp	/^  static const mynumber hp0 = {{0x54442D18, 0x3FF921FB }};\/*  1.5707963267948966      *\/$/;"	v	file:
hp0	mathlib.cpp	/^  static const mynumber hp0 = {{0x54442D18, 0x3FF921FB}}; \/* PI \/ 2                 *\/$/;"	v	file:
hp1	mathlib.cpp	/^  static const mynumber   hp1 = {{0x33145C07, 0x3C91A626}};  \/* 6.123233995736766e-17  *\/$/;"	v	file:
hp1	mathlib.cpp	/^  static const mynumber hp1 = {{0x33145C07, 0x3C91A626 }};\/*  6.123233995736766e-17   *\/$/;"	v	file:
hp1	mathlib.cpp	/^  static const mynumber hp1 = {{0x33145C07, 0x3C91A626}}; \/* 6.123233995736766e-17  *\/$/;"	v	file:
hpinv	mathlib.cpp	/^  static const mynumber hpinv = {{0x6DC9C883, 0x3FE45F30 }};\/*  0.63661977236758138     *\/$/;"	v	file:
hpinv	mathlib.cpp	/^  static const number hpinv = {{0x6DC9C883, 0x3FE45F30}}; \/*  0.63661977236758138    *\/$/;"	v	file:
ht	superstl.h	/^      SelfHashtable<K, T, setcount, LM, KM>* ht;$/;"	m	struct:superstl::SelfHashtable::Iterator
huge	mathlib.cpp	/^  static const double huge = 1.0e+300;$/;"	v	file:
hypercall_names	ptlxen.cpp	/^static const char* hypercall_names[] = {$/;"	v	file:
hypercall_page	lowlevel-64bit-xen.S	/^hypercall_page:$/;"	l
hypervisor_version	stats.h	/^      char hypervisor_version[32];$/;"	m	struct:PTLsimStats::simulator::run
hz	superstl.cpp	/^  double CycleTimer::hz = 0;$/;"	m	class:superstl::CycleTimer	file:
hz	superstl.h	/^    static double hz;$/;"	m	class:superstl::CycleTimer
i	mathlib.cpp	/^    int4 i[2];$/;"	m	union:math::__anon76	file:
i	mathlib.cpp	/^  typedef union { int i[2]; double d; } number;$/;"	m	union:math::mpa::__anon80	file:
i	mathlib.cpp	/^static const union { int4 i[880]; double x[440]; } sincos = { {$/;"	m	union:math::__anon77	file:
i	superstl.h	/^        size_t i;$/;"	m	struct:superstl::ChunkList::Chunk::Iterator
i	superstl.h	/^      int i;$/;"	m	struct:superstl::ChunkList::Iterator
i387_valid	ptlhwdef.h	/^  byte i387_valid; \/\/ VGCF_I387_VALID$/;"	m	struct:ContextBase
icache	dcache-amd-k8.h	/^      W16 dcache:1, icache:1;    \/\/ L1I vs L1D$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
icache	dcache.h	/^      W16 dcache:1, icache:1;    \/\/ L1I vs L1D$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
icache_miss	ooocore-amd-k8.h	/^      W64 icache_miss;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
icache_miss	ooocore.h	/^      W64 icache_miss;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
icache_wakeup	dcache.cpp	/^void PerCoreCacheCallbacks::icache_wakeup(LoadStoreInfo lsi, W64 physaddr) { }$/;"	f	class:PerCoreCacheCallbacks
icache_wakeup	ooopipe.cpp	/^void OutOfOrderCoreCacheCallbacks::icache_wakeup(LoadStoreInfo lsi, W64 physaddr) {$/;"	f	class:OutOfOrderCoreCacheCallbacks
id	seqcore.cpp	/^      W16 id;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon93	file:
idcounter	ptlstats.cpp	/^  int idcounter;$/;"	m	class:SVGCreator	file:
identical_subtrees	datastore.cpp	/^  W16 isarray:1, summable:1, histogramarray:1, identical_subtrees:1, labeled_histogram:1;$/;"	m	struct:DataStoreNodeHeader	file:
identical_subtrees	datastore.h	/^  W16 summable:1, histogramarray:1, identical_subtrees:1, dynamic:1, labeled_histogram:1;$/;"	m	struct:DataStoreNode
identical_subtrees	datastore.h	/^  W32 histogramarray:1, labeled_histogram:1, summable:1, identical_subtrees:1;$/;"	m	struct:DataStoreNodeTemplateBase
idle	stats.h	/^  W64 idle;$/;"	m	struct:EventsInMode
idstream	superstl.h	/^    idstream() { reset(); }$/;"	f	class:superstl::idstream
idstream	superstl.h	/^    idstream(const char* filename) {$/;"	f	class:superstl::idstream
idstream	superstl.h	/^    idstream(int fd) {$/;"	f	class:superstl::idstream
idstream	superstl.h	/^  class idstream {$/;"	c	namespace:superstl
idt	ptlhwdef.h	/^  struct TrapTarget idt[256]; \/\/ Virtual IDT$/;"	m	struct:ContextBase	typeref:struct:ContextBase::TrapTarget
idx	branchpred.h	/^  int idx;$/;"	m	struct:ReturnAddressStackEntry
idx	ooocore-amd-k8.h	/^    W16 idx;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
idx	ooocore-amd-k8.h	/^    W16 idx;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
idx	ooocore-amd-k8.h	/^    W16s idx;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
idx	ooocore.h	/^    W16 idx;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
idx	ooocore.h	/^    W16 idx;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
idx	ooocore.h	/^    W16s idx;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
ie	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
ie	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
ieee	globals.h	/^  struct { W64 mantissa:52, exponent:11, negative:1; } ieee;$/;"	m	union:W64orDouble	typeref:struct:W64orDouble::__anon28
ieee	mathlib.cpp	/^  struct { W32 mantissa:23, exponent:8, negative:1; } ieee;$/;"	m	union:math::ieee754_float	typeref:struct:math::ieee754_float::__anon81	file:
ieee	mathlib.cpp	/^  } ieee;$/;"	m	union:math::ieee754_double	typeref:struct:math::ieee754_double::__anon83	file:
ieee754_double	mathlib.cpp	/^union ieee754_double {$/;"	u	namespace:math	file:
ieee754_float	mathlib.cpp	/^union ieee754_float {$/;"	u	namespace:math	file:
ieee_double_shape_type	mathlib.cpp	/^} ieee_double_shape_type;$/;"	t	namespace:math	typeref:union:math::__anon78	file:
ieee_nan	mathlib.cpp	/^  struct { W32 mantissa:22, quiet_nan:1, exponent:8, negative:1; } ieee_nan;$/;"	m	union:math::ieee754_float	typeref:struct:math::ieee754_float::__anon82	file:
ieee_nan	mathlib.cpp	/^  } ieee_nan;$/;"	m	union:math::ieee754_double	typeref:struct:math::ieee754_double::__anon84	file:
ieeenan	globals.h	/^  struct { W64 mantissa:51, qnan:1, exponent:11, negative:1; } ieeenan;$/;"	m	union:W64orDouble	typeref:struct:W64orDouble::__anon29
iform	decode-core.cpp	/^bool DecodedOperand::iform(TraceDecoder& state, int bytemode) {$/;"	f	class:DecodedOperand
iform64	decode-core.cpp	/^bool DecodedOperand::iform64(TraceDecoder& state, int bytemode) {$/;"	f	class:DecodedOperand
ign	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
ign	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
ilogb	mathlib.cpp	/^	int ilogb(double x) {$/;"	f	namespace:math
im	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
im	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
image	ptlmon.cpp	/^  byte* image;$/;"	m	struct:XenController	file:
imagebase	kernel.h	/^  Waddr imagebase;$/;"	m	class:AddressSpace
imm	decode.h	/^      W64s imm;$/;"	m	struct:DecodedOperand::__anon142::__anon144
imm	decode.h	/^    } imm;$/;"	m	union:DecodedOperand::__anon142	typeref:struct:DecodedOperand::__anon142::__anon144
immediate	decode-core.cpp	/^void TraceDecoder::immediate(int rdreg, int sizeshift, W64s imm, bool issigned) {$/;"	f	class:TraceDecoder
impl	branchpred.h	/^  BranchPredictorImplementation* impl;$/;"	m	struct:BranchPredictorInterface
implmap_div	uopimpl.cpp	/^uopimpl_func_t implmap_div[4] = {&x86_div<OP_div, W8>, &x86_div<OP_div, W16>, &x86_div<OP_div, W32>, &x86_div<OP_div, W64>};$/;"	v
implmap_divs	uopimpl.cpp	/^uopimpl_func_t implmap_divs[4] = {&x86_divs<OP_divs, W8>, &x86_divs<OP_divs, W16>, &x86_divs<OP_divs, W32>, &x86_divs<OP_divs, W64>};$/;"	v
implmap_fcmp	uopimpl.cpp	/^uopimpl_func_t implmap_fcmp[8][4] = {$/;"	v
implmap_fcmpcc	uopimpl.cpp	/^uopimpl_func_t implmap_fcmpcc[8][4] = {&uop_impl_fcmpcc<0>, &uop_impl_fcmpcc<1>, &uop_impl_fcmpcc<2>, &uop_impl_fcmpcc<3>};$/;"	v
implmap_fcvt_d2q	uopimpl.cpp	/^uopimpl_func_t implmap_fcvt_d2q[2] = {&uop_impl_fcvt_d2q<OP_fcvt_d2q, 0>, &uop_impl_fcvt_d2q<OP_fcvt_d2q, 1>};$/;"	v
implmap_fcvt_s2q	uopimpl.cpp	/^uopimpl_func_t implmap_fcvt_s2q[2] = {&uop_impl_fcvt_s2q<OP_fcvt_s2q, 0>, &uop_impl_fcvt_s2q<OP_fcvt_s2q, 1>};$/;"	v
implmap_fmadd	uopimpl.cpp	/^uopimpl_func_t implmap_fmadd[4] = {&x86_op_fmadd<0>, &x86_op_fmadd<1>, &x86_op_fmadd<2>, &x86_op_fmadd<3>};$/;"	v
implmap_fmsub	uopimpl.cpp	/^uopimpl_func_t implmap_fmsub[4] = {&x86_op_fmsub<0>, &x86_op_fmsub<1>, &x86_op_fmsub<2>, &x86_op_fmsub<3>};$/;"	v
implmap_fmsubr	uopimpl.cpp	/^uopimpl_func_t implmap_fmsubr[4] = {&x86_op_fmsubr<0>, &x86_op_fmsubr<1>, &x86_op_fmsubr<2>, &x86_op_fmsubr<3>};$/;"	v
implmap_mask	uopimpl.cpp	/^uopimpl_func_t implmap_mask[4][3] = {$/;"	v
implmap_maskb	uopimpl.cpp	/^uopimpl_func_t implmap_maskb[4][3] = {$/;"	v
implmap_max	uopimpl.cpp	/^uopimpl_func_t implmap_max[4] = {&uop_impl_min_max<OP_max, W8, 1>, &uop_impl_min_max<OP_max, W16, 1>, &uop_impl_min_max<OP_max, W32, 1>, &uop_impl_min_max<OP_max, W64, 1>};$/;"	v
implmap_max_s	uopimpl.cpp	/^uopimpl_func_t implmap_max_s[4] = {&uop_impl_min_max<OP_max, W8s, 1>, &uop_impl_min_max<OP_max, W16s, 1>, &uop_impl_min_max<OP_max, W32s, 1>, &uop_impl_min_max<OP_max, W64s, 1>};$/;"	v
implmap_min	uopimpl.cpp	/^uopimpl_func_t implmap_min[4] = {&uop_impl_min_max<OP_min, W8, 0>, &uop_impl_min_max<OP_min, W16, 0>, &uop_impl_min_max<OP_min, W32, 0>, &uop_impl_min_max<OP_min, W64, 0>};$/;"	v
implmap_min_s	uopimpl.cpp	/^uopimpl_func_t implmap_min_s[4] = {&uop_impl_min_max<OP_min, W8s, 0>, &uop_impl_min_max<OP_min, W16s, 0>, &uop_impl_min_max<OP_min, W32s, 0>, &uop_impl_min_max<OP_min, W64s, 0>};$/;"	v
implmap_mov	uopimpl.cpp	/^uopimpl_func_t implmap_mov[4] = {&exp_op_mov<W8>, &exp_op_mov<W16>, &exp_op_mov<W32>, &exp_op_mov<W64>};$/;"	v
implmap_mulhl	uopimpl.cpp	/^uopimpl_func_t implmap_mulhl[4] = {&uop_impl_mulhl<W8>, &uop_impl_mulhl<W16>, &uop_impl_mulhl<W32>, &uop_impl_mulhl<W64>};$/;"	v
implmap_rem	uopimpl.cpp	/^uopimpl_func_t implmap_rem[4] = {&x86_rem<OP_rem, W8>, &x86_rem<OP_rem, W16>, &x86_rem<OP_rem, W32>, &x86_rem<OP_rem, W64>};$/;"	v
implmap_rems	uopimpl.cpp	/^uopimpl_func_t implmap_rems[4] = {&x86_rems<OP_rems, W8>, &x86_rems<OP_rems, W16>, &x86_rems<OP_rems, W32>, &x86_rems<OP_rems, W64>};$/;"	v
implmap_vbt	uopimpl.cpp	/^uopimpl_func_t implmap_vbt[4] = {&uop_impl_vbt<0>, &uop_impl_vbt<1>, &uop_impl_vbt<2>, &uop_impl_vbt<3>};$/;"	v
implmap_vcmp	uopimpl.cpp	/^uopimpl_func_t implmap_vcmp[16][4] = {$/;"	v
in_L1	dcache-amd-k8.h	/^    W64 in_L1;$/;"	m	struct:DataCacheStats::prefetch
in_L1	dcache.h	/^    W64 in_L1;$/;"	m	struct:DataCacheStats::prefetch
in_L2	dcache-amd-k8.h	/^    W64 in_L2;$/;"	m	struct:DataCacheStats::prefetch
in_L2	dcache.h	/^    W64 in_L2;$/;"	m	struct:DataCacheStats::prefetch
include_dyn_linker	ptlsim.h	/^  bool include_dyn_linker;$/;"	m	struct:PTLsimConfig
increment	logic.h	/^  void increment(base_t amount = 1) {$/;"	f	struct:FullyAssociativeTags16bit
increment	logic.h	/^  void increment(base_t amount = 1) {$/;"	f	struct:FullyAssociativeTags8bit
increment_clipped_histogram	stats.h	25;"	d
independent	ooocore-amd-k8.h	/^        W64 independent;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
independent	ooocore.h	/^        W64 independent;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
index	branchpred.h	/^  int index() const { return idx; }$/;"	f	struct:ReturnAddressStackEntry
index	decode.h	/^  byte base:3, index:3, scale:2;$/;"	m	struct:SIBByte
index	logic.h	/^    int index;$/;"	m	class:FullyAssociativeTagsNbitOneHot::ref
index	ooocore-amd-k8.h	/^    W16 index;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
index	ooocore-amd-k8.h	/^    int index() const { return idx; }$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
index	ooocore-amd-k8.h	/^    int index() const { return idx; }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
index	ooocore-amd-k8.h	/^    int index() const { return idx; }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
index	ooocore.h	/^    W16 index;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
index	ooocore.h	/^    int index() const { return idx; }$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
index	ooocore.h	/^    int index() const { return idx; }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
index	ooocore.h	/^    int index() const { return idx; }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
index	ptlsim.h	/^  int index;$/;"	m	struct:TransOpBuffer
index	ptlxen.h	/^      W32 index;$/;"	m	struct:PTLsimHostCall::__anon99::__anon106
index	superstl.h	/^      int index;$/;"	m	struct:superstl::ChunkList::Locator
index	superstl.h	/^    W16s index;$/;"	m	struct:superstl::indexref
index	superstl.h	/^    W16s index;$/;"	m	struct:superstl::indexrefnull
index_count	datastore.h	/^  W64 index_count;$/;"	m	struct:StatsFileHeader
index_offset	datastore.h	/^  W64 index_offset;$/;"	m	struct:StatsFileHeader
indexref	superstl.h	/^    indexref() { }$/;"	f	struct:superstl::indexref
indexref	superstl.h	/^  struct indexref {$/;"	s	namespace:superstl
indexrefnull	superstl.h	/^    indexrefnull() { }$/;"	f	struct:superstl::indexrefnull
indexrefnull	superstl.h	/^  struct indexrefnull {$/;"	s	namespace:superstl
indexreg	decode.h	/^      int indexreg;$/;"	m	struct:DecodedOperand::__anon142::__anon145
indir	ooocore-amd-k8.h	/^    W64 indir[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
indir	ooocore.h	/^    W64 indir[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:OutOfOrderCoreStats::branchpred
indir	ooocore.h	/^    W64 indir[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
indircall	kernel.cpp	/^  void indircall(W64& ptr) {$/;"	f	struct:SwitchToSimThunkCode
indirect	decode.h	/^  bool indirect;$/;"	m	struct:DecodedOperand
indirjump	kernel.cpp	/^  void indirjump(W64& ptr) {$/;"	f	struct:SwitchToSimThunkCode
indirtarget	kernel.cpp	/^  W32 indirtarget;$/;"	m	struct:SwitchToSimThunkCode	file:
inf	globals.h	75;"	d
infinite_bitvec_t	ptlxen.cpp	/^typedef bitvec<65> infinite_bitvec_t;$/;"	t	file:
infinity	config.h	/^static const W64 infinity = limits<W64s>::max;$/;"	v
info	ptlhwdef.h	/^  struct { W32 b0:4, b1:4, b2:4, b3:4, b4:4, b5:4, b6:4, b7:4; } info;$/;"	m	union:PermbControlInfo	typeref:struct:PermbControlInfo::__anon133
info	ptlhwdef.h	/^  struct { W32 ms:6, mc:6, ds:6; } info;$/;"	m	union:MaskControlInfo	typeref:struct:MaskControlInfo::__anon132
info	ptlmon.cpp	/^  xc_domaininfo_t info;$/;"	m	struct:XenController	file:
inherit_sfr	ooocore-amd-k8.h	/^        SFR inherit_sfr;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
inherit_sfr	ooocore.h	/^        SFR inherit_sfr;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
inherit_sfr_lsq	ooocore-amd-k8.h	/^        W16 inherit_sfr_lsq;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
inherit_sfr_lsq	ooocore.h	/^        W16 inherit_sfr_lsq;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
inherit_sfr_physreg	ooocore-amd-k8.h	/^        W16 inherit_sfr_physreg;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
inherit_sfr_physreg	ooocore.h	/^        W16 inherit_sfr_physreg;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
inherit_sfr_rip	ooocore-amd-k8.h	/^        W64 inherit_sfr_rip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
inherit_sfr_rip	ooocore.h	/^        W64 inherit_sfr_rip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
inherit_sfr_rob	ooocore-amd-k8.h	/^        W16 inherit_sfr_rob;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
inherit_sfr_rob	ooocore.h	/^        W16 inherit_sfr_rob;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
inherit_sfr_used	ooocore-amd-k8.h	/^        byte inherit_sfr_used:1, rcready:1, load_store_second_phase:1, predicted_alias:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
inherit_sfr_used	ooocore.h	/^        byte inherit_sfr_used:1, rcready:1, load_store_second_phase:1, predicted_alias:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
inherit_sfr_uuid	ooocore-amd-k8.h	/^        W64 inherit_sfr_uuid;        $/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
inherit_sfr_uuid	ooocore.h	/^        W64 inherit_sfr_uuid;        $/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
init	branchpred.cpp	/^void BranchPredictorInterface::init() {$/;"	f	class:BranchPredictorInterface
init	branchpred.h	/^  void init(int i) { idx = i; }$/;"	f	struct:ReturnAddressStackEntry
init	datastore.cpp	/^void DataStoreNode::init(const char* name, int type, int count) {$/;"	f	class:DataStoreNode
init	datastore.cpp	/^void DataStoreNodeTemplate::init(const char* name, int type, int count, const char** labels) {$/;"	f	class:DataStoreNodeTemplate
init	ooocore-amd-k8.h	/^    int init(int index) { this->index = index; return 0; }$/;"	f	struct:OutOfOrderModel::FetchBufferEntry
init	ooocore-amd-k8.h	/^    void init() {$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
init	ooocore-amd-k8.h	/^    void init(int coreid, int rfid, int idx) {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
init	ooocore-amd-k8.h	/^    void init(int idx) {$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
init	ooocore.cpp	/^bool EventLog::init(size_t bufsize) {$/;"	f	class:EventLog
init	ooocore.cpp	/^bool OutOfOrderMachine::init(PTLsimConfig& config) {$/;"	f	class:OutOfOrderMachine
init	ooocore.cpp	/^void PhysicalRegisterFile::init(const char* name, int coreid, int rfid, int size) {$/;"	f	class:PhysicalRegisterFile
init	ooocore.cpp	/^void ReorderBufferEntry::init(int idx) {$/;"	f	class:ReorderBufferEntry
init	ooocore.cpp	/^void StateList::init(const char* name, ListOfStateLists& lol, W32 flags) {$/;"	f	class:StateList
init	ooocore.cpp	/^void ThreadContext::init() {$/;"	f	class:ThreadContext
init	ooocore.h	/^    int init(int index) { this->index = index; return 0; }$/;"	f	struct:OutOfOrderModel::FetchBufferEntry
init	ooocore.h	/^    void init() {$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
init	ooocore.h	/^    void init(int coreid, int rfid, int idx) {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
init	ooocore.h	/^    void init(int idx) {$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
init	ptlhwdef.h	/^  void init(int opcode, int rd, int ra, int rb, int rc, int size, W64s rbimm = 0, W64s rcimm = 0, W32 setflags = 0, int memid = 0)  {$/;"	f	struct:TransOp
init	ptlsim.cpp	/^bool PTLsimMachine::init(PTLsimConfig& config) { return false; }$/;"	f	class:PTLsimMachine
init	ptlxen.cpp	/^void Context::init() {$/;"	f	class:Context
init	seqcore.cpp	/^  virtual bool init(PTLsimConfig& config) {$/;"	f	struct:SequentialMachine
init	seqcore.cpp	/^bool SequentialCoreEventLog::init(size_t bufsize) {$/;"	f	class:SequentialCoreEventLog
init	superstl.h	/^    inline static void init(T* noalias p, size_t length) { }$/;"	f	struct:superstl::ArrayConstructor
init	superstl.h	/^    inline static void init(T* noalias p, size_t length) {$/;"	f	struct:superstl::ArrayConstructor
init	superstl.h	/^    inline static void init(T* noalias p, size_t length, const T value) {$/;"	f	struct:superstl::ArrayInitializer
init_config	kernel.cpp	/^int init_config(int argc, char** argv) {$/;"	f
init_decode	decode-core.cpp	/^void init_decode() {$/;"	f
init_done	seqcore.cpp	/^  bool init_done;$/;"	m	struct:SequentialMachine	file:
init_generic	ooocore.cpp	/^void OutOfOrderCore::init_generic() {$/;"	f	class:OutOfOrderCore
init_luts	ooocore.cpp	/^static void init_luts() {$/;"	f	file:
init_signal_callback	kernel.cpp	/^void init_signal_callback() {$/;"	f
init_uops	uopimpl.cpp	/^void init_uops() {$/;"	f
initcycle	dcache-amd-k8.h	/^    W32  initcycle;$/;"	m	struct:CacheSubsystem::LoadFillReq
initcycle	dcache.h	/^    W32  initcycle;$/;"	m	struct:CacheSubsystem::LoadFillReq
initial_realtime_info	ptlxen-events.cpp	/^RealTimeInfo initial_realtime_info;$/;"	v
initialize	loader.h	/^  W64 initialize;$/;"	m	struct:LoaderInfo
initialize	ptlxen.h	/^    } initialize;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon100
initialized	ptlsim.h	/^  bool initialized;$/;"	m	struct:PTLsimMachine
initiate_icache_miss	dcache.cpp	/^int CacheHierarchy::initiate_icache_miss(W64 addr, int rob, int threadid) {$/;"	f	class:CacheHierarchy
initiate_miss	dcache.cpp	/^int MissBuffer<SIZE>::initiate_miss(LoadFillReq& req, bool hit_in_L2, int rob) {$/;"	f	class:MissBuffer
initiate_miss	dcache.cpp	/^int MissBuffer<SIZE>::initiate_miss(W64 addr, bool hit_in_L2, bool icache, int rob, int threadid) {$/;"	f	class:MissBuffer
initiate_prefetch	dcache.cpp	/^void CacheHierarchy::initiate_prefetch(W64 addr, int cachelevel) {$/;"	f	class:CacheHierarchy
inject_events	kernel.cpp	/^int inject_events() {$/;"	f
inject_events	ptlxen-events.cpp	/^int inject_events() {$/;"	f
inject_ptlsim	ptlmon.cpp	/^  bool inject_ptlsim(int reserved_mbytes) {$/;"	f	struct:XenController
inject_ptlsim_into_toplevel	ptlxen-memory.cpp	/^void inject_ptlsim_into_toplevel(mfn_t mfn) {$/;"	f
inject_upcall	ptlxen.cpp	/^W64 inject_upcall(const char* buf, size_t count, bool flushing) {$/;"	f
inject_upcall	ptlxen.h	/^    } inject_upcall;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon104
inode	kernel.cpp	/^  unsigned long long inode;$/;"	m	struct:MemoryMapExtent	file:
inrange	globals.h	/^template <typename T> static inline bool inrange(const T& v, const T& minv, const T& maxv) { typeof (v) _v = v; return ((_v >= minv) & (_v <= maxv)); }$/;"	f
insection	globals.h	44;"	d
insert	dcache-amd-k8.h	/^    bool insert(W64 addr, int threadid = 0) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
insert	dcache.h	/^    bool insert(W64 addr, int threadid = 0) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
insert	logic.h	/^  int insert(base_t tag) {$/;"	f	struct:FullyAssociativeTags16bit
insert	logic.h	/^  int insert(base_t tag) {$/;"	f	struct:FullyAssociativeTags8bit
insert	logic.h	/^  int insert(base_t tag) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
insert	oooexec.cpp	/^bool IssueQueue<size, operandcount>::insert(tag_t uopid, const tag_t* operands, const tag_t* preready) {$/;"	f	class:IssueQueue
insert	superstl.h	/^    bitvec<N> insert(int i, int n, T v) const {$/;"	f	class:superstl::bitvec
inserted	dcache-amd-k8.h	/^    static void inserted(V& line, W64 newtag, int way) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
inserted	dcache.h	/^    static void inserted(V& line, W64 newtag, int way) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
inserted	logic.h	/^  static void inserted(V& elem, T newtag, int way) { }$/;"	f	struct:NullAssociativeArrayStatisticsCollector
insertop	superstl.h	/^    void insertop(int i, int n, T v) { }$/;"	f	struct:superstl::bitvecbase
insertop	superstl.h	/^    void insertop(size_t i, size_t n, T v) {$/;"	f	struct:superstl::bitvecbase
inserts	dcache-amd-k8.h	/^    W64 inserts;$/;"	m	struct:DataCacheStats::lfrq
inserts	dcache-amd-k8.h	/^    W64 inserts;$/;"	m	struct:DataCacheStats::missbuf
inserts	dcache.h	/^    W64 inserts;$/;"	m	struct:DataCacheStats::lfrq
inserts	dcache.h	/^    W64 inserts;$/;"	m	struct:DataCacheStats::missbuf
inserts	stats.h	/^      W64 inserts;$/;"	m	struct:PTLsimStats::decoder::bbcache
inserts	stats.h	/^      W64 inserts;$/;"	m	struct:PTLsimStats::decoder::pagecache
insertslot	logic.h	/^  int insertslot(int idx, base_t tag) {$/;"	f	struct:FullyAssociativeTags16bit
insertslot	logic.h	/^  int insertslot(int idx, base_t tag) {$/;"	f	struct:FullyAssociativeTags8bit
insertslot	logic.h	/^  int insertslot(int idx, base_t tag) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
inside_ptlsim	kernel.cpp	/^bool inside_ptlsim = false;$/;"	v
inside_sim_escape_code_template_32bit	lowlevel-32bit.S	/^inside_sim_escape_code_template_32bit:$/;"	l
inside_sim_escape_code_template_32bit_end	lowlevel-32bit.S	/^inside_sim_escape_code_template_32bit_end:$/;"	l
inside_sim_escape_code_template_64bit	lowlevel-64bit.S	/^inside_sim_escape_code_template_64bit:$/;"	l
inside_sim_escape_code_template_64bit_end	lowlevel-64bit.S	/^inside_sim_escape_code_template_64bit_end:$/;"	l
insn_is_simple	decode-core.cpp	/^static const byte insn_is_simple[512] = {$/;"	v	file:
insnbits	decode.h	/^  byte extbase:1, extindex:1, extreg:1, mode64:1, insnbits:4; $/;"	m	struct:RexByte
insnbytes	decode.h	/^  byte* insnbytes;$/;"	m	struct:TraceDecoder
insnbytes_bufsize	decode.h	/^  int insnbytes_bufsize;$/;"	m	struct:TraceDecoder
insns	ooocore-amd-k8.h	/^    W64 insns;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
insns	ooocore.h	/^    W64 insns;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
insns	stats.h	/^    W64 insns;$/;"	m	struct:PTLsimStats::summary
insns_at_last_mode_switch	ptlxen.cpp	/^W64 insns_at_last_mode_switch = 0;$/;"	v
insns_in_last_basic_block	ptlsim.h	/^  W64 insns_in_last_basic_block;$/;"	m	struct:PTLsimConfig
insns_in_mode	stats.h	/^    EventsInMode insns_in_mode;$/;"	m	struct:PTLsimStats::external
int0	ooocore.h	/^      W64 int0[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::issue::width
int0	ooocore.h	/^      W64 int0[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::writeback::width
int1	ooocore-amd-k8.h	/^      W64 int1[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::issue::width
int1	ooocore-amd-k8.h	/^      W64 int1[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::writeback::width
int1	ooocore.h	/^      W64 int1[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::issue::width
int1	ooocore.h	/^      W64 int1[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::writeback::width
int16_t	xen-types.h	/^typedef         __s16           int16_t;$/;"	t
int2	ooocore-amd-k8.h	/^      W64 int2[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::issue::width
int2	ooocore-amd-k8.h	/^      W64 int2[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::writeback::width
int3	ooocore-amd-k8.h	/^      W64 int3[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::issue::width
int3	ooocore-amd-k8.h	/^      W64 int3[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::writeback::width
int32_t	xen-types.h	/^typedef         __s32           int32_t;$/;"	t
int3_entry	lowlevel-64bit-xen.S	/^int3_entry:$/;"	l
int4	mathlib.cpp	/^  typedef int int4;$/;"	t	namespace:math	file:
int64_t	xen-types.h	/^typedef         __s64           int64_t;$/;"	t
int8_t	xen-types.h	/^typedef         __s8            int8_t;$/;"	t
integer	ooocore-amd-k8.h	/^      W64 integer[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::dispatch::source
integer	ooocore-amd-k8.h	/^      W64 integer[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::issue::source
integer	ooocore.h	/^      W64 integer[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::dispatch::source
integer	ooocore.h	/^      W64 integer[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::issue::source
integer	superstl.h	/^    unsigned long integer() const { return this->integerop(); }$/;"	f	class:superstl::bitvec
integerop	superstl.h	/^    unsigned long integerop() const { return 0; }$/;"	f	struct:superstl::bitvecbase
integerop	superstl.h	/^    unsigned long integerop() const { return w; }$/;"	f	struct:superstl::bitvecbase
integerop	superstl.h	/^    unsigned long integerop() const { return w[0]; }$/;"	f	struct:superstl::bitvecbase
intel_core2_counter_config	perfctrs.cpp	/^CounterPairConfig intel_core2_counter_config[GENERIC_PERFCTR_COUNT] = {$/;"	v
intercluster_bandwidth_map	ooocore-amd-k8.h	/^  const byte intercluster_bandwidth_map[MAX_CLUSTERS][MAX_CLUSTERS] = {$/;"	v
intercluster_bandwidth_map	ooocore.h	/^  const byte intercluster_bandwidth_map[MAX_CLUSTERS][MAX_CLUSTERS] = {$/;"	v
intercluster_bandwidth_map	ooocore.h	/^  const byte intercluster_bandwidth_map[MAX_CLUSTERS][MAX_CLUSTERS] = {{64}};$/;"	v
intercluster_latency_map	ooocore-amd-k8.h	/^  const byte intercluster_latency_map[MAX_CLUSTERS][MAX_CLUSTERS] = {$/;"	v
intercluster_latency_map	ooocore.h	/^  const byte intercluster_latency_map[MAX_CLUSTERS][MAX_CLUSTERS] = {$/;"	v
intercluster_latency_map	ooocore.h	/^  const byte intercluster_latency_map[MAX_CLUSTERS][MAX_CLUSTERS] = {{0}};$/;"	v
interlock_overflow	ooocore-amd-k8.h	/^          W64 interlock_overflow;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
interlock_overflow	ooocore.h	/^          W64 interlock_overflow;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
interlocked	ooocore-amd-k8.h	/^          W64 interlocked;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
interlocked	ooocore-amd-k8.h	/^          W64 interlocked;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
interlocked	ooocore.h	/^          W64 interlocked;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
interlocked	ooocore.h	/^          W64 interlocked;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
interlocks	oooexec.cpp	/^  MemoryInterlockBuffer interlocks;$/;"	v
internal	dcache-amd-k8.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
internal	dcache.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
internal	ooocore-amd-k8.h	/^        W64 internal;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::type
internal	ooocore-amd-k8.h	/^        W64 internal;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::type
internal	ooocore.h	/^        W64 internal;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::type
internal	ooocore.h	/^        W64 internal;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::type
internal	ptlhwdef.h	/^  byte internal:1, locked:1, cachelevel:2, datatype:4;$/;"	m	struct:TransOpBase
internal_eflags	ptlhwdef.h	/^  W32 internal_eflags; \/\/ parts of EFLAGS that are infrequently updated$/;"	m	struct:ContextBase
interrupt	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
intstring	superstl.h	/^    intstring() { }$/;"	f	struct:superstl::intstring
intstring	superstl.h	/^    intstring(W64s value, int width) {$/;"	f	struct:superstl::intstring
intstring	superstl.h	/^  DeclareStringBufToStream(intstring);$/;"	v
intstring	superstl.h	/^  struct intstring {$/;"	s	namespace:superstl
invalid	decode.h	/^  bool invalid;$/;"	m	struct:TraceDecoder
invalid	ptlhwdef.h	/^  W64 addrvalid:1, invalid:1, datavalid:1, physaddr:45, bytemask:8, tag:8;$/;"	m	struct:SFR
invalid_op_entry	lowlevel-64bit-xen.S	/^invalid_op_entry:$/;"	l
invalidate	dcache-amd-k8.h	/^    void invalidate() { reset(); }$/;"	f	struct:CacheSubsystem::CacheLine
invalidate	dcache-amd-k8.h	/^    void invalidate() { reset(); }$/;"	f	struct:CacheSubsystem::CacheLineWithValidMask
invalidate	dcache.h	/^    void invalidate() { reset(); }$/;"	f	struct:CacheSubsystem::CacheLine
invalidate	dcache.h	/^    void invalidate() { reset(); }$/;"	f	struct:CacheSubsystem::CacheLineWithValidMask
invalidate	decode-core.cpp	/^bool BasicBlockCache::invalidate(BasicBlock* bb, int reason) {$/;"	f	class:BasicBlockCache
invalidate	decode-core.cpp	/^bool BasicBlockCache::invalidate(const RIPVirtPhys& rvp, int reason) {$/;"	f	class:BasicBlockCache
invalidate	decode-core.cpp	/^bool TraceDecoder::invalidate() {$/;"	f	class:TraceDecoder
invalidate	logic.h	/^  bitvec<size> invalidate(base_t target) {$/;"	f	struct:FullyAssociativeTags16bit
invalidate	logic.h	/^  bitvec<size> invalidate(base_t target) {$/;"	f	struct:FullyAssociativeTags8bit
invalidate	logic.h	/^  bitvec<size> invalidate(const vec_t target) {$/;"	f	struct:FullyAssociativeTags16bit
invalidate	logic.h	/^  bitvec<size> invalidate(const vec_t target) {$/;"	f	struct:FullyAssociativeTags8bit
invalidate	logic.h	/^  int invalidate(T tag) {$/;"	f	struct:FullyAssociativeArray
invalidate	logic.h	/^  int invalidate(T tag) {$/;"	f	struct:LockableFullyAssociativeArray
invalidate	logic.h	/^  int invalidate(T target) {$/;"	f	struct:FullyAssociativeTags
invalidate	logic.h	/^  int invalidate(T target) {$/;"	f	struct:LockableFullyAssociativeTags
invalidate	logic.h	/^  int invalidate(base_t target) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
invalidate	logic.h	/^  void invalidate(T addr) {$/;"	f	struct:AssociativeArray
invalidate	logic.h	/^  void invalidate(T addr) {$/;"	f	struct:CommitRollbackCache
invalidate	logic.h	/^  void invalidate(T addr) {$/;"	f	struct:LockableAssociativeArray
invalidate	logic.h	/^  void invalidate(T addr) {$/;"	f	struct:LockableCommitRollbackAssociativeArray
invalidate_caches	datastore.cpp	/^void DataStoreNode::invalidate_caches() {$/;"	f	class:DataStoreNode
invalidate_line	logic.h	/^  void invalidate_line(V* line) {$/;"	f	struct:FullyAssociativeArray
invalidate_line	logic.h	/^  void invalidate_line(V* line) {$/;"	f	struct:LockableFullyAssociativeArray
invalidate_page	decode-core.cpp	/^bool BasicBlockCache::invalidate_page(Waddr mfn, int reason) {$/;"	f	class:BasicBlockCache
invalidate_ptl_virt	ptlxen-memory.cpp	/^int invalidate_ptl_virt(void* ptr) {$/;"	f
invalidate_reason_names	decode.h	/^static const char* invalidate_reason_names[INVALIDATE_REASON_COUNT] = {$/;"	v
invalidate_smc	ooopipe.cpp	/^void ThreadContext::invalidate_smc() {$/;"	f	class:ThreadContext
invalidate_way	logic.h	/^  void invalidate_way(int way) {$/;"	f	struct:FullyAssociativeArray
invalidate_way	logic.h	/^  void invalidate_way(int way) {$/;"	f	struct:FullyAssociativeTags
invalidate_way	logic.h	/^  void invalidate_way(int way) {$/;"	f	struct:LockableFullyAssociativeArray
invalidate_way	logic.h	/^  void invalidate_way(int way) {$/;"	f	struct:LockableFullyAssociativeTags
invalidated	dcache-amd-k8.h	/^    static void invalidated(V& line, W64 oldtag, int way) { evicted(line, oldtag); }$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
invalidated	dcache.h	/^    static void invalidated(V& line, W64 oldtag, int way) { evicted(line, oldtag); }$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
invalidated	logic.h	/^  static void invalidated(V& elem, T oldtag, int way) { }$/;"	f	struct:NullAssociativeArrayStatisticsCollector
invalidatemask	logic.h	/^  const bitvec<size>& invalidatemask(const bitvec<size>& mask) {$/;"	f	struct:FullyAssociativeTags16bit
invalidatemask	logic.h	/^  const bitvec<size>& invalidatemask(const bitvec<size>& mask) {$/;"	f	struct:FullyAssociativeTags8bit
invalidates	stats.h	/^      W64 invalidates[INVALIDATE_REASON_COUNT]; \/\/ label: invalidate_reason_names$/;"	m	struct:PTLsimStats::decoder::bbcache
invalidates	stats.h	/^      W64 invalidates[INVALIDATE_REASON_COUNT]; \/\/ label: invalidate_reason_names$/;"	m	struct:PTLsimStats::decoder::pagecache
invalidateslot	logic.h	/^  void invalidateslot(int index) {$/;"	f	struct:FullyAssociativeTags16bit
invalidateslot	logic.h	/^  void invalidateslot(int index) {$/;"	f	struct:FullyAssociativeTags8bit
invalidateslot	logic.h	/^  void invalidateslot(int index) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
invalidblock	ptlhwdef.h	/^  byte type:4, repblock:1, invalidblock:1, call:1, ret:1;$/;"	m	struct:BasicBlockBase
invert	superstl.h	/^      inline reference& invert() {$/;"	f	class:superstl::bitvec::reference
invert	superstl.h	/^    bitvec<N>& invert() {$/;"	f	class:superstl::bitvec
invert	superstl.h	/^    bitvec<N>& invert(size_t index) {$/;"	f	class:superstl::bitvec
invert_cond	ptlhwdef.h	/^inline int invert_cond(int cond) {$/;"	f
invert_gains	ptlstats.cpp	/^  bool invert_gains;$/;"	m	struct:PTLstatsConfig	file:
invertop	superstl.h	/^    void invertop() { w = ~w; }$/;"	f	struct:superstl::bitvecbase
invertop	superstl.h	/^    void invertop() { }$/;"	f	struct:superstl::bitvecbase
invertop	superstl.h	/^    void invertop() {$/;"	f	struct:superstl::bitvecbase
invlogscale	ptlstats.cpp	/^static inline double invlogscale(double x) {$/;"	f	file:
iosflush	superstl.h	/^  static class iosflush { } flush;$/;"	c	namespace:superstl
ipc	ooocore-amd-k8.h	/^    double ipc;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
ipc	ooocore.h	/^    double ipc;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
iq_avail	ooocore-amd-k8.h	/^        W16 iq_avail[MAX_CLUSTERS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon47
iq_avail	ooocore.h	/^        W16 iq_avail[MAX_CLUSTERS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon11
iqslot	ooocore-amd-k8.h	/^        W16 iqslot;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon53
iqslot	ooocore-amd-k8.h	/^    W16s iqslot;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
iqslot	ooocore.h	/^        W16 iqslot;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon17
iqslot	ooocore.h	/^    W16s iqslot;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
is	datastore.h	/^  idstream is;$/;"	m	struct:StatsFileReader
is_cacheable_physaddr	ptlxen.h	/^static inline bool is_cacheable_physaddr(W64 physaddr) {$/;"	f
is_elf_64bit	kernel.cpp	/^int is_elf_64bit(const char* filename) {$/;"	f
is_elf_valid	kernel.cpp	/^int is_elf_valid(const char* filename) {$/;"	f
is_executable_user_physaddr	ptlxen.h	/^static inline bool is_executable_user_physaddr(W64 physaddr) {$/;"	f
is_inside_ptlsim	mm.cpp	/^bool is_inside_ptlsim(const void* pp) {$/;"	f
is_inside_ptlsim_heap	mm.cpp	/^bool is_inside_ptlsim_heap(const void* pp) {$/;"	f
is_mfn_mainmem	ptlxen-memory.cpp	/^bool is_mfn_mainmem(mfn_t mfn) {$/;"	f
is_mfn_ptpage	ptlxen-memory.cpp	/^bool is_mfn_ptpage(mfn_t mfn) {$/;"	f
is_readonly_physaddr	ptlxen.h	/^static inline bool is_readonly_physaddr(W64 physaddr) {$/;"	f
is_sse	decode.h	/^  bool is_sse;$/;"	m	struct:TraceDecoder
is_sse	ptlhwdef.h	/^  byte bytes:4, som:1, eom:1, is_sse:1, is_x87:1;$/;"	m	struct:TransOpBase
is_x87	decode.h	/^  bool is_x87;$/;"	m	struct:TraceDecoder
is_x87	ptlhwdef.h	/^  byte bytes:4, som:1, eom:1, is_sse:1, is_x87:1;$/;"	m	struct:TransOpBase
isalnum	klibc.cpp	/^  inline int isalnum(int c) { return ((__ismask(c)&(_U|_L|_D)) != 0); }$/;"	f
isalpha	klibc.cpp	/^  inline int isalpha(int c) { return ((__ismask(c)&(_U|_L)) != 0); }$/;"	f
isarray	datastore.cpp	/^  W16 isarray:1, summable:1, histogramarray:1, identical_subtrees:1, labeled_histogram:1;$/;"	m	struct:DataStoreNodeHeader	file:
isascii	klibc.cpp	/^  inline int isascii(int c) { return (((unsigned char)(c))<=0x7f); }$/;"	f
isbarrier	ptlhwdef.h	/^inline bool isbarrier(int opcode) { return isclass(opcode, OPCLASS_BARRIER); }$/;"	f
isbranch	ptlhwdef.h	/^inline bool isbranch(int opcode) { return isclass(opcode, OPCLASS_BRANCH); }$/;"	f
isclass	ptlhwdef.h	/^inline bool isclass(int opcode, W32 opclass) { return ((opinfo[opcode].opclass & opclass) != 0); }$/;"	f
iscntrl	klibc.cpp	/^  inline int iscntrl(int c) { return ((__ismask(c)&(_C)) != 0); }$/;"	f
iscondbranch	ptlhwdef.h	/^inline bool iscondbranch(int opcode) { return isclass(opcode, OPCLASS_COND_BRANCH|OPCLASS_INDIR_BRANCH); }$/;"	f
isconst	globals.h	50;"	d
isdigit	klibc.cpp	/^  inline int isdigit(int c) { return ((__ismask(c)&(_D)) != 0); }$/;"	f
isdirty	kernel.h	/^  bool isdirty(Waddr mfn) { return fastcheck(mfn << 12, dirtymap); }$/;"	f	class:AddressSpace
isfree	superstl.h	/^    bool isfree(W64 index) const {$/;"	f	struct:superstl::BitmapAllocator3Level
isgraph	klibc.cpp	/^  inline int isgraph(int c) { return ((__ismask(c)&(_P|_U|_L|_D)) != 0); }$/;"	f
isgreater	mathlib.h	24;"	d
isgreaterequal	mathlib.h	25;"	d
isinf	mathlib.h	/^  inline int isinf(double x) {$/;"	f	namespace:math
isinf	mathlib.h	86;"	d
isinff	mathlib.h	/^  inline int isinff(float x) {$/;"	f	namespace:math
isinff	mathlib.h	95;"	d
isless	mathlib.h	26;"	d
islessequal	mathlib.h	27;"	d
islessgreater	mathlib.h	28;"	d
isload	ptlhwdef.h	/^inline bool isload(int opcode) { return isclass(opcode, OPCLASS_LOAD); }$/;"	f
islocked	logic.h	/^  bool islocked(int way) const { return !unlockedmap[way]; }$/;"	f	struct:LockableFullyAssociativeTags
islower	klibc.cpp	/^  inline int islower(int c) { return ((__ismask(c)&(_L)) != 0); }$/;"	f
isnan	mathlib.h	/^	inline int isnan(double x) {$/;"	f	namespace:math
isnan	mathlib.h	134;"	d
isnanf	mathlib.h	/^	inline int isnanf(float x) {$/;"	f	namespace:math
isnanf	mathlib.h	144;"	d
isnormal	mathlib.h	/^  inline bool isnormal(double x) { return (fpclassify(x) == FP_NORMAL); }$/;"	f	namespace:math
isnormal	mathlib.h	189;"	d
isnull	superstl.h	/^    bool isnull(T tag) const {$/;"	f	struct:superstl::FixedIntegerQueueSet
ispointer	globals.h	114;"	d
ispointer_t	globals.h	/^template <typename T> struct ispointer_t<T*> { static const bool pointer = 1; };$/;"	s
ispointer_t	globals.h	/^template<typename T> struct ispointer_t { static const bool pointer = 0; };$/;"	s
isprefetch	ptlhwdef.h	/^inline bool isprefetch(int opcode) { return isclass(opcode, OPCLASS_PREFETCH); }$/;"	f
isprimitive	globals.h	115;"	d
isprimitive_t	globals.h	/^template <typename T> struct isprimitive_t { static const bool primitive = 0; };$/;"	s
isprint	klibc.cpp	/^  inline int isprint(int c) { return ((__ismask(c)&(_P|_U|_L|_D|_SP)) != 0); }$/;"	f
ispunct	klibc.cpp	/^  inline int ispunct(int c) { return ((__ismask(c)&(_P)) != 0); }$/;"	f
isspace	klibc.cpp	/^  inline int isspace(int c) { return ((__ismask(c)&(_S)) != 0); }$/;"	f
isstore	ptlhwdef.h	/^inline bool isstore(int opcode) { return isclass(opcode, OPCLASS_STORE); }$/;"	f
issue	ooocore-amd-k8.h	/^      double issue;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
issue	ooocore-amd-k8.h	/^      struct issue { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load
issue	ooocore-amd-k8.h	/^      struct issue { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::store
issue	ooocore-amd-k8.h	/^      } issue;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::issue
issue	ooocore-amd-k8.h	/^      } issue;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store::issue
issue	ooocore-amd-k8.h	/^      } issue;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon49
issue	ooocore-amd-k8.h	/^  struct issue {$/;"	s	struct:OutOfOrderCoreStats
issue	ooocore-amd-k8.h	/^  struct issue {$/;"	s	struct:PerContextOutOfOrderCoreStats
issue	ooocore-amd-k8.h	/^  } issue;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::issue
issue	ooocore-amd-k8.h	/^  } issue;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::issue
issue	ooocore.h	/^      double issue;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
issue	ooocore.h	/^      struct issue { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load
issue	ooocore.h	/^      struct issue { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::store
issue	ooocore.h	/^      } issue;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::issue
issue	ooocore.h	/^      } issue;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store::issue
issue	ooocore.h	/^      } issue;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon13
issue	ooocore.h	/^  struct issue {$/;"	s	struct:OutOfOrderCoreStats
issue	ooocore.h	/^  struct issue {$/;"	s	struct:PerContextOutOfOrderCoreStats
issue	ooocore.h	/^  } issue;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::issue
issue	ooocore.h	/^  } issue;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::issue
issue	oooexec.cpp	/^int IssueQueue<size, operandcount>::issue() {$/;"	f	class:IssueQueue
issue	oooexec.cpp	/^int OutOfOrderCore::issue(int cluster) {$/;"	f	class:OutOfOrderCore
issue	oooexec.cpp	/^int ReorderBufferEntry::issue() {$/;"	f	class:ReorderBufferEntry
issue	seqcore.cpp	/^    } issue;$/;"	m	union:SequentialCoreEvent::__anon86	typeref:struct:SequentialCoreEvent::__anon86::__anon87	file:
issue_source_counter	ooocore-amd-k8.h	/^    W64 issue_source_counter;$/;"	m	struct:OutOfOrderModel::StateList
issue_source_counter	ooocore.h	/^    W64 issue_source_counter;$/;"	m	struct:OutOfOrderModel::StateList
issue_width	ooocore-amd-k8.h	/^    W16 issue_width;$/;"	m	struct:OutOfOrderModel::Cluster
issue_width	ooocore.h	/^    W16 issue_width;$/;"	m	struct:OutOfOrderModel::Cluster
issued	ooocore-amd-k8.h	/^    bitvec<size> issued;$/;"	m	struct:OutOfOrderModel::IssueQueue
issued	ooocore-amd-k8.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
issued	ooocore.h	/^    bitvec<size> issued;$/;"	m	struct:OutOfOrderModel::IssueQueue
issued	ooocore.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
issuefence	oooexec.cpp	/^int ReorderBufferEntry::issuefence(LoadStoreQueueEntry& state) {$/;"	f	class:ReorderBufferEntry
issueload	ooocore-amd-k8.h	/^      double issueload;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
issueload	ooocore.h	/^      double issueload;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
issueload	oooexec.cpp	/^int ReorderBufferEntry::issueload(LoadStoreQueueEntry& state, Waddr& origaddr, W64 ra, W64 rb, W64 rc, PTEUpdate& pteupdate) {$/;"	f	class:ReorderBufferEntry
issueload	seqcore.cpp	/^  int issueload(const TransOp& uop, SFR& state, Waddr& origaddr, W64 ra, W64 rb, W64 rc, PTEUpdate& pteupdate) {$/;"	f	struct:SequentialCore
issueload_slowpath	dcache.cpp	/^int CacheHierarchy::issueload_slowpath(Waddr physaddr, SFR& sfra, LoadStoreInfo lsi, bool& L2hit) {$/;"	f	class:CacheHierarchy
issueload_slowpath	dcache.h	/^    int issueload_slowpath(Waddr physaddr, SFR& sfra, LoadStoreInfo lsi) {$/;"	f	struct:CacheSubsystem::CacheHierarchy
issueprefetch	oooexec.cpp	/^void ReorderBufferEntry::issueprefetch(IssueState& state, W64 ra, W64 rb, W64 rc, int cachelevel) {$/;"	f	class:ReorderBufferEntry
issueq_all	ooocore.h	/^    IssueQueue<ISSUE_QUEUE_SIZE> issueq_all;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_count	ooocore-amd-k8.h	/^    W32 issueq_count;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
issueq_count	ooocore-amd-k8.h	/^    int issueq_count;$/;"	m	struct:OutOfOrderModel::ThreadContext
issueq_count	ooocore.h	/^    W32 issueq_count;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
issueq_count	ooocore.h	/^    int issueq_count;$/;"	m	struct:OutOfOrderModel::ThreadContext
issueq_fp	ooocore-amd-k8.h	/^    IssueQueue<36> issueq_fp;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_fp	ooocore.h	/^    IssueQueue<ISSUE_QUEUE_SIZE> issueq_fp;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_int0	ooocore.h	/^    IssueQueue<ISSUE_QUEUE_SIZE> issueq_int0;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_int1	ooocore-amd-k8.h	/^    IssueQueue<8> issueq_int1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_int1	ooocore.h	/^    IssueQueue<ISSUE_QUEUE_SIZE> issueq_int1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_int2	ooocore-amd-k8.h	/^    IssueQueue<8> issueq_int2;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_int3	ooocore-amd-k8.h	/^    IssueQueue<8> issueq_int3;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_ld	ooocore.h	/^    IssueQueue<ISSUE_QUEUE_SIZE> issueq_ld;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
issueq_operation_on_cluster	ooocore-amd-k8.h	1545;"	d
issueq_operation_on_cluster	ooocore.h	1580;"	d
issueq_operation_on_cluster_with_result	ooocore-amd-k8.h	1521;"	d
issueq_operation_on_cluster_with_result	ooocore.h	1545;"	d
issueq_operation_on_cluster_with_result	ooocore.h	1567;"	d
issueq_quota_full	ooocore-amd-k8.h	/^      W64 issueq_quota_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
issueq_quota_full	ooocore.h	/^      W64 issueq_quota_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
issueq_tag_t	ooocore-amd-k8.h	/^  typedef W16 issueq_tag_t;$/;"	t	namespace:OutOfOrderModel
issueq_tag_t	ooocore-amd-k8.h	/^  typedef byte issueq_tag_t;$/;"	t	namespace:OutOfOrderModel
issueq_tag_t	ooocore.h	/^  typedef W16 issueq_tag_t;$/;"	t	namespace:OutOfOrderModel
issueq_tag_t	ooocore.h	/^  typedef byte issueq_tag_t;$/;"	t	namespace:OutOfOrderModel
issues_per_sec	stats.h	/^        double issues_per_sec;$/;"	m	struct:PTLsimStats::simulator::performance::rate
issuestore	ooocore-amd-k8.h	/^      double issuestore;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
issuestore	ooocore.h	/^      double issuestore;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
issuestore	oooexec.cpp	/^int ReorderBufferEntry::issuestore(LoadStoreQueueEntry& state, Waddr& origaddr, W64 ra, W64 rb, W64 rc, bool rcready, PTEUpdate& pteupdate) {$/;"	f	class:ReorderBufferEntry
issuestore	seqcore.cpp	/^  int issuestore(const TransOp& uop, SFR& state, Waddr& origaddr, W64 ra, W64 rb, W64 rc, PTEUpdate& pteupdate) {$/;"	f	struct:SequentialCore
istrans	kernel.h	/^  bool istrans(Waddr mfn) { return fastcheck(mfn << 12, transmap); }$/;"	f	class:AddressSpace
istream	superstl.h	/^    istream(): idstream() { }$/;"	f	class:superstl::istream
istream	superstl.h	/^    istream(const char* filename): idstream(filename) { }$/;"	f	class:superstl::istream
istream	superstl.h	/^    istream(int fd): idstream(fd) { }$/;"	f	class:superstl::istream
istream	superstl.h	/^  class istream: public idstream {$/;"	c	namespace:superstl
isunordered	mathlib.h	29;"	d
isupper	klibc.cpp	/^  inline int isupper(int c) { return ((__ismask(c)&(_U)) != 0); }$/;"	f
isused	superstl.h	/^    bool isused(W64 index) const {$/;"	f	struct:superstl::BitmapAllocator3Level
isvalid	logic.h	/^  bool isvalid(int index) {$/;"	f	struct:FullyAssociativeTags16bit
isvalid	logic.h	/^  bool isvalid(int index) {$/;"	f	struct:FullyAssociativeTags8bit
isvalid	logic.h	/^  bool isvalid(int index) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
isxdigit	klibc.cpp	/^  inline int isxdigit(int c) { return ((__ismask(c)&(_D|_X)) != 0); }$/;"	f
iszero	superstl.h	/^    bool iszero() const { return !this->nonzeroop(); }$/;"	f	class:superstl::bitvec
iterations	ptlsim.cpp	/^W64 iterations = 0;$/;"	v
iterations	superstl.h	/^    int iterations;$/;"	m	class:superstl::CycleTimer
itlb	dcache-amd-k8.h	/^    ITLB itlb;$/;"	m	struct:CacheSubsystem::CacheHierarchy
itlb	dcache-amd-k8.h	/^    struct itlb { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::fetch
itlb	dcache-amd-k8.h	/^    } itlb;$/;"	m	struct:PerContextDataCacheStats::fetch	typeref:struct:PerContextDataCacheStats::fetch::itlb
itlb	dcache.h	/^    ITLB itlb;$/;"	m	struct:CacheSubsystem::CacheHierarchy
itlb	dcache.h	/^    struct itlb { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::fetch
itlb	dcache.h	/^    } itlb;$/;"	m	struct:PerContextDataCacheStats::fetch	typeref:struct:PerContextDataCacheStats::fetch::itlb
itlbcheck	kernel.h	/^  bool itlbcheck(void* page) const { return fastcheck(page, itlbmap); }$/;"	f	class:AddressSpace
itlbclear	kernel.h	/^  void itlbclear(void* page) { make_page_inaccessible(page, itlbmap); }$/;"	f	class:AddressSpace
itlbmap	kernel.h	/^  spat_t itlbmap;$/;"	m	class:AddressSpace
itlbset	kernel.h	/^  void itlbset(void* page) { make_page_accessible(page, itlbmap); }$/;"	f	class:AddressSpace
itlbsize	cpuid.cpp	/^  struct { W32 itlbsize:8, itlbways:8, dtlbsize:8, dtlbways:8; } fields;$/;"	m	struct:TLBInfo::__anon34	file:
itlbways	cpuid.cpp	/^  struct { W32 itlbsize:8, itlbways:8, dtlbsize:8, dtlbways:8; } fields;$/;"	m	struct:TLBInfo::__anon34	file:
join_with_prev_insn	decode.h	/^  bool join_with_prev_insn;$/;"	m	struct:TraceDecoder
k_sa_handler	syscalls.h	/^    kernel_sighandler_t k_sa_handler;$/;"	m	struct:kernel_sigaction
kernel	decode.h	/^  byte kernel;$/;"	m	struct:TraceDecoder
kernel	ptlhwdef.h	/^  W64 mfnlo:28, use64:1, kernel:1, padlo:2, mfnhi:28, df:1, padhi:3;$/;"	m	struct:RIPVirtPhysBase
kernel	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
kernel32	stats.h	/^  W64 kernel32;$/;"	m	struct:EventsInMode
kernel64	stats.h	/^  W64 kernel64;$/;"	m	struct:EventsInMode
kernel_in_syscall	ptlhwdef.h	/^  byte kernel_in_syscall; \/\/ VGCF_IN_SYSCALL$/;"	m	struct:ContextBase
kernel_mode	ptlhwdef.h	/^  byte kernel_mode; \/\/ VGCF_IN_KERNEL$/;"	m	struct:ContextBase
kernel_ptbase_mfn	ptlhwdef.h	/^  Waddr kernel_ptbase_mfn, user_ptbase_mfn;$/;"	m	struct:ContextBase
kernel_sigaction	syscalls.h	/^  struct kernel_sigaction {$/;"	s
kernel_sighandler_t	syscalls.h	/^  typedef void (*kernel_sighandler_t)(int signo, siginfo_t *si, void *context);$/;"	t
kernel_sp	ptlhwdef.h	/^  Waddr kernel_ss, kernel_sp;$/;"	m	struct:ContextBase
kernel_ss	ptlhwdef.h	/^  Waddr kernel_ss, kernel_sp;$/;"	m	struct:ContextBase
kernel_version	stats.h	/^      char kernel_version[32];$/;"	m	struct:PTLsimStats::simulator::run
key	superstl.h	/^    K key;$/;"	m	struct:superstl::KeyValuePair
keyof	datastore.cpp	/^char*& DataStoreNodeLinkManager::keyof(DataStoreNode* obj) {$/;"	f	class:DataStoreNodeLinkManager
keyof	decode-core.cpp	/^  static inline W64& keyof(BasicBlockChunkList* obj) {$/;"	f	struct:BasicBlockChunkListHashtableLinkManager
keyof	decode.h	/^  static inline RIPVirtPhys& keyof(BasicBlock* obj) {$/;"	f	struct:BasicBlockHashtableLinkManager
keyof	ptlmon.cpp	/^  static inline W64& keyof(PendingRequest* obj) {$/;"	f	struct:PendingRequestLinkManager
keyof	superstl.h	/^    static inline K& keyof(entry_t* obj) {$/;"	f	struct:superstl::ObjectHashtableLinkManager
keys	superstl.h	/^    Tkey keys[N];$/;"	m	struct:superstl::FixedKeyValueHashtable
kill	ptlsim.h	/^  bool kill;$/;"	m	struct:PTLsimConfig
kill_after_run	ptlsim.h	/^  bool kill_after_run;$/;"	m	struct:PTLsimConfig
l	ptlhwdef.h	/^	W16 limit:4, avl:1, l:1, d:1, g:1, base2:8;$/;"	m	struct:SegmentDescriptor
l0	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
l1	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
l2	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
l3	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
labeled_histogram	datastore.cpp	/^  W16 isarray:1, summable:1, histogramarray:1, identical_subtrees:1, labeled_histogram:1;$/;"	m	struct:DataStoreNodeHeader	file:
labeled_histogram	datastore.h	/^  W16 summable:1, histogramarray:1, identical_subtrees:1, dynamic:1, labeled_histogram:1;$/;"	m	struct:DataStoreNode
labeled_histogram	datastore.h	/^  W32 histogramarray:1, labeled_histogram:1, summable:1, identical_subtrees:1;$/;"	m	struct:DataStoreNodeTemplateBase
labels	datastore.h	/^  char** labels;$/;"	m	struct:DataStoreNode
labels	datastore.h	/^  char** labels;$/;"	m	struct:DataStoreNodeTemplate
largest_free_extent_bytes	mm.cpp	/^  size_t largest_free_extent_bytes() const {$/;"	f	struct:ExtentAllocator
last_commit_at_cycle	ooocore-amd-k8.h	/^    W64 last_commit_at_cycle;$/;"	m	struct:OutOfOrderModel::ThreadContext
last_commit_at_cycle	ooocore.h	/^    W64 last_commit_at_cycle;$/;"	m	struct:OutOfOrderModel::ThreadContext
last_flags_update_was_atomic	decode.h	/^  bool last_flags_update_was_atomic;$/;"	m	struct:TraceDecoder
last_guest_rip_triggering_walk	ptlxen-memory.cpp	/^Waddr last_guest_rip_triggering_walk = 0;$/;"	v
last_guest_uuid_triggering_walk	ptlxen-memory.cpp	/^Waddr last_guest_uuid_triggering_walk = 0;$/;"	v
last_printed_status_at_cycle	ptlsim.cpp	/^W64 last_printed_status_at_cycle;$/;"	v
last_printed_status_at_ticks	ptlsim.cpp	/^W64 last_printed_status_at_ticks;$/;"	v
last_printed_status_at_user_insn	ptlsim.cpp	/^W64 last_printed_status_at_user_insn;$/;"	v
last_stats_captured_at_cycle	ptlsim.cpp	/^W64 last_stats_captured_at_cycle = 0;$/;"	v
last_virtaddr_triggering_walk	ptlxen-memory.cpp	/^Waddr last_virtaddr_triggering_walk = 0;$/;"	v
lastoption	config.h	/^  ConfigurationOption* lastoption;$/;"	m	struct:ConfigurationParserBase
lasttarget	ptlhwdef.h	/^  W64 lasttarget;$/;"	m	struct:BasicBlockBase
lasttime	dcache-amd-k8.h	/^    W32 lasttime;$/;"	m	struct:CacheSubsystem::CacheLine
lasttime	dcache-amd-k8.h	/^    W32 lasttime;$/;"	m	struct:CacheSubsystem::CacheLineWithValidMask
lasttime	dcache.h	/^    W32 lasttime;$/;"	m	struct:CacheSubsystem::CacheLine
lasttime	dcache.h	/^    W32 lasttime;$/;"	m	struct:CacheSubsystem::CacheLineWithValidMask
lastused	ptlhwdef.h	/^  W64 lastused;$/;"	m	struct:BasicBlockBase
latch	logic.h	/^  latch() {$/;"	f	struct:latch
latch	logic.h	/^  latch(const T& t) { newdata = t; }$/;"	f	struct:latch
latch	logic.h	/^struct latch {$/;"	s
latency	ooocore-amd-k8.h	/^    byte latency;  \/\/ Latency in cycles, assuming ideal bypass$/;"	m	struct:OutOfOrderModel::FunctionalUnitInfo
latency	ooocore.h	/^    byte latency;  \/\/ Latency in cycles, assuming ideal bypass$/;"	m	struct:OutOfOrderModel::FunctionalUnitInfo
ld	ooocore.h	/^      W64 ld[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::issue::width
ld	ooocore.h	/^      W64 ld[OutOfOrderModel::MAX_ISSUE_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::MAX_ISSUE_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::writeback::width
ld_st_truly_unaligned	ooocore-amd-k8.h	/^        byte taken:1, predtaken:1, ld_st_truly_unaligned:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
ld_st_truly_unaligned	ooocore-amd-k8.h	/^    byte ld_st_truly_unaligned;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
ld_st_truly_unaligned	ooocore.h	/^        byte taken:1, predtaken:1, ld_st_truly_unaligned:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
ld_st_truly_unaligned	ooocore.h	/^    byte ld_st_truly_unaligned;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
ldq_full	ooocore-amd-k8.h	/^      W64 ldq_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
ldq_full	ooocore.h	/^      W64 ldq_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
ldreg	ooocore-amd-k8.h	/^      W64 ldreg;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::alloc
ldreg	ooocore.h	/^      W64 ldreg;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::alloc
ldreg	ptlhwdef.h	/^    } ldreg;$/;"	m	union:IssueState::__anon114	typeref:struct:IssueState::__anon114::__anon116
ldt_seg_base_cache	kernel.cpp	/^W64 ldt_seg_base_cache[LDT_SIZE];$/;"	v
ldtsize	ptlhwdef.h	/^  W16 ldtsize;$/;"	m	struct:ContextBase
ldtvirt	ptlhwdef.h	/^  Waddr ldtvirt;$/;"	m	struct:ContextBase
le	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
legacy16	stats.h	/^  W64 legacy16;$/;"	m	struct:EventsInMode
len	kernel.cpp	/^  W32 len;$/;"	m	struct:old_mmap32_arg_struct	file:
len	superstl.h	/^    size_t len;$/;"	m	class:superstl::readline
length	datastore.h	/^  W16 length; \/\/ length of this structure$/;"	m	struct:DataStoreNodeTemplateBase
length	kernel.cpp	/^  unsigned long length;$/;"	m	struct:MemoryMapExtent	file:
length	ptlcalls.h	/^  W64 length;       \/\/ length of command string$/;"	m	struct:PTLsimCommandDescriptor
length	ptlxen.h	/^      size_t length;$/;"	m	struct:PTLsimHostCall::__anon99::__anon102
length	ptlxen.h	/^      size_t length;$/;"	m	struct:PTLsimHostCall::__anon99::__anon104
length	superstl.h	/^    int length;$/;"	m	class:superstl::stringbuf
length	superstl.h	/^    int length;$/;"	m	struct:superstl::substring
length	superstl.h	/^    size_t length;$/;"	m	class:superstl::dynarray
length	superstl.h	/^    static const int length = size;$/;"	m	struct:superstl::array
length	superstl.h	/^    static const int length = size;$/;"	m	struct:superstl::stack
level1	ptlhwdef.h	/^  struct { W32 offset:12, level1:10, level2:10; } x86;$/;"	m	struct:VirtAddr::__anon127
level1	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } lm;$/;"	m	struct:VirtAddr::__anon125
level1	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } pae;$/;"	m	struct:VirtAddr::__anon126
level1	superstl.h	/^    bitmap_t level1[N \/ 64];$/;"	m	struct:superstl::BitmapAllocator3Level
level2	ptlhwdef.h	/^  struct { W32 offset:12, level1:10, level2:10; } x86;$/;"	m	struct:VirtAddr::__anon127
level2	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } lm;$/;"	m	struct:VirtAddr::__anon125
level2	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } pae;$/;"	m	struct:VirtAddr::__anon126
level2	superstl.h	/^    bitmap_t level2[N \/ 4096];$/;"	m	struct:superstl::BitmapAllocator3Level
level3	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } lm;$/;"	m	struct:VirtAddr::__anon125
level3	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } pae;$/;"	m	struct:VirtAddr::__anon126
level3	superstl.h	/^    bitmap_t level3[1];$/;"	m	struct:superstl::BitmapAllocator3Level
level4	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } lm;$/;"	m	struct:VirtAddr::__anon125
level4	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } pae;$/;"	m	struct:VirtAddr::__anon126
lfence	ooocore-amd-k8.h	/^      W64 lfence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::fence
lfence	ooocore-amd-k8.h	/^    W8 store:1, lfence:1, sfence:1, entry_valid:1;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
lfence	ooocore.h	/^      W64 lfence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::fence
lfence	ooocore.h	/^    W8 store:1, lfence:1, sfence:1, entry_valid:1;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
lfrq	dcache-amd-k8.h	/^    LoadFillReqQueue<LFRQ_SIZE> lfrq;$/;"	m	struct:CacheSubsystem::CacheHierarchy
lfrq	dcache-amd-k8.h	/^  struct lfrq {$/;"	s	struct:DataCacheStats
lfrq	dcache-amd-k8.h	/^  } lfrq;$/;"	m	struct:DataCacheStats	typeref:struct:DataCacheStats::lfrq
lfrq	dcache.h	/^    LoadFillReqQueue<LFRQ_SIZE> lfrq;$/;"	m	struct:CacheSubsystem::CacheHierarchy
lfrq	dcache.h	/^  struct lfrq {$/;"	s	struct:DataCacheStats
lfrq	dcache.h	/^  } lfrq;$/;"	m	struct:DataCacheStats	typeref:struct:DataCacheStats::lfrq
lfrq_or_missbuf_full	dcache-amd-k8.h	/^    bool lfrq_or_missbuf_full() const { return lfrq.full() | missbuf.full(); }$/;"	f	struct:CacheSubsystem::CacheHierarchy
lfrq_or_missbuf_full	dcache.h	/^    bool lfrq_or_missbuf_full() const { return lfrq.full() | missbuf.full(); }$/;"	f	struct:CacheSubsystem::CacheHierarchy
lfrqmap	dcache-amd-k8.h	/^      bitvec<LFRQ_SIZE> lfrqmap;  \/\/ which LFRQ entries should this load wake up?$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
lfrqmap	dcache.h	/^      bitvec<LFRQ_SIZE> lfrqmap;  \/\/ which LFRQ entries should this load wake up?$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
lfrqslot	ooocore-amd-k8.h	/^    W16s lfrqslot;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
lfrqslot	ooocore-amd-k8.h	/^    W16s lfrqslot;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
lfrqslot	ooocore.h	/^    W16s lfrqslot;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
lfrqslot	ooocore.h	/^    W16s lfrqslot;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
lfrqslot	ptlhwdef.h	/^      W64 physaddr:48, flags:8, lfrqslot:8;$/;"	m	struct:IssueState::__anon114::__anon116
lg	globals.h	/^template <> struct lg<1> { static const int value = 0; };$/;"	s
lg	globals.h	/^template <int n> struct lg { static const int value = 1 + lg<n\/2>::value; };$/;"	s
lg10	globals.h	/^template <> struct lg10<0> { static const int value = 0; };$/;"	s
lg10	globals.h	/^template <> struct lg10<1> { static const int value = 0; };$/;"	s
lg10	globals.h	/^template <int n> struct lg10 { static const int value = 1 + lg10<n\/10>::value; };$/;"	s
likely	globals.h	49;"	d
limit	datastore.h	/^  W32 limit; \/\/ length limit in bytes, for char strings$/;"	m	struct:DataStoreNodeTemplateBase
limit	kernel.cpp	/^  W32 limit;$/;"	m	struct:user_desc_32bit	file:
limit	ptlhwdef.h	/^	W16 limit:4, avl:1, l:1, d:1, g:1, base2:8;$/;"	m	struct:SegmentDescriptor
limit	ptlhwdef.h	/^  W64 limit;$/;"	m	struct:SegmentDescriptorCache
limit0	ptlhwdef.h	/^	W16 limit0;$/;"	m	struct:SegmentDescriptor
limit_in_pages	kernel.cpp	/^  W32 limit_in_pages:1;$/;"	m	struct:user_desc_32bit	file:
limits	globals.h	/^template <typename T> struct limits { static const T min = 0; static const T max = 0; };$/;"	s
line	ptlstats.cpp	/^  void line(float x1, float y1, float x2, float y2) {$/;"	f	class:SVGCreator
line_deadtime_histogram	dcache-amd-k8.h	/^    static W64 line_deadtime_histogram[DEADTIME_SLOTS];$/;"	m	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
line_deadtime_histogram	dcache.cpp	/^template <> W64 L1IStatsCollectorBase::line_deadtime_histogram[DCACHE_L1I_LINE_DEADTIME_SLOTS] = {};$/;"	m	class:L1IStatsCollectorBase	file:
line_deadtime_histogram	dcache.cpp	/^template <> W64 L1StatsCollectorBase::line_deadtime_histogram[DCACHE_L1_LINE_DEADTIME_SLOTS] = {};$/;"	m	class:L1StatsCollectorBase	file:
line_deadtime_histogram	dcache.cpp	/^template <> W64 L2StatsCollectorBase::line_deadtime_histogram[DCACHE_L2_LINE_DEADTIME_SLOTS] = {};$/;"	m	class:L2StatsCollectorBase	file:
line_deadtime_histogram	dcache.cpp	/^template <> W64 L3StatsCollectorBase::line_deadtime_histogram[DCACHE_L3_LINE_DEADTIME_SLOTS] = {};$/;"	m	class:L3StatsCollectorBase	file:
line_deadtime_histogram	dcache.h	/^    static W64 line_deadtime_histogram[DEADTIME_SLOTS];$/;"	m	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
line_hitcount_histogram	dcache-amd-k8.h	/^    static W64 line_hitcount_histogram[HITCOUNT_SLOTS];$/;"	m	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
line_hitcount_histogram	dcache.cpp	/^template <> W64 L1IStatsCollectorBase::line_hitcount_histogram[DCACHE_L1I_LINE_HITCOUNT_SLOTS] = {};$/;"	m	class:L1IStatsCollectorBase	file:
line_hitcount_histogram	dcache.cpp	/^template <> W64 L1StatsCollectorBase::line_hitcount_histogram[DCACHE_L1_LINE_HITCOUNT_SLOTS] = {};$/;"	m	class:L1StatsCollectorBase	file:
line_hitcount_histogram	dcache.cpp	/^template <> W64 L2StatsCollectorBase::line_hitcount_histogram[DCACHE_L2_LINE_HITCOUNT_SLOTS] = {};$/;"	m	class:L2StatsCollectorBase	file:
line_hitcount_histogram	dcache.cpp	/^template <> W64 L3StatsCollectorBase::line_hitcount_histogram[DCACHE_L3_LINE_HITCOUNT_SLOTS] = {};$/;"	m	class:L3StatsCollectorBase	file:
line_hitcount_histogram	dcache.h	/^    static W64 line_hitcount_histogram[HITCOUNT_SLOTS];$/;"	m	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
line_lifetime_histogram	dcache-amd-k8.h	/^    static W64 line_lifetime_histogram[LIFETIME_SLOTS];$/;"	m	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
line_lifetime_histogram	dcache.cpp	/^template <> W64 L1IStatsCollectorBase::line_lifetime_histogram[DCACHE_L1I_LINE_LIFETIME_SLOTS] = {};$/;"	m	class:L1IStatsCollectorBase	file:
line_lifetime_histogram	dcache.cpp	/^template <> W64 L2StatsCollectorBase::line_lifetime_histogram[DCACHE_L2_LINE_LIFETIME_SLOTS] = {};$/;"	m	class:L2StatsCollectorBase	file:
line_lifetime_histogram	dcache.cpp	/^template <> W64 L3StatsCollectorBase::line_lifetime_histogram[DCACHE_L3_LINE_LIFETIME_SLOTS] = {};$/;"	m	class:L3StatsCollectorBase	file:
line_lifetime_histogram	dcache.h	/^    static W64 line_lifetime_histogram[LIFETIME_SLOTS];$/;"	m	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
linesize	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:4, ways:4, size:16; } fields;$/;"	m	struct:L2CacheInfo::__anon36	file:
linesize	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:8, ways:8, size:8; } fields;$/;"	m	struct:CacheInfo::__anon35	file:
linespertag	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:4, ways:4, size:16; } fields;$/;"	m	struct:L2CacheInfo::__anon36	file:
linespertag	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:8, ways:8, size:8; } fields;$/;"	m	struct:CacheInfo::__anon35	file:
link	mm.cpp	/^    selflistlink link;$/;"	m	struct:SlabAllocator::PageHeader	file:
link	superstl.h	/^      selflistlink link;$/;"	m	struct:superstl::ChunkList::Chunk
link	superstl.h	/^      selflistlink* link;$/;"	m	struct:superstl::SelfHashtable::Iterator
linked	superstl.h	/^    bool linked() const {$/;"	f	class:superstl::queuelink
linked	superstl.h	/^    bool linked() const {$/;"	f	class:superstl::selflistlink
linked	superstl.h	/^    bool linked() const {$/;"	f	class:superstl::selfqueuelink
linkof	datastore.cpp	/^selflistlink* DataStoreNodeLinkManager::linkof(DataStoreNode* obj) {$/;"	f	class:DataStoreNodeLinkManager
linkof	decode-core.cpp	/^  static inline selflistlink* linkof(BasicBlockChunkList* obj) {$/;"	f	struct:BasicBlockChunkListHashtableLinkManager
linkof	decode.h	/^  static inline selflistlink* linkof(BasicBlock* obj) {$/;"	f	struct:BasicBlockHashtableLinkManager
linkof	superstl.h	/^    static inline selflistlink* linkof(T* obj) { return (selflistlink*)obj; }$/;"	f	struct:superstl::ObjectLinkManager
linkof	superstl.h	/^    static inline selflistlink* linkof(entry_t* obj) {$/;"	f	struct:superstl::ObjectHashtableLinkManager
list	superstl.h	/^    T list[N];$/;"	m	struct:superstl::GenericChunkList
list	superstl.h	/^    T list[N];$/;"	m	struct:superstl::SearchableChunkList16Entry
listid	ooocore-amd-k8.h	/^    int listid;$/;"	m	struct:OutOfOrderModel::StateList
listid	ooocore.h	/^    int listid;$/;"	m	struct:OutOfOrderModel::StateList
lm	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } lm;$/;"	m	union:VirtAddr	typeref:struct:VirtAddr::__anon125
lma	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
lme	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
lo	globals.h	/^  struct { W32 lo; W32s hi; } hilo;$/;"	m	struct:W64orDouble::__anon27
lo	ptlhwdef.h	/^  W64 lo, hi;$/;"	m	struct:XMMReg
lo	ptlhwdef.h	/^  struct { W32 lo, hi; } w32;$/;"	m	struct:SSEType::__anon119
lo	ptlhwdef.h	/^  struct { float lo, hi; } f;$/;"	m	struct:SSEType::__anon118
lo	superstl.cpp	/^    W64 lo;$/;"	m	struct:superstl::W128	file:
lo	superstl.cpp	/^    W64 lo;$/;"	m	struct:superstl::W128s	file:
lo	superstl.h	/^    T lo, hi;$/;"	m	struct:superstl::range
load	dcache-amd-k8.h	/^  struct load {$/;"	s	struct:DataCacheStats
load	dcache-amd-k8.h	/^  struct load {$/;"	s	struct:PerContextDataCacheStats
load	dcache-amd-k8.h	/^  } load;$/;"	m	struct:DataCacheStats	typeref:struct:DataCacheStats::load
load	dcache-amd-k8.h	/^  } load;$/;"	m	struct:PerContextDataCacheStats	typeref:struct:PerContextDataCacheStats::load
load	dcache.h	/^  struct load {$/;"	s	struct:DataCacheStats
load	dcache.h	/^  struct load {$/;"	s	struct:PerContextDataCacheStats
load	dcache.h	/^  } load;$/;"	m	struct:DataCacheStats	typeref:struct:DataCacheStats::load
load	dcache.h	/^  } load;$/;"	m	struct:PerContextDataCacheStats	typeref:struct:PerContextDataCacheStats::load
load	ooocore-amd-k8.h	/^    struct load {$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache
load	ooocore-amd-k8.h	/^    } load;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load
load	ooocore.h	/^    struct load {$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache
load	ooocore.h	/^    } load;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load
load	seqcore.cpp	/^  W64 load(W64 addr) const {$/;"	f	struct:TransactionalMemory
load	seqcore.cpp	/^  bool load(W64 addr, W64& data, byte& bytemask) const {$/;"	f	struct:TransactionalMemory
load_fs	ptlxen.cpp	/^static inline void load_fs(W16 selector) {$/;"	f	file:
load_gs	ptlxen.cpp	/^static inline void load_gs(W16 selector) {$/;"	f	file:
load_store_second_phase	ooocore-amd-k8.h	/^        byte inherit_sfr_used:1, rcready:1, load_store_second_phase:1, predicted_alias:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
load_store_second_phase	ooocore-amd-k8.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
load_store_second_phase	ooocore.h	/^        byte inherit_sfr_used:1, rcready:1, load_store_second_phase:1, predicted_alias:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
load_store_second_phase	ooocore.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
load_to_store_parallel_forwarding_buffer	ooocore-amd-k8.h	/^    W64 load_to_store_parallel_forwarding_buffer[LOAD_FU_COUNT];$/;"	m	struct:OutOfOrderModel::ThreadContext
load_to_store_parallel_forwarding_buffer	ooocore.h	/^    W64 load_to_store_parallel_forwarding_buffer[LOAD_FU_COUNT];$/;"	m	struct:OutOfOrderModel::ThreadContext
load_user_physaddr	ptlxen.h	/^T load_user_physaddr(W64 physaddr) {$/;"	f
load_user_virt_prechecked	ptlxen-memory.cpp	/^T load_user_virt_prechecked(Waddr source, Level1PTE ptelo, Level1PTE ptehi) {$/;"	f
loadimpl	seqcore.cpp	/^W64 TransactionalMemory<N, setcount>::loadimpl(W64 physaddr) {$/;"	f	class:TransactionalMemory
loadphys	kernel.h	/^static inline W64 loadphys(Waddr addr) {$/;"	f
loadphys	ptlxen-memory.cpp	/^W64 loadphys(Waddr physaddr) {$/;"	f
loads_in_flight	ooocore-amd-k8.h	/^    int loads_in_flight;$/;"	m	struct:OutOfOrderModel::ThreadContext
loads_in_flight	ooocore.h	/^    int loads_in_flight;$/;"	m	struct:OutOfOrderModel::ThreadContext
loads_in_this_cycle	ooocore-amd-k8.h	/^    int loads_in_this_cycle;$/;"	m	struct:OutOfOrderModel::ThreadContext
loads_in_this_cycle	ooocore.h	/^    int loads_in_this_cycle;$/;"	m	struct:OutOfOrderModel::ThreadContext
loadstore	ooocore-amd-k8.h	/^      } loadstore;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
loadstore	ooocore.h	/^      } loadstore;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
loadstore	seqcore.cpp	/^    } loadstore;$/;"	m	union:SequentialCoreEvent::__anon86	typeref:struct:SequentialCoreEvent::__anon86::__anon88	file:
loadwakeup	oooexec.cpp	/^void ReorderBufferEntry::loadwakeup() {$/;"	f	class:ReorderBufferEntry
lock	logic.h	/^  void lock(int way) { unlockedmap[way] = 0; }$/;"	f	struct:LockableFullyAssociativeTags
lock	superstl.h	/^    T lock;$/;"	m	struct:superstl::Spinlock
lock	superstl.h	/^    T& lock;$/;"	m	struct:superstl::ScopedLock
lock_acquired	ooocore-amd-k8.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
lock_acquired	ooocore.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
locked	dcache-amd-k8.h	/^    static void locked(V& slot, W64 tag, int way) { }$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
locked	dcache.h	/^    static void locked(V& slot, W64 tag, int way) { }$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
locked	logic.h	/^  static void locked(V& slot, T tag, int way) { }$/;"	f	struct:NullAssociativeArrayStatisticsCollector
locked	ptlhwdef.h	/^  byte internal:1, locked:1, cachelevel:2, datatype:4;$/;"	m	struct:TransOpBase
locking_rob	ooocore-amd-k8.h	/^        W16 locking_rob;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
locking_rob	ooocore.h	/^        W16 locking_rob;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
locking_uuid	ooocore-amd-k8.h	/^        W64 locking_uuid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
locking_uuid	ooocore.h	/^        W64 locking_uuid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
locking_vcpuid	ooocore-amd-k8.h	/^        byte locking_vcpuid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
locking_vcpuid	ooocore.h	/^        byte locking_vcpuid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
locking_vcpuid	superstl.h	/^    W16s locking_vcpuid;$/;"	m	struct:superstl::RecursiveMutex
log10	globals.h	404;"	d
log2	decode-x87.cpp	38;"	d	file:
log2	decode-x87.cpp	88;"	d	file:
log2	globals.h	399;"	d
log_backwards_from_trigger_rip	ptlsim.h	/^  W64 log_backwards_from_trigger_rip;$/;"	m	struct:PTLsimConfig
log_buffer_base	ptlmon.cpp	/^  char* log_buffer_base;$/;"	m	struct:XenController	file:
log_buffer_size	ptlsim.h	/^  W64 log_buffer_size;$/;"	m	struct:PTLsimConfig
log_code_page_ops	decode-core.cpp	/^static const bool log_code_page_ops = 0;$/;"	v	file:
log_filename	ptlsim.h	/^  stringbuf log_filename;$/;"	m	struct:PTLsimConfig
log_on_console	ptlsim.h	/^  bool log_on_console;$/;"	m	struct:PTLsimConfig
log_ptlsim_boot	ptlmon.cpp	/^bool log_ptlsim_boot = 0;$/;"	v
log_ptlsim_boot	ptlsim.h	/^  bool log_ptlsim_boot;$/;"	m	struct:PTLsimConfig
log_trigger_virt_addr_end	ptlsim.h	/^  W64 log_trigger_virt_addr_end;$/;"	m	struct:PTLsimConfig
log_trigger_virt_addr_start	ptlsim.h	/^  W64 log_trigger_virt_addr_start;$/;"	m	struct:PTLsimConfig
logable	ooocore.cpp	29;"	d	file:
logable	ooocore.cpp	30;"	d	file:
logable	oooexec.cpp	28;"	d	file:
logable	oooexec.cpp	29;"	d	file:
logable	ooopipe.cpp	28;"	d	file:
logable	ooopipe.cpp	29;"	d	file:
logable	ptlsim.h	238;"	d
logable	seqcore.cpp	26;"	d	file:
logable	seqcore.cpp	27;"	d	file:
logbuf_spinlock	ptlxen.h	/^  Spinlock logbuf_spinlock;$/;"	m	struct:PTLsimMonitorInfo
logbuf_tail	ptlxen.h	/^  W32 logbuf_tail;$/;"	m	struct:PTLsimMonitorInfo
logenable	ptlsim.cpp	/^bool logenable = 0;$/;"	v
logfile	ooocore-amd-k8.h	/^    ostream* logfile;$/;"	m	struct:OutOfOrderModel::EventLog
logfile	ooocore.h	/^    ostream* logfile;$/;"	m	struct:OutOfOrderModel::EventLog
logfile	ptlsim.cpp	/^ostream logfile;$/;"	v
logfile	seqcore.cpp	/^  ostream* logfile;$/;"	m	struct:SequentialCoreEventLog	file:
loglevel	ptlsim.h	/^  W64 loglevel;$/;"	m	struct:PTLsimConfig
logscale	ptlstats.cpp	/^static inline double logscale(double x) {$/;"	f	file:
long_div	superstl.cpp	/^  void long_div(W128& quotient, W64& remainder, const W128& dividend, W64 divisor) {$/;"	f	namespace:superstl
long_idiv	superstl.cpp	/^  void long_idiv(W128s& quotient, W64s& remainder, W128s& dividend, W64s divisor) {$/;"	f	namespace:superstl
long_le	superstl.cpp	/^  bool long_le(W128& a, W128& b) {$/;"	f	namespace:superstl
long_neg	superstl.cpp	/^  void long_neg(W128s& n) {$/;"	f	namespace:superstl
long_shl	superstl.cpp	/^  void long_shl(W128& a) {$/;"	f	namespace:superstl
long_shr	superstl.cpp	/^  void long_shr(W128& a) {$/;"	f	namespace:superstl
long_sub	superstl.cpp	/^  bool long_sub(W128& a, W128& b) {$/;"	f	namespace:superstl
lookup	seqcore.cpp	/^  int lookup(W64 addr) const {$/;"	f	struct:TransactionalMemory
lookup	seqcore.cpp	/^  int lookup(W64 addr, int& set) const {$/;"	f	struct:TransactionalMemory
lookup	superstl.h	/^    int lookup(T value) const {$/;"	f	struct:superstl::FixedValueHashtable
lookup	superstl.h	/^    int lookup(Tkey key) const {$/;"	f	struct:superstl::FixedKeyValueHashtable
lowbits	globals.h	181;"	d
lowlevel_init_done	ptlxen.cpp	/^bool lowlevel_init_done = 0;$/;"	v
lru	logic.h	/^  int lru() const {$/;"	f	struct:FullyAssociativeTags
lru	logic.h	/^  int lru() const {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
lru	logic.h	/^  int lru() const {$/;"	f	struct:LockableFullyAssociativeTags
lsap	ooocore-amd-k8.h	/^    LoadStoreAliasPredictor lsap;$/;"	m	struct:OutOfOrderModel::ThreadContext
lsap	ooocore.h	/^    LoadStoreAliasPredictor lsap;$/;"	m	struct:OutOfOrderModel::ThreadContext
lsb	superstl.h	/^    size_t lsb() const { return this->lsbop(); }$/;"	f	class:superstl::bitvec
lsb	superstl.h	/^    size_t lsb(int notfound) const { return this->lsbop(notfound); }$/;"	f	class:superstl::bitvec
lsbindex	globals.h	/^inline unsigned int lsbindex(W64 n) { return lsbindex64(n); }$/;"	f
lsbindex32	globals.h	/^inline unsigned int lsbindex32(W32 n) { return x86_bsf32(n); }$/;"	f
lsbindex64	globals.h	/^inline unsigned int lsbindex64(W64 n) { return x86_bsf64(n); }$/;"	f
lsbindex64	globals.h	/^inline unsigned int lsbindex64(W64 n) {$/;"	f
lsbindex8bit	globals.h	/^static inline int lsbindex8bit(byte x) {$/;"	f
lsbindexi32	globals.h	/^inline int lsbindexi32(W32 n) {$/;"	f
lsbindexi64	globals.h	/^inline unsigned int lsbindexi64(W64 n) {$/;"	f
lsbindexlut8bit	superstl.cpp	/^const byte lsbindexlut8bit[256] = {$/;"	v
lsbop	superstl.h	/^    size_t lsbop() const { return 0; }$/;"	f	struct:superstl::bitvecbase
lsbop	superstl.h	/^    size_t lsbop() const { return __builtin_ctzl(w); }$/;"	f	struct:superstl::bitvecbase
lsbop	superstl.h	/^    size_t lsbop() const {$/;"	f	struct:superstl::bitvecbase
lsbop	superstl.h	/^    size_t lsbop(size_t notfound) const { return (w) ? __builtin_ctzl(w) : notfound; }$/;"	f	struct:superstl::bitvecbase
lsbop	superstl.h	/^    size_t lsbop(size_t notfound) const { return notfound; }$/;"	f	struct:superstl::bitvecbase
lsbop	superstl.h	/^    size_t lsbop(size_t notfound) const {$/;"	f	struct:superstl::bitvecbase
lsi	dcache-amd-k8.h	/^    LoadStoreInfo lsi;$/;"	m	struct:CacheSubsystem::LoadFillReq
lsi	dcache.h	/^    LoadStoreInfo lsi;$/;"	m	struct:CacheSubsystem::LoadFillReq
lsq	ooocore-amd-k8.h	/^    LoadStoreQueueEntry* lsq;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
lsq	ooocore-amd-k8.h	/^    W16 lsq;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
lsq	ooocore.h	/^    LoadStoreQueueEntry* lsq;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
lsq	ooocore.h	/^    W16 lsq;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
lsq_states	ooocore-amd-k8.h	/^    ListOfStateLists lsq_states;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
lsq_states	ooocore-amd-k8.h	/^    ListOfStateLists lsq_states;$/;"	m	struct:OutOfOrderModel::ThreadContext
lsq_states	ooocore.h	/^    ListOfStateLists lsq_states;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
lsq_states	ooocore.h	/^    ListOfStateLists lsq_states;$/;"	m	struct:OutOfOrderModel::ThreadContext
lsw	mathlib.cpp	/^    W32 lsw;$/;"	m	struct:math::__anon78::__anon79	file:
machine	ooocore-amd-k8.h	/^    OutOfOrderMachine& machine;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
machine	ooocore.h	/^    OutOfOrderMachine& machine;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
machinetable	ptlsim.cpp	/^Hashtable<const char*, PTLsimMachine*, 1>* machinetable = null;$/;"	v
magic	datastore.cpp	/^  W32 magic;$/;"	m	struct:DataStoreNodeHeader	file:
magic	datastore.h	/^  W32 magic; \/\/ node descriptor magic number and version$/;"	m	struct:DataStoreNodeTemplateBase
magic	datastore.h	/^  W64 magic;$/;"	m	struct:StatsFileHeader
magic	mm.cpp	/^    W32 magic;$/;"	m	struct:SlabAllocator::PageHeader	file:
magic	ptlcalls.h	/^  W64 magic; \/\/ "PTLsim64" = 0x34366d69734c5450$/;"	m	struct:PTLsimThunkPage
main	cpuid.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	dstbuild.temp.cpp	/^int main(int argc, char** argv) {$/;"	f
main	kernel.cpp	/^int main(int argc, char** argv) {$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
main	main.s	/^main:     file format elf32-i386$/;"	l
main	makeusage.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	ptlctl.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	ptlmon.cpp	/^int main(int argc, char** argv) {$/;"	f
main	ptlstats.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	ptlxen.cpp	/^int main(int argc, char** argv) {$/;"	f
make_accessible	kernel.cpp	/^void AddressSpace::make_accessible(void* p, Waddr size, spat_t top) {$/;"	f	class:AddressSpace
make_alu_and_branchop_all_sizes_all_excepts	uopimpl.cpp	914;"	d	file:
make_aluop3s_all_sizes_all_shifts	uopimpl.cpp	311;"	d	file:
make_aluop_all_sizes	uopimpl.cpp	154;"	d	file:
make_anyop_all_sizes	uopimpl.cpp	146;"	d	file:
make_branchop_all_excepts	uopimpl.cpp	893;"	d	file:
make_condop	uopimpl.cpp	788;"	d	file:
make_condop_all_conds_all_sizes	uopimpl.cpp	791;"	d	file:
make_condop_all_conds_all_sizes_all_compare_sizes	uopimpl.cpp	824;"	d	file:
make_condop_all_conds_any	uopimpl.cpp	768;"	d	file:
make_condop_all_sizes	uopimpl.cpp	789;"	d	file:
make_condop_all_sizes_all_compare_sizes	uopimpl.cpp	816;"	d	file:
make_exp_aluop	uopimpl.cpp	108;"	d	file:
make_exp_aluop3_all_sizes_all_shifts	uopimpl.cpp	341;"	d	file:
make_exp_aluop_all_sizes	uopimpl.cpp	156;"	d	file:
make_exp_floatop	uopimpl.cpp	1002;"	d	file:
make_exp_floatop_alltypes	uopimpl.cpp	1033;"	d	file:
make_exp_shiftop_64bit	uopimpl.cpp	418;"	d	file:
make_fp_convop_allrounds	uopimpl.cpp	1284;"	d	file:
make_inaccessible	kernel.cpp	/^void AddressSpace::make_inaccessible(void* p, Waddr size, spat_t top) {$/;"	f	class:AddressSpace
make_intdest_fp_convop	uopimpl.cpp	1209;"	d	file:
make_intdest_fp_convop_allrounds	uopimpl.cpp	1225;"	d	file:
make_intdest_fp_convop_x87_64bit	uopimpl.cpp	1240;"	d	file:
make_intsrc_fp_convop	uopimpl.cpp	1199;"	d	file:
make_mask_control_info	ptlhwdef.h	/^static inline W32 make_mask_control_info(int ms, int mc, int ds) {$/;"	f
make_mulop_all_sizes	uopimpl.cpp	590;"	d	file:
make_page_accessible	kernel.h	/^  void make_page_accessible(void* address, spat_t top) {$/;"	f	class:AddressSpace
make_page_inaccessible	kernel.h	/^  void make_page_inaccessible(void* address, spat_t top) {$/;"	f	class:AddressSpace
make_ptl_page_writable	ptlxen.h	/^static inline int make_ptl_page_writable(void* virt, bool writable) {$/;"	f
make_shiftop_all_sizes	uopimpl.cpp	410;"	d	file:
make_simple_fp_convop	uopimpl.cpp	1175;"	d	file:
make_trunctype_fp_convop	uopimpl.cpp	1266;"	d	file:
make_two_input_x87_func_with_pop	decode-x87.cpp	21;"	d	file:
make_two_output_x87_func_with_push	decode-x87.cpp	123;"	d	file:
make_unary_x87_func	decode-x87.cpp	90;"	d	file:
make_x86_aluop2	uopimpl.cpp	116;"	d	file:
make_x86_aluop2_chained_64bit	uopimpl.cpp	262;"	d	file:
make_x86_aluop3	uopimpl.cpp	288;"	d	file:
make_x86_aluop3_chained_64bit	uopimpl.cpp	357;"	d	file:
make_x86_aluop_all_sizes	uopimpl.cpp	160;"	d	file:
make_x86_floatop2	uopimpl.cpp	1050;"	d	file:
make_x86_floatop_alltypes	uopimpl.cpp	1070;"	d	file:
make_x86_mulop	uopimpl.cpp	575;"	d	file:
make_x86_mulop_all_sizes	uopimpl.cpp	598;"	d	file:
make_x86_pack_vecop2_named_sizes	uopimpl.cpp	1366;"	d	file:
make_x86_pack_vecop_named_sizes	uopimpl.cpp	1386;"	d	file:
make_x86_shiftop	uopimpl.cpp	388;"	d	file:
make_x86_shiftop_all_sizes	uopimpl.cpp	412;"	d	file:
make_x86_vecop2	uopimpl.cpp	1313;"	d	file:
make_x86_vecop2_named_sizes	uopimpl.cpp	1295;"	d	file:
make_x86_vecop_allsizes	uopimpl.cpp	1315;"	d	file:
make_x86_vecop_named_sizes	uopimpl.cpp	1319;"	d	file:
makeccbits	ptlhwdef.h	1179;"	d
makecond	uopimpl.cpp	1488;"	d	file:
makecond	uopimpl.cpp	1509;"	d	file:
makeopbits	ptlhwdef.h	1186;"	d
malloc	mm.cpp	/^asmlinkage void* malloc(size_t size) {$/;"	f
mantissa	globals.h	/^  struct { W64 mantissa:51, qnan:1, exponent:11, negative:1; } ieeenan;$/;"	m	struct:W64orDouble::__anon29
mantissa	globals.h	/^  struct { W64 mantissa:52, exponent:11, negative:1; } ieee;$/;"	m	struct:W64orDouble::__anon28
mantissa	mathlib.cpp	/^  struct { W32 mantissa:22, quiet_nan:1, exponent:8, negative:1; } ieee_nan;$/;"	m	struct:math::ieee754_float::__anon82	file:
mantissa	mathlib.cpp	/^  struct { W32 mantissa:23, exponent:8, negative:1; } ieee;$/;"	m	struct:math::ieee754_float::__anon81	file:
mantissa0	mathlib.cpp	/^    W32 mantissa0:19, quiet_nan:1, exponent:11, negative:1;$/;"	m	struct:math::ieee754_double::__anon84	file:
mantissa0	mathlib.cpp	/^    W32 mantissa0:20, exponent:11, negative:1;$/;"	m	struct:math::ieee754_double::__anon83	file:
mantissa1	mathlib.cpp	/^    W32 mantissa1:32;$/;"	m	struct:math::ieee754_double::__anon83	file:
mantissa1	mathlib.cpp	/^    W32 mantissa1:32;$/;"	m	struct:math::ieee754_double::__anon84	file:
map	datastore.h	/^  DataStoreNode* map(const F& func) const {$/;"	f	struct:DataStoreNode
map_page	ptlmon.cpp	/^  byte* map_page(mfn_t mfn, int prot = PROT_READ, void* addr = null) {$/;"	f	struct:XenController
map_pages	ptlmon.cpp	/^  void* map_pages(mfn_t* mfns, size_t count, int prot = PROT_READ, void* base = null, int flags = 0) {$/;"	f	struct:XenController
map_phys_page	ptlxen-memory.cpp	/^int map_phys_page(mfn_t mfn, Waddr rip) {$/;"	f
mapped_virt_to_phys	kernel.h	/^static inline Waddr mapped_virt_to_phys(void* rawvirt) {$/;"	f
mapped_virt_to_phys	ptlxen.h	/^static inline W64 mapped_virt_to_phys(void* rawvirt) {$/;"	f
marked	ptlhwdef.h	/^  byte final_insn_in_bb:1, final_arch_in_insn:1, final_flags_in_insn:1, any_flags_in_insn:1, pad:3, marked:1;$/;"	m	struct:TransOpBase
marked	ptlhwdef.h	/^  byte marked:1, mfence:1, x87:1, sse:1, nondeterministic:1, brtype:3;$/;"	m	struct:BasicBlockBase
marker_sequence_number	ptlxen.cpp	/^W64 marker_sequence_number = 0;$/;"	v
mask	dcache-amd-k8.h	/^    byte mask;$/;"	m	struct:CacheSubsystem::LoadFillReq
mask	dcache.h	/^    byte mask;$/;"	m	struct:CacheSubsystem::LoadFillReq
mask	globals.h	/^template <typename T, typename A> static inline T mask(T x, A a) { return (T)(((T)x) & ((T)(a-1))); }$/;"	f
mask	superstl.h	/^    W64 mask;$/;"	m	struct:superstl::bitmaskstring
mask	superstl.h	/^    W64 mask;$/;"	m	struct:superstl::bytemaskstring
mask	superstl.h	/^    bitvec<N> mask(size_t count) const { $/;"	f	class:superstl::bitvec
mask_evtchn	ptlxen-events.cpp	/^void mask_evtchn(int port) {$/;"	f
mask_interrupts	ptlsim.h	/^  bool mask_interrupts;$/;"	m	struct:PTLsimConfig
masked_invalidate	logic.h	/^  void masked_invalidate(const bitvec<size>& slotmask) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
masked_match	logic.h	/^  bitvec<size> masked_match(base_t targettag, base_t tagmask) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
maskevents	ptlhwdef.h	/^  W64 rip:48, cpl:2, maskevents:1, cs:13;$/;"	m	struct:TrapTarget
maskof	superstl.h	/^    static T maskof(size_t index) { return (static_cast<T>(1)) << bitof(index); }$/;"	f	struct:superstl::bitvecbase
maskop	superstl.h	/^    void maskop(size_t count) { }$/;"	f	struct:superstl::bitvecbase
maskop	superstl.h	/^    void maskop(size_t count) {$/;"	f	struct:superstl::bitvecbase
maskptr	globals.h	/^template <typename T, typename A> static inline T* maskptr(T* x, A a) { return (T*)mask((Waddr)x, a); }$/;"	f
match	logic.h	/^  bitvec<size> match(base_t target) const {$/;"	f	struct:FullyAssociativeTags16bit
match	logic.h	/^  bitvec<size> match(base_t target) const {$/;"	f	struct:FullyAssociativeTags8bit
match	logic.h	/^  bitvec<size> match(const vec_t target) const {$/;"	f	struct:FullyAssociativeTags16bit
match	logic.h	/^  bitvec<size> match(const vec_t target) const {$/;"	f	struct:FullyAssociativeTags8bit
match	logic.h	/^  int match(T target) {$/;"	f	struct:FullyAssociativeTags
match	logic.h	/^  int match(T target) {$/;"	f	struct:LockableFullyAssociativeTags
match	logic.h	/^  int match(base_t tag) const {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
match	logic.h	/^  int match(const vec16b* targetslices) const {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
matchany	logic.h	/^  bitvec<size> matchany(base_t target) const {$/;"	f	struct:FullyAssociativeTags16bit
matchany	logic.h	/^  bitvec<size> matchany(base_t target) const {$/;"	f	struct:FullyAssociativeTags8bit
matchany	logic.h	/^  bitvec<size> matchany(const vec_t target) const {$/;"	f	struct:FullyAssociativeTags16bit
matchany	logic.h	/^  bitvec<size> matchany(const vec_t target) const {$/;"	f	struct:FullyAssociativeTags8bit
math	mathlib.cpp	/^namespace math {$/;"	n	file:
math	mathlib.h	/^namespace math {$/;"	n
max	globals.h	/^template <typename T> static inline T max(const T& a, const T& b) { typeof (a) _a = a; typeof (b) _b = b; return _a > _b ? _a : _b; }$/;"	f
max	globals.h	/^template <typename T> struct limits { static const T min = 0; static const T max = 0; };$/;"	m	struct:limits
max	mathlib.cpp	26;"	d	file:
max_objects_per_page	mm.cpp	/^  W16 max_objects_per_page;$/;"	m	struct:SlabAllocator	file:
max_pages	ptlxen.h	/^  W64 max_pages;$/;"	m	struct:PTLsimMonitorInfo
maxdepth	datastore.h	/^  int maxdepth;$/;"	m	struct:DataStoreNodePrintSettings
maxdepth	ptlstats.cpp	/^  W64 maxdepth;$/;"	m	struct:PTLstatsConfig	file:
mbidx	dcache.h	/^    W8s  mbidx;$/;"	m	struct:CacheSubsystem::LoadFillReq
mbtag	ooocore-amd-k8.h	/^    W8s mbtag;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
mbtag	ooocore.h	/^    W8s mbtag;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
mbz	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
mbz	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
mbz	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
mc	ptlhwdef.h	/^  struct { W32 ms:6, mc:6, ds:6; } info;$/;"	m	struct:MaskControlInfo::__anon132
mce	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
mcr	mathlib.cpp	/^  static int mcr(const mp_no *x, const mp_no *y, int p) {$/;"	f	namespace:math::mpa	file:
mem	dcache-amd-k8.h	/^      W64 mem;$/;"	m	struct:PerContextDataCacheStats::fetch::hit
mem	dcache-amd-k8.h	/^      W64 mem;$/;"	m	struct:PerContextDataCacheStats::load::hit
mem	dcache.h	/^      W64 mem;$/;"	m	struct:PerContextDataCacheStats::fetch::hit
mem	dcache.h	/^      W64 mem;$/;"	m	struct:PerContextDataCacheStats::load::hit
mem	decode.h	/^    } mem;$/;"	m	union:DecodedOperand::__anon142	typeref:struct:DecodedOperand::__anon142::__anon145
mem_to_L3	dcache-amd-k8.h	/^      W64 mem_to_L3;$/;"	m	struct:DataCacheStats::missbuf::deliver
mem_to_L3	dcache.h	/^      W64 mem_to_L3;$/;"	m	struct:DataCacheStats::missbuf::deliver
memchr	klibc.cpp	/^void *memchr(const void *s, int c, size_t n)$/;"	f
memchr	klibc.cpp	/^void* memchr(const void * cs,int c,size_t count)$/;"	f
memcmp	klibc.cpp	/^int memcmp(const void *cs, const void *ct, size_t count)$/;"	f
memcmp	klibc.cpp	1101;"	d	file:
memcmp	klibc.cpp	183;"	d	file:
memcmp	klibc.cpp	80;"	d	file:
memcount	ptlhwdef.h	/^  W16 memcount;$/;"	m	struct:BasicBlockBase
memcpy	klibc.cpp	/^extern "C" void* memcpy(void* t, const void* f, size_t n) {$/;"	f
memcpy	klibc.cpp	/^void *memcpy(void *dest, const void *src, size_t count)$/;"	f
memcpy	klibc.cpp	47;"	d	file:
memcpy	lowlevel-64bit.S	/^memcpy:		$/;"	l
memlocked	ooocore-amd-k8.h	/^      W64 memlocked;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
memlocked	ooocore.h	/^      W64 memlocked;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
memmove	klibc.cpp	/^void *memmove(void *dest, const void *src, size_t count)$/;"	f
memory_fence_if_locked	decode-core.cpp	/^bool TraceDecoder::memory_fence_if_locked(bool end_of_x86_insn, int type) {$/;"	f	class:TraceDecoder
memscan	klibc.cpp	/^static inline void * memscan(void * addr, int c, size_t size)$/;"	f	file:
memscan	klibc.cpp	/^void *memscan(void *addr, int c, size_t size)$/;"	f
memset	klibc.cpp	/^extern "C" void* memset(void* s, int c, size_t count) {$/;"	f
memset	klibc.cpp	/^void *memset(void *s, int c, size_t count)$/;"	f
merge_string_list	ptlmon.cpp	/^stringbuf& merge_string_list(stringbuf& sb, const char* sep, int n, char** list) {$/;"	f
meta	branchpred.cpp	/^  BimodalPredictor<METASIZE> meta;$/;"	m	struct:CombinedPredictor	file:
meta	branchpred.h	/^  W32 ctxid:8, flags:8, bimodal:1, twolevel:1, meta:1, ras_push:1;$/;"	m	struct:PredictorUpdate
mfence	ooocore-amd-k8.h	/^      W64 mfence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::fence
mfence	ooocore.h	/^      W64 mfence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::fence
mfence	ptlhwdef.h	/^  byte marked:1, mfence:1, x87:1, sse:1, nondeterministic:1, brtype:3;$/;"	m	struct:BasicBlockBase
mfn	ptlhwdef.h	/^  W64 mfn;$/;"	m	struct:BasicBlockChunkList
mfn	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
mfn	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
mfn	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
mfn	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
mfn	ptlxen.h	/^  Waddr mfn:28, type:3, pin:1;$/;"	m	struct:PageFrameType
mfn_count	ptlxen.h	/^  W64 mfn_count;$/;"	m	struct:PTLsimMonitorInfo
mfn_t	ptlxen.h	/^typedef unsigned long mfn_t;$/;"	t
mfn_to_linear_pfn	ptlxen.h	/^static inline W64 mfn_to_linear_pfn(W64 mfn) {$/;"	f
mfnhi	ptlhwdef.h	/^  W64 mfnlo:28, use64:1, kernel:1, padlo:2, mfnhi:28, df:1, padhi:3;$/;"	m	struct:RIPVirtPhysBase
mfnhi_loc	ptlhwdef.h	/^  BasicBlockChunkList::Locator mfnhi_loc;$/;"	m	struct:BasicBlockBase
mfnlo	ptlhwdef.h	/^  W64 mfnlo:28, use64:1, kernel:1, padlo:2, mfnhi:28, df:1, padhi:3;$/;"	m	struct:RIPVirtPhysBase
mfnlo_loc	ptlhwdef.h	/^  BasicBlockChunkList::Locator mfnlo_loc;$/;"	m	struct:BasicBlockBase
microcode	stats.h	/^  W64 microcode;$/;"	m	struct:EventsInMode
microcode_assist	decode-core.cpp	/^void TraceDecoder::microcode_assist(int assistid, Waddr selfrip, Waddr nextrip) {$/;"	f	class:TraceDecoder
microcode_assist	ooocore-amd-k8.h	/^      W64 microcode_assist;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
microcode_assist	ooocore.h	/^      W64 microcode_assist;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
min	globals.h	/^template <typename T> static inline T min(const T& a, const T& b) { typeof (a) _a = a; typeof (b) _b = b; return _a > _b ? _b : _a; }$/;"	f
min	globals.h	/^template <typename T> struct limits { static const T min = 0; static const T max = 0; };$/;"	m	struct:limits
min	mathlib.cpp	27;"	d	file:
mispredicted	ooocore-amd-k8.h	/^        byte mispredicted:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon49
mispredicted	ooocore.h	/^        byte mispredicted:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon13
miss	ooocore-amd-k8.h	/^        W64 miss;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
miss	ooocore.h	/^        W64 miss;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
missbuf	dcache-amd-k8.h	/^    MissBuffer<MISSBUF_COUNT> missbuf;$/;"	m	struct:CacheSubsystem::CacheHierarchy
missbuf	dcache-amd-k8.h	/^  struct missbuf {$/;"	s	struct:DataCacheStats
missbuf	dcache-amd-k8.h	/^  } missbuf;$/;"	m	struct:DataCacheStats	typeref:struct:DataCacheStats::missbuf
missbuf	dcache.h	/^    MissBuffer<MISSBUF_COUNT> missbuf;$/;"	m	struct:CacheSubsystem::CacheHierarchy
missbuf	dcache.h	/^  struct missbuf {$/;"	s	struct:DataCacheStats
missbuf	dcache.h	/^  } missbuf;$/;"	m	struct:DataCacheStats	typeref:struct:DataCacheStats::missbuf
missbuf	ooocore-amd-k8.h	/^        W16s missbuf;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon44
missbuf	ooocore.h	/^        W16s missbuf;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon8
missbuf_full	ooocore-amd-k8.h	/^          W64 missbuf_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
missbuf_full	ooocore.h	/^          W64 missbuf_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
missbuf_state_names	dcache-amd-k8.h	/^  static const char* missbuf_state_names[] = {"idle", "mem->L3", "L3->L2", "L2->L1"};$/;"	v
missbuf_state_names	dcache.h	/^  static const char* missbuf_state_names[] = {"idle", "mem->L3", "L3->L2", "L2->L1"};$/;"	v
missbufs	dcache-amd-k8.h	/^    Entry missbufs[SIZE];$/;"	m	struct:CacheSubsystem::MissBuffer
missbufs	dcache.h	/^    Entry missbufs[SIZE];$/;"	m	struct:CacheSubsystem::MissBuffer
misses	dcache-amd-k8.h	/^      W64 misses;$/;"	m	struct:PerContextDataCacheStats::fetch::itlb
misses	dcache-amd-k8.h	/^      W64 misses;$/;"	m	struct:PerContextDataCacheStats::load::dtlb
misses	dcache.h	/^      W64 misses;$/;"	m	struct:PerContextDataCacheStats::fetch::itlb
misses	dcache.h	/^      W64 misses;$/;"	m	struct:PerContextDataCacheStats::load::dtlb
misspeculated	ooocore-amd-k8.h	/^      W64 misspeculated;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
misspeculated	ooocore.h	/^      W64 misspeculated;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
mm_event_buffer	mm.cpp	/^MemoryManagerEvent mm_event_buffer[mm_event_buffer_size];$/;"	v
mm_event_buffer_end	mm.cpp	/^MemoryManagerEvent* mm_event_buffer_end = null;$/;"	v
mm_event_buffer_head	mm.cpp	/^MemoryManagerEvent* mm_event_buffer_head = null;$/;"	v
mm_event_buffer_size	mm.cpp	/^static const int mm_event_buffer_size = 16384; \/\/ i.e. 256 KB$/;"	v	file:
mm_event_buffer_tail	mm.cpp	/^MemoryManagerEvent* mm_event_buffer_tail = null;$/;"	v
mm_log_buffer_size	ptlsim.h	/^  W64 mm_log_buffer_size;$/;"	m	struct:PTLsimConfig
mm_logfile	ptlsim.h	/^  stringbuf mm_logfile;$/;"	m	struct:PTLsimConfig
mm_logging_fd	mm.cpp	/^int mm_logging_fd = -1;$/;"	v
mm_reclaim_handler_t	mm.h	/^typedef void (*mm_reclaim_handler_t)(size_t bytes, int urgency);$/;"	t
mmap	kernel.cpp	/^void* AddressSpace::mmap(void* start, Waddr length, int prot, int flags, int fd, W64 offset) {$/;"	f	class:AddressSpace
mmap	superstl.cpp	/^  void* idstream::mmap(long long size) {$/;"	f	class:superstl::idstream
mmap_invalid	mm.h	62;"	d
mmap_invalid	mm.h	67;"	d
mmap_invalid	ptlmon.cpp	204;"	d	file:
mmap_valid	mm.h	63;"	d
mmap_valid	mm.h	68;"	d
mmap_valid	ptlmon.cpp	205;"	d	file:
mmuqueue	ptlxen-memory.cpp	/^mmu_update_t mmuqueue[1024];$/;"	v
mmuqueue_count	ptlxen-memory.cpp	/^int mmuqueue_count = 0;$/;"	v
mod	decode.h	/^  byte rm:3, reg:3, mod:2; $/;"	m	struct:ModRMByte
mode64	decode.h	/^  byte extbase:1, extindex:1, extreg:1, mode64:1, insnbits:4; $/;"	m	struct:RexByte
mode_bargraph	ptlstats.cpp	/^  stringbuf mode_bargraph;$/;"	m	struct:PTLstatsConfig	file:
mode_collect	ptlstats.cpp	/^  stringbuf mode_collect;$/;"	m	struct:PTLstatsConfig	file:
mode_collect_average	ptlstats.cpp	/^  stringbuf mode_collect_average;$/;"	m	struct:PTLstatsConfig	file:
mode_collect_sum	ptlstats.cpp	/^  stringbuf mode_collect_sum;$/;"	m	struct:PTLstatsConfig	file:
mode_histogram	ptlstats.cpp	/^  stringbuf mode_histogram;$/;"	m	struct:PTLstatsConfig	file:
mode_slice	ptlstats.cpp	/^  stringbuf mode_slice;$/;"	m	struct:PTLstatsConfig	file:
mode_slice_graph	ptlstats.cpp	/^  stringbuf mode_slice_graph;$/;"	m	struct:PTLstatsConfig	file:
mode_subtree	ptlstats.cpp	/^  stringbuf mode_subtree;$/;"	m	struct:PTLstatsConfig	file:
mode_table	ptlstats.cpp	/^  stringbuf mode_table;$/;"	m	struct:PTLstatsConfig	file:
model	cpuid.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon32	file:
model	decode-complex.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon70	file:
modrm	decode.h	/^  ModRMByte modrm;$/;"	m	struct:TraceDecoder
modulo_ranges_intersect	globals.h	/^inline bool modulo_ranges_intersect(int a0, int a1, int b0, int b1, int size) {$/;"	f
modulo_span	globals.h	/^inline int modulo_span(int lower, int upper, int modulus) {$/;"	f
mone	mathlib.cpp	/^  static const number mone           = {{0x00000000, 0xbff00000}}; \/* -1     *\/$/;"	v	file:
monitor_breakout_port	ptlxen.h	/^  W16 monitor_breakout_port;$/;"	m	struct:PTLsimMonitorInfo
monitor_hostcall_port	ptlxen.h	/^  W16 monitor_hostcall_port;$/;"	m	struct:PTLsimMonitorInfo
monitor_upcall_port	ptlxen.h	/^  W16 monitor_upcall_port;$/;"	m	struct:PTLsimMonitorInfo
move_reg_or_mem	decode-core.cpp	/^void TraceDecoder::move_reg_or_mem(const DecodedOperand& rd, const DecodedOperand& ra, int force_rd) {$/;"	f	class:TraceDecoder
mp	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
mp1	mathlib.cpp	/^  static const mynumber   mp1 = {{0x58000000, 0x3FF921FB}};  \/* 1.5707963407039642     *\/$/;"	v	file:
mp1	mathlib.cpp	/^  static const mynumber mp1 = {{0x58000000, 0x3FF921FB }};\/*  1.5707963407039642      *\/$/;"	v	file:
mp2	mathlib.cpp	/^  static const mynumber   mp2 = {{0x40000000, 0xBE4DDE97}};  \/*-1.3909067675399456e-08 *\/$/;"	v	file:
mp2	mathlib.cpp	/^  static const mynumber mp2 = {{0x3C000000, 0xBE4DDE97 }};\/* -1.3909067564377153e-08  *\/$/;"	v	file:
mp3	mathlib.cpp	/^  static const mynumber mp3 = {{0x99D747F2, 0xBC8CB3B3 }};\/* -4.9789962505147994e-17  *\/$/;"	v	file:
mp_no	mathlib.cpp	/^  struct mp_no {\/* This structure holds the details of a multi-precision     *\/$/;"	s	namespace:math::mpa	file:
mpa	mathlib.cpp	/^namespace mpa {$/;"	n	namespace:math	file:
mprotect	kernel.cpp	/^int AddressSpace::mprotect(void* start, Waddr length, int prot) {$/;"	f	class:AddressSpace
mqueryall	kernel.cpp	/^int mqueryall(MemoryMapExtent* startmap, size_t count) {$/;"	f
mremap	kernel.cpp	/^void* AddressSpace::mremap(void* start, Waddr oldlength, Waddr newlength, int flags) {$/;"	f	class:AddressSpace
ms	ptlhwdef.h	/^  struct { W32 ms:6, mc:6, ds:6; } info;$/;"	m	struct:MaskControlInfo::__anon132
msb	superstl.h	/^    size_t msb() const { return this->msbop(); }$/;"	f	class:superstl::bitvec
msb	superstl.h	/^    size_t msb(int notfound) const { return this->msbop(notfound); }$/;"	f	class:superstl::bitvec
msbindex	globals.h	/^inline unsigned int msbindex(W64 n) { return msbindex64(n); }$/;"	f
msbindex32	globals.h	/^inline unsigned int msbindex32(W32 n) { return x86_bsr32(n); }$/;"	f
msbindex64	globals.h	/^inline unsigned int msbindex64(W64 n) { return x86_bsr64(n); }$/;"	f
msbindex64	globals.h	/^inline unsigned int msbindex64(W64 n) {$/;"	f
msbindexi32	globals.h	/^inline int msbindexi32(W32 n) {$/;"	f
msbindexi64	globals.h	/^inline unsigned int msbindexi64(W64 n) {$/;"	f
msbop	superstl.h	/^    size_t msbop() const { return 0; }$/;"	f	struct:superstl::bitvecbase
msbop	superstl.h	/^    size_t msbop() const { return __builtin_clzl(w); }$/;"	f	struct:superstl::bitvecbase
msbop	superstl.h	/^    size_t msbop() const {$/;"	f	struct:superstl::bitvecbase
msbop	superstl.h	/^    size_t msbop(size_t notfound) const { return (w) ? __builtin_clzl(w) : notfound; }$/;"	f	struct:superstl::bitvecbase
msbop	superstl.h	/^    size_t msbop(size_t notfound) const { return notfound; }$/;"	f	struct:superstl::bitvecbase
msbop	superstl.h	/^    size_t msbop(size_t notfound) const {$/;"	f	struct:superstl::bitvecbase
msw	mathlib.cpp	/^    W32 msw;$/;"	m	struct:math::__anon78::__anon79	file:
munmap	kernel.cpp	/^int AddressSpace::munmap(void* start, Waddr length) {$/;"	f	class:AddressSpace
mux	globals.h	/^template <typename T> static inline T mux(T sel, T v1, T v0) { return (sel & v1) | ((~sel) & v0); }$/;"	f
mux64	globals.h	/^static inline W64 mux64(W64 sel, W64 v0, W64 v1) { return (sel & v1) | ((~sel) & v0); }$/;"	f
mxcsr	ptlhwdef.h	/^  MXCSR mxcsr;$/;"	m	struct:ContextBase
mxcsr	ptlhwdef.h	/^  W32 mxcsr;$/;"	m	struct:FXSAVEStruct
mxcsr_mask	ptlhwdef.h	/^  W32 mxcsr_mask;$/;"	m	struct:FXSAVEStruct
mynumber	mathlib.cpp	/^  } mynumber;$/;"	t	namespace:math	typeref:union:math::__anon76	file:
n	datastore.h	/^    DataStoreNode* n;$/;"	m	union:DataStoreNode::DataType
n	ptlhwdef.h	/^  int n;$/;"	m	struct:flagstring
n	superstl.h	/^    int n;$/;"	m	struct:superstl::bitmaskstring
n	superstl.h	/^    int n;$/;"	m	struct:superstl::bitstring
n	superstl.h	/^    int n;$/;"	m	struct:superstl::bytemaskstring
n	superstl.h	/^    int n;$/;"	m	struct:superstl::bytestring
n	superstl.h	/^    int n;$/;"	m	struct:superstl::hexstring
name	config.h	/^  const char* name;$/;"	m	struct:ConfigurationOption
name	datastore.h	/^  char* name;$/;"	m	struct:DataStoreNode
name	datastore.h	/^  char* name;$/;"	m	struct:DataStoreNodeTemplate
name	datastore.h	/^  char* name;$/;"	m	struct:StatsIndexRecordLink
name	ooocore-amd-k8.h	/^    char* name;$/;"	m	struct:OutOfOrderModel::Cluster
name	ooocore-amd-k8.h	/^    char* name;$/;"	m	struct:OutOfOrderModel::StateList
name	ooocore-amd-k8.h	/^    const char* name;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
name	ooocore.h	/^    char* name;$/;"	m	struct:OutOfOrderModel::StateList
name	ooocore.h	/^    const char* name;$/;"	m	struct:OutOfOrderModel::Cluster
name	ooocore.h	/^    const char* name;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
name	ptlhwdef.h	/^  const char* name;$/;"	m	struct:OpcodeInfo
name_to_uuid	datastore.h	/^  Hashtable<const char*, W64, 256> name_to_uuid;$/;"	m	struct:StatsFileReader
namelength	datastore.cpp	/^  byte namelength;$/;"	m	struct:DataStoreNodeHeader	file:
namelist	datastore.h	/^  StatsIndexRecordLink* namelist;$/;"	m	struct:StatsFileWriter
nameof	ptlhwdef.cpp	/^stringbuf& nameof(stringbuf& sbname, const TransOp& uop) {$/;"	f
nameof	ptlhwdef.h	/^inline const char* nameof(int opcode) { return (opcode < OP_MAX_OPCODE) ? opinfo[opcode].name : "INVALID"; }$/;"	f
names	ptlxen-common.cpp	/^const char* PageFrameType::names[] = {"normal", "L1", "L2", "L3", "L4", "(5)", "(6)", "invalid"};$/;"	m	class:PageFrameType	file:
names	ptlxen.h	/^  static const char* names[COUNT];$/;"	m	struct:PageFrameType
nan	globals.h	74;"	d
native	ptlsim.h	/^  bool native;$/;"	m	struct:PTLsimConfig
native_auxv_t	kernel.h	/^typedef Elf32_auxv_t native_auxv_t;$/;"	t
native_auxv_t	kernel.h	/^typedef Elf64_auxv_t native_auxv_t;$/;"	t
native_cpuid	stats.h	/^      W64 native_cpuid;$/;"	m	struct:PTLsimStats::simulator::run
native_hz	stats.h	/^      W64 native_hz;$/;"	m	struct:PTLsimStats::simulator::run
ne	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
negative	globals.h	/^  struct { W64 mantissa:51, qnan:1, exponent:11, negative:1; } ieeenan;$/;"	m	struct:W64orDouble::__anon29
negative	globals.h	/^  struct { W64 mantissa:52, exponent:11, negative:1; } ieee;$/;"	m	struct:W64orDouble::__anon28
negative	mathlib.cpp	/^    W32 mantissa0:19, quiet_nan:1, exponent:11, negative:1;$/;"	m	struct:math::ieee754_double::__anon84	file:
negative	mathlib.cpp	/^    W32 mantissa0:20, exponent:11, negative:1;$/;"	m	struct:math::ieee754_double::__anon83	file:
negative	mathlib.cpp	/^  struct { W32 mantissa:22, quiet_nan:1, exponent:8, negative:1; } ieee_nan;$/;"	m	struct:math::ieee754_float::__anon82	file:
negative	mathlib.cpp	/^  struct { W32 mantissa:23, exponent:8, negative:1; } ieee;$/;"	m	struct:math::ieee754_float::__anon81	file:
newdata	logic.h	/^  T newdata;$/;"	m	struct:latch
newlayer	ptlstats.cpp	/^  void newlayer(const char* name = null) {$/;"	f	class:SVGCreator
next	config.h	/^  ConfigurationOption* next;$/;"	m	struct:ConfigurationOption
next	superstl.h	/^        T* next() {$/;"	f	struct:superstl::ChunkList::Chunk::Iterator
next	superstl.h	/^      KeyValuePair<K, T>* next() {$/;"	f	struct:superstl::Hashtable::Iterator
next	superstl.h	/^      T* next() {$/;"	f	struct:superstl::ChunkList::Iterator
next	superstl.h	/^      T* next() {$/;"	f	struct:superstl::GenericChunkList::Iterator
next	superstl.h	/^      T* next() {$/;"	f	struct:superstl::SearchableChunkList16Entry::Iterator
next	superstl.h	/^      T* next() {$/;"	f	struct:superstl::SelfHashtable::Iterator
next	superstl.h	/^    T next[N];$/;"	m	struct:superstl::FixedIntegerQueueSet
next	superstl.h	/^    ptr_t next[N];$/;"	m	struct:superstl::FixedKeyValueHashtable
next	superstl.h	/^    ptr_t next[N];$/;"	m	struct:superstl::FixedValueHashtable
next	superstl.h	/^    queuelink<T>* next;$/;"	m	class:superstl::queuelink
next	superstl.h	/^    selflistlink* next;$/;"	m	class:superstl::selflistlink
next	superstl.h	/^    selfqueuelink* next;$/;"	m	class:superstl::selfqueuelink
next	superstl.h	/^    shortptr< GenericChunkList<T, N> > next;$/;"	m	struct:superstl::GenericChunkList
next	superstl.h	/^    shortptr<SearchableChunkList16Entry<T>, W32, 0> next;$/;"	m	struct:superstl::SearchableChunkList16Entry
next_list	seqcore.cpp	/^  W16s next_list[N];$/;"	m	struct:TransactionalMemory	file:
next_rip	seqcore.cpp	/^      W64 next_rip;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon93	file:
next_upcall_uuid	ptlmon.cpp	/^  W64 next_upcall_uuid;$/;"	m	struct:XenController	file:
next_uuid	datastore.h	/^  W64 next_uuid() const { return header.record_count; }$/;"	f	struct:StatsFileWriter
nextchunk	superstl.h	/^      Chunk* nextchunk;$/;"	m	struct:superstl::ChunkList::Iterator
nextlsb	superstl.h	/^    size_t nextlsb(size_t prev, int notfound = -1) const { return this->nextlsbop(prev, notfound); }$/;"	f	class:superstl::bitvec
nextlsbop	superstl.h	/^    size_t nextlsbop(size_t __prev, size_t notfound) const {$/;"	f	struct:superstl::bitvecbase
nextlsbop	superstl.h	/^    size_t nextlsbop(size_t prev, size_t notfound) const {$/;"	f	struct:superstl::bitvecbase
nextlsbop	superstl.h	/^    size_t nextlsbop(size_t, size_t) const { return 0; }$/;"	f	struct:superstl::bitvecbase
nextpoint	ptlstats.cpp	/^  void nextpoint(float x, float y) {$/;"	f	class:SVGCreator
no	ooocore-amd-k8.h	/^      W64 no;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::setflags
no	ooocore.h	/^      W64 no;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::setflags
no_branches_between_renamings	ooocore-amd-k8.h	/^        byte transient:1, all_consumers_sourced_from_bypass:1, no_branches_between_renamings:1, dest_renamed_before_writeback:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon55
no_branches_between_renamings	ooocore-amd-k8.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
no_branches_between_renamings	ooocore.h	/^        byte transient:1, all_consumers_sourced_from_bypass:1, no_branches_between_renamings:1, dest_renamed_before_writeback:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon19
no_branches_between_renamings	ooocore.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
no_fu	ooocore-amd-k8.h	/^      W64 no_fu;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
no_fu	ooocore.h	/^      W64 no_fu;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
no_lfrq_mb	dcache-amd-k8.h	/^      W64 no_lfrq_mb;      $/;"	m	struct:PerContextDataCacheStats::fetch::tlbwalk
no_lfrq_mb	dcache-amd-k8.h	/^      W64 no_lfrq_mb;$/;"	m	struct:PerContextDataCacheStats::load::tlbwalk
no_lfrq_mb	dcache.h	/^      W64 no_lfrq_mb;      $/;"	m	struct:PerContextDataCacheStats::fetch::tlbwalk
no_lfrq_mb	dcache.h	/^      W64 no_lfrq_mb;$/;"	m	struct:PerContextDataCacheStats::load::tlbwalk
no_partial_flag_updates_per_insn	decode.h	/^  bool no_partial_flag_updates_per_insn;$/;"	m	struct:TraceDecoder
noalias	globals.h	122;"	d
noinline	globals.h	46;"	d
nondeterministic	ptlhwdef.h	/^  byte marked:1, mfence:1, x87:1, sse:1, nondeterministic:1, brtype:3;$/;"	m	struct:BasicBlockBase
none	ooocore-amd-k8.h	/^      W64 none;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
none	ooocore-amd-k8.h	/^      W64 none;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::renamed
none	ooocore.h	/^      W64 none;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
none	ooocore.h	/^      W64 none;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::renamed
nonnull	ooocore-amd-k8.h	/^    bool nonnull() const { return (index() != PHYS_REG_NULL); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
nonnull	ooocore.h	/^    bool nonnull() const { return (index() != PHYS_REG_NULL); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
nonzero	superstl.h	/^    bool nonzero() const { return this->nonzeroop(); }$/;"	f	class:superstl::bitvec
nonzeroop	superstl.h	/^    bool nonzeroop() const { return (!!w); }$/;"	f	struct:superstl::bitvecbase
nonzeroop	superstl.h	/^    bool nonzeroop() const { return false; }$/;"	f	struct:superstl::bitvecbase
nonzeroop	superstl.h	/^    bool nonzeroop() const {$/;"	f	struct:superstl::bitvecbase
norm	mathlib.cpp	/^  static void norm(const mp_no *x, double *y, int p)$/;"	f	namespace:math::mpa	file:
nouserflags	ptlhwdef.h	/^  byte cond:4, setflags:3, nouserflags:1;$/;"	m	struct:TransOpBase
null	globals.h	27;"	d
nullptr	globals.h	/^template <typename T> static inline T* nullptr() { return (T*)(Waddr)0; }$/;"	f
number	mathlib.cpp	/^  typedef union { int i[2]; double d; } number;$/;"	t	namespace:math::mpa	typeref:union:math::mpa::__anon80	file:
nw	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
nx	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
nx	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
nx	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
nx	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
nx	ptlhwdef.h	/^  byte p:1, rw:1, us:1, rsv:1, nx:1, pad:3;$/;"	m	struct:PageFaultErrorCode
nxe	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
object_of_interest	mm.cpp	/^void* object_of_interest = 0;$/;"	v
objof	datastore.cpp	/^DataStoreNode* DataStoreNodeLinkManager::objof(selflistlink* link) {$/;"	f	class:DataStoreNodeLinkManager
objof	decode-core.cpp	/^  static inline BasicBlockChunkList* objof(selflistlink* link) {$/;"	f	struct:BasicBlockChunkListHashtableLinkManager
objof	decode.h	/^  static inline BasicBlock* objof(selflistlink* link) {$/;"	f	struct:BasicBlockHashtableLinkManager
objof	superstl.h	/^    static inline T* objof(selflistlink* link) { return (T*)link; }$/;"	f	struct:superstl::ObjectLinkManager
objof	superstl.h	/^    static inline entry_t* objof(selflistlink* link) {$/;"	f	struct:superstl::ObjectHashtableLinkManager
objsize	mm.cpp	/^  W16 objsize;$/;"	m	struct:SlabAllocator	file:
odstream	superstl.cpp	/^  odstream::odstream() {$/;"	f	class:superstl::odstream
odstream	superstl.h	/^    odstream(const char* filename, bool append = false, int bufsize = 65536) {$/;"	f	class:superstl::odstream
odstream	superstl.h	/^    odstream(int fd) {$/;"	f	class:superstl::odstream
odstream	superstl.h	/^  class odstream {$/;"	c	namespace:superstl
oe	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
oe	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
offset	config.h	/^  Waddr offset;$/;"	m	struct:ConfigurationOption
offset	decode.h	/^      W64s offset;$/;"	m	struct:DecodedOperand::__anon142::__anon145
offset	injectcode.cpp	/^  W32 offset;$/;"	m	struct:FarJumpDescriptor	file:
offset	kernel.cpp	/^  W32 offset;$/;"	m	struct:FarJumpDescriptor	file:
offset	kernel.cpp	/^  W32 offset;$/;"	m	struct:old_mmap32_arg_struct	file:
offset	kernel.cpp	/^  unsigned long long offset;$/;"	m	struct:MemoryMapExtent	file:
offset	ptlhwdef.h	/^  struct { W32 offset:12, level1:10, level2:10; } x86;$/;"	m	struct:VirtAddr::__anon127
offset	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } lm;$/;"	m	struct:VirtAddr::__anon125
offset	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } pae;$/;"	m	struct:VirtAddr::__anon126
offset	superstl.h	/^    W64 offset;$/;"	m	class:superstl::idstream
offset	superstl.h	/^    W64 offset;$/;"	m	class:superstl::odstream
offsetof	globals.h	119;"	d
offsetof_evtchn_upcall_mask	lowlevel-64bit-xen.S	/^#define offsetof_evtchn_upcall_mask    1$/;"	d
offsetof_evtchn_upcall_pending	lowlevel-64bit-xen.S	/^#define offsetof_evtchn_upcall_pending 0$/;"	d
ok	ooocore-amd-k8.h	/^      W64 ok;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
ok	ooocore.h	/^      W64 ok;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
ok	superstl.h	/^    bool ok() const { return (!error); }$/;"	f	class:superstl::idstream
ok	superstl.h	/^    bool ok() const {$/;"	f	class:superstl::odstream
old_log2	decode-x87.cpp	37;"	d	file:
old_mmap32_arg_struct	kernel.cpp	/^struct old_mmap32_arg_struct {$/;"	s	file:
old_vcpu_has_pending_events	ptlxen-events.cpp	/^bitvec<MAX_VIRT_CPUS> old_vcpu_has_pending_events;$/;"	v
oldcf	ooocore-amd-k8.h	/^        W16  oldcf;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon45
oldcf	ooocore.h	/^        W16  oldcf;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon9
oldof	ooocore-amd-k8.h	/^        W16  oldof;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon45
oldof	ooocore.h	/^        W16  oldof;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon9
oldphys	ooocore-amd-k8.h	/^        W16  oldphys;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon45
oldphys	ooocore.h	/^        W16  oldphys;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon9
oldphysreg	ooocore-amd-k8.h	/^        W16s oldphysreg;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
oldphysreg	ooocore.h	/^        W16s oldphysreg;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
oldphysreg_refcount	ooocore-amd-k8.h	/^        W16 oldphysreg_refcount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
oldphysreg_refcount	ooocore.h	/^        W16 oldphysreg_refcount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
oldzf	ooocore-amd-k8.h	/^        W16  oldzf;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon45
oldzf	ooocore.h	/^        W16  oldzf;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon9
om	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
om	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
one	mathlib.cpp	/^  static const number one            = {{0x00000000, 0x3ff00000}}; \/*  1     *\/$/;"	v	file:
onebyte_has_modrm	decode-core.cpp	/^static const byte onebyte_has_modrm[256] = {$/;"	v	file:
oofac27	mathlib.cpp	/^  static const mp_no oofac27 = {-3,{1.0,7.0,4631664.0,12006312.0,13118056.0,6538613.0,646354.0,$/;"	v	file:
ooocore	stats.h	/^  OutOfOrderCoreStats ooocore;$/;"	m	struct:PTLsimStats
op	decode.h	/^  int op;$/;"	m	struct:TraceDecoder
op	ptlxen.h	/^  W32 op;$/;"	m	struct:PTLsimHostCall
opA	ptlhwdef.h	1188;"	d
opAB	ptlhwdef.h	1189;"	d
opABC	ptlhwdef.h	1190;"	d
opB	ptlhwdef.h	1191;"	d
opC	ptlhwdef.h	1192;"	d
opNOSIZE	ptlhwdef.h	1195;"	d
opclass	ooocore-amd-k8.h	/^    W64 opclass[OPCLASS_COUNT]; \/\/ label: opclass_names$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
opclass	ooocore-amd-k8.h	/^    W64 opclass[OPCLASS_COUNT]; \/\/ label: opclass_names$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
opclass	ooocore-amd-k8.h	/^    W64 opclass[OPCLASS_COUNT]; \/\/ label: opclass_names$/;"	m	struct:PerContextOutOfOrderCoreStats::issue
opclass	ooocore.h	/^    W64 opclass[OPCLASS_COUNT]; \/\/ label: opclass_names$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
opclass	ooocore.h	/^    W64 opclass[OPCLASS_COUNT]; \/\/ label: opclass_names$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
opclass	ooocore.h	/^    W64 opclass[OPCLASS_COUNT]; \/\/ label: opclass_names$/;"	m	struct:PerContextOutOfOrderCoreStats::issue
opclass	ptlhwdef.h	/^  W32 opclass;$/;"	m	struct:OpcodeInfo
opclass_names	ptlhwdef.cpp	/^const char* opclass_names[OPCLASS_COUNT] = {$/;"	v
opclassof	ptlhwdef.h	/^inline int opclassof(int opcode) { return lsbindex(opinfo[opcode].opclass); }$/;"	f
opcode	kernel.cpp	/^  byte opcode[3];$/;"	m	struct:SwitchToSimThunkCode	file:
opcode	ooocore-amd-k8.h	/^    byte opcode;   \/\/ Must match definition in ptlhwdef.h and ptlhwdef.cpp! $/;"	m	struct:OutOfOrderModel::FunctionalUnitInfo
opcode	ooocore.h	/^    byte opcode;   \/\/ Must match definition in ptlhwdef.h and ptlhwdef.cpp! $/;"	m	struct:OutOfOrderModel::FunctionalUnitInfo
opcode	ptlhwdef.h	/^  W16 opcode;$/;"	m	struct:X87State
opcode	ptlhwdef.h	/^  byte opcode;$/;"	m	struct:TransOpBase
open	datastore.cpp	/^bool StatsFileReader::open(const char* filename) {$/;"	f	class:StatsFileReader
open	datastore.cpp	/^void StatsFileWriter::open(const char* filename, const void* dst, size_t dstsize, int record_size) {$/;"	f	class:StatsFileWriter
open	superstl.cpp	/^  bool idstream::open(const char* filename, int bufsize) {$/;"	f	class:superstl::idstream
open	superstl.cpp	/^  bool idstream::open(int fd, int bufsize) {$/;"	f	class:superstl::idstream
open	superstl.cpp	/^  bool odstream::open(const char* filename, bool append, int bufsize) {$/;"	f	class:superstl::odstream
open	superstl.cpp	/^  bool odstream::open(int fd, int bufsize) {$/;"	f	class:superstl::odstream
operand	ooocore-amd-k8.h	/^        W8  operand;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
operand	ooocore.h	/^        W8  operand;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
operand_data	ooocore-amd-k8.h	/^        W64 operand_data[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon49
operand_data	ooocore.h	/^        W64 operand_data[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon13
operand_flags	ooocore-amd-k8.h	/^        W16 operand_flags[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon49
operand_flags	ooocore.h	/^        W16 operand_flags[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon13
operand_load	decode-core.cpp	/^void TraceDecoder::operand_load(int destreg, const DecodedOperand& memref, int opcode, int datatype, int cachelevel, bool rmw) {$/;"	f	class:TraceDecoder
operand_physregs	ooocore-amd-k8.h	/^        W16 operand_physregs[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
operand_physregs	ooocore.h	/^        W16 operand_physregs[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
operands	ooocore-amd-k8.h	/^    PhysicalRegister* operands[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
operands	ooocore.h	/^    PhysicalRegister* operands[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
operator !	superstl.h	/^    bool operator !() const { return iszero(); }$/;"	f	class:superstl::bitvec
operator !=	superstl.h	/^    bool operator !=(const bitvec<N>& rhs) const { return !this->equalop(rhs); }$/;"	f	class:superstl::bitvec
operator !=	superstl.h	/^    bool operator !=(const stringbuf& s) {$/;"	f	class:superstl::stringbuf
operator %	superstl.h	/^    bitvec<N> operator %(size_t b) const {$/;"	f	class:superstl::bitvec
operator &	superstl.h	/^    bitvec<N> operator &(const bitvec<N>& y) const {$/;"	f	class:superstl::bitvec
operator &	superstl.h	/^    bool operator &(T p) const { return contains(p); }$/;"	f	struct:superstl::range
operator &=	superstl.h	/^    bitvec<N>& operator&=(const bitvec<N>& rhs) {$/;"	f	class:superstl::bitvec
operator ()	datastore.h	/^  DataStoreNode& operator ()(const char* key) { return get(key); }$/;"	f	struct:DataStoreNode
operator ()	datastore.h	/^  DataStoreNodeTemplate& operator ()(const char* key) { return add(key); }$/;"	f	struct:DataStoreNodeTemplate
operator ()	datastore.h	/^  W64s operator ()(W64s a) const { return (W64s)math::round(((double)a) * coeff); }$/;"	f	struct:ScaleOperator
operator ()	datastore.h	/^  W64s operator ()(W64s a, W64s b) const { return (W64s)math::round((double)a + ((double)b * coeff)); }$/;"	f	struct:AddScaleOperator
operator ()	datastore.h	/^  double operator ()(double a) const { return a * coeff; }$/;"	f	struct:ScaleOperator
operator ()	datastore.h	/^  double operator ()(double a, double b) const { return a + b*coeff; }$/;"	f	struct:AddScaleOperator
operator ()	logic.h	/^  T& operator ()(int index) {$/;"	f	struct:FixedQueue
operator ()	logic.h	/^  V* operator ()(T tag) { return select(tag); }$/;"	f	struct:FullyAssociativeArray
operator ()	logic.h	/^  V* operator ()(T tag) { return select(tag); }$/;"	f	struct:LockableFullyAssociativeArray
operator ()	logic.h	/^  const T& operator ()(int index) const {$/;"	f	struct:FixedQueue
operator ()	logic.h	/^  int operator ()(T target) { return probe(target); }$/;"	f	struct:FullyAssociativeTags
operator ()	logic.h	/^  int operator ()(T target) { return probe(target); }$/;"	f	struct:LockableFullyAssociativeTags
operator ()	logic.h	/^  int operator()(base_t tag) const {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
operator ()	ooocore-amd-k8.h	/^    PhysicalRegisterFile& operator ()(const char* name, int coreid, int rfid, int size) {$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
operator ()	ooocore-amd-k8.h	/^    StateList& operator ()(const char* name, ListOfStateLists& lol, W32 flags = 0) {$/;"	f	struct:OutOfOrderModel::StateList
operator ()	ooocore.h	/^    PhysicalRegisterFile& operator ()(const char* name, int coreid, int rfid, int size) {$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
operator ()	ooocore.h	/^    StateList& operator ()(const char* name, ListOfStateLists& lol, W32 flags = 0) {$/;"	f	struct:OutOfOrderModel::StateList
operator ()	superstl.h	/^    T* operator ()(const K key) {$/;"	f	struct:superstl::Hashtable
operator ()	superstl.h	/^    T* operator ()(const K& key) {$/;"	f	struct:superstl::SelfHashtable
operator ()	superstl.h	/^    bitvec<N> operator ()(size_t index, size_t count) const {$/;"	f	class:superstl::bitvec
operator ()	superstl.h	/^    inline Tdata operator ()(Tkey key) { return get(key); }$/;"	f	struct:superstl::FixedKeyValueHashtable
operator ()	superstl.h	/^    int operator ()(T* a, T* b) const {$/;"	f	struct:superstl::PointerSortComparator
operator ()	superstl.h	/^    int operator ()(const T& a, const T& b) const {$/;"	f	struct:superstl::DefaultComparator
operator ()	superstl.h	/^    int operator ()(unsigned long a, unsigned long b) const {$/;"	f	struct:superstl::SortPrecomputedIndexListComparator
operator ()	superstl.h	/^    queuelink<T>& operator ()(T* t) { reset(); data = t; return *this; }$/;"	f	class:superstl::queuelink
operator ()	superstl.h	/^    range<T>& operator ()(T lo, T hi) { this->lo = lo; this->hi = hi; return *this; }$/;"	f	struct:superstl::range
operator ()	superstl.h	/^    range<T>& operator ()(T v) { this->lo = v; this->hi = v; return *this; }$/;"	f	struct:superstl::range
operator ()	uopimpl.cpp	/^  W16 operator ()(T ra, T rb) { return x86_genflags<T>(ra & rb); } $/;"	f	struct:and_flag_gen_op
operator ()	uopimpl.cpp	/^  W16 operator ()(T ra, T rb) { x86_op_sub<T, ZAPS|CF|OF> op; byte cf, of; T rd = op(ra, rb, 0, 0, 0, 0, cf, of); return (of << 11) | cf | x86_genflags<T>(rd); } $/;"	f	struct:sub_flag_gen_op
operator ()	uopimpl.cpp	/^  W64 operator ()(W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags, byte& cf, byte& of) {$/;"	f	struct:x86_op_mulhl
operator ()	uopimpl.cpp	/^struct x86_op_mulh<W64, genflags> { W64 operator ()(W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags, byte& cf, byte& of) { asm("int3"); return 0; } };$/;"	f	struct:x86_op_mulh
operator ()	uopimpl.cpp	/^struct x86_op_mulhu<W64, genflags> { W64 operator ()(W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags, byte& cf, byte& of) { asm("int3"); return 0; } };$/;"	f	struct:x86_op_mulhu
operator ()	uopimpl.cpp	/^struct x86_op_mull<W64, genflags> { W64 operator ()(W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags, byte& cf, byte& of) { asm("int3"); return 0; } };$/;"	f	struct:x86_op_mull
operator *	superstl.h	/^    T& operator *() const {$/;"	f	struct:superstl::indexref
operator *	superstl.h	/^    T& operator *() const {$/;"	f	struct:superstl::indexrefnull
operator *	superstl.h	/^    T& operator *() const {$/;"	f	struct:superstl::shortptr
operator *	superstl.h	/^    bool operator *() const { return nonzero(); }$/;"	f	class:superstl::bitvec
operator +	datastore.h	/^  DataStoreNode* operator +(const DataStoreNode& b) const {$/;"	f	struct:DataStoreNode
operator ++	superstl.h	/^      inline reference& operator++(int postfixdummy) {$/;"	f	class:superstl::bitvec::reference
operator ++	superstl.h	/^    bitvec<N>& operator++(int postfixdummy) { return setall(); }$/;"	f	class:superstl::bitvec
operator ++	superstl.h	/^    shortptr<T, P, base, granularity>& operator ++() {$/;"	f	struct:superstl::shortptr
operator +=	datastore.h	/^  DataStoreNode& operator +=(const DataStoreNode& b) {$/;"	f	struct:DataStoreNode
operator ,	superstl.cpp	/^ostream& operator ,(ostream& os, const vec16b& v) {$/;"	f
operator ,	superstl.cpp	/^ostream& operator ,(ostream& os, const vec8w& v) {$/;"	f
operator ,	superstl.h	/^  inline idstream& operator ,(idstream& is, T& v) {$/;"	f	namespace:superstl
operator ,	superstl.h	/^  static inline CRC32& operator ,(CRC32& crc, const T& v) {$/;"	f	namespace:superstl
operator ,	superstl.h	/^  static inline odstream& operator ,(odstream& os, const T& v) {$/;"	f	namespace:superstl
operator ,	superstl.h	/^  static inline ostream& operator ,(ostream& os, const T& v) {$/;"	f	namespace:superstl
operator ,	superstl.h	/^  static inline stringbuf& operator ,(stringbuf& os, const T& v) {$/;"	f	namespace:superstl
operator -	datastore.h	/^  DataStoreNode* operator -(const DataStoreNode& b) const {$/;"	f	struct:DataStoreNode
operator --	superstl.h	/^      inline reference& operator--(int postfixdummy) {$/;"	f	class:superstl::bitvec::reference
operator --	superstl.h	/^    bitvec<N>& operator--(int postfixdummy) { return reset(); }$/;"	f	class:superstl::bitvec
operator --	superstl.h	/^    shortptr<T, P, base, granularity>& operator --() {$/;"	f	struct:superstl::shortptr
operator -=	datastore.h	/^  DataStoreNode& operator -=(const DataStoreNode& b) {$/;"	f	struct:DataStoreNode
operator ->	superstl.h	/^    T* operator ->() const {$/;"	f	struct:superstl::indexref
operator ->	superstl.h	/^    T* operator ->() const {$/;"	f	struct:superstl::indexrefnull
operator ->	superstl.h	/^    T* operator ->() const {$/;"	f	struct:superstl::shortptr
operator ->	superstl.h	/^    T* operator->() const { return data; }$/;"	f	class:superstl::queuelink
operator <<	branchpred.cpp	/^ostream& operator <<(ostream& os, ReturnAddressStack<SIZE>& ras) {$/;"	f
operator <<	branchpred.cpp	/^ostream& operator <<(ostream& os, const BranchPredictorInterface& branchpred) {$/;"	f
operator <<	branchpred.cpp	/^ostream& operator <<(ostream& os, const ReturnAddressStackEntry& e) {$/;"	f
operator <<	cpuid.cpp	/^ostream& operator <<(ostream& os, const DescriptorTablePointer& dtp) {$/;"	f
operator <<	datastore.h	/^inline odstream& operator <<(odstream& os, const DataStoreNode& node) {$/;"	f
operator <<	datastore.h	/^static inline odstream& operator <<(odstream& os, const DataStoreNodeTemplate& node) {$/;"	f
operator <<	datastore.h	/^static inline ostream& operator <<(ostream& os, const DataStoreNodeTemplate& node) {$/;"	f
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const CacheLine<linesize>& line) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const CacheLineWithValidMask<linesize>& line) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const L1Cache& cache) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const L1ICache& cache) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const L3CacheLine& line) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const LoadFillReq& req) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const LoadFillReqQueue<size>& lfrq) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const MissBuffer<size>& missbuf) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const TranslationLookasideBuffer<tlbid, size>& tlb) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const CacheLine<linesize>& line) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const CacheLineWithValidMask<linesize>& line) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const L1Cache& cache) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const L1ICache& cache) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const L3CacheLine& line) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const LoadFillReq& req) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const LoadFillReqQueue<size>& lfrq) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const MissBuffer<size>& missbuf) {$/;"	f	namespace:CacheSubsystem
operator <<	dcache.h	/^  static inline ostream& operator <<(ostream& os, const TranslationLookasideBuffer<tlbid, size>& tlb) {$/;"	f	namespace:CacheSubsystem
operator <<	decode-complex.cpp	/^static inline ostream& operator <<(ostream& os, const IRETStackFrame& iretctx) {$/;"	f	file:
operator <<	decode.h	/^static inline TraceDecoder& operator <<(TraceDecoder& dec, const TransOp& transop) {$/;"	f
operator <<	decode.h	/^static inline TraceDecoder* operator <<(TraceDecoder* dec, const TransOp& transop) {$/;"	f
operator <<	decode.h	/^static inline ostream& operator <<(ostream& os, const DecodedOperand& decop) {$/;"	f
operator <<	kernel.cpp	/^ostream& operator <<(ostream& os, const MemoryMapExtent& map) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, FixedQueue<T, SIZE>& queue) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, HistoryBuffer<T, size>& history) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, Queue<T, size>& queue) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const AssociativeArray<T, V, size, ways, linesize>& aa) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const FullyAssociativeArray<T, V, ways>& assoc) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const FullyAssociativeTags16bit<size, padsize>& tags) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const FullyAssociativeTags8bit<size, padsize>& tags) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const FullyAssociativeTags<T, ways>& tags) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const FullyAssociativeTagsNbitOneHot<size, width, padsize>& tags) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const LockableAssociativeArray<T, V, size, ways, linesize>& aa) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const LockableCommitRollbackAssociativeArray<T, V, size, ways, linesize>& aa) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const LockableFullyAssociativeArray<T, V, ways>& assoc) {$/;"	f
operator <<	logic.h	/^ostream& operator <<(ostream& os, const LockableFullyAssociativeTags<T, ways>& tags) {$/;"	f
operator <<	logic.h	/^stringbuf& operator <<(stringbuf& sb, const FullyAssociativeTags<T, ways>& tags) {$/;"	f
operator <<	logic.h	/^stringbuf& operator <<(stringbuf& sb, const LockableFullyAssociativeTags<T, ways>& tags) {$/;"	f
operator <<	mm.cpp	/^ostream& operator <<(ostream& os, const ExtentAllocator<CHUNKSIZE, SIZESLOTS, HASHSLOTS>& alloc) {$/;"	f
operator <<	mm.cpp	/^ostream& operator <<(ostream& os, const SlabAllocator& slaballoc) {$/;"	f
operator <<	ooocore-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const IssueQueue<size, operandcount>& issueq) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const LoadStoreQueueEntry& lsq) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const PhysicalRegisterFile& physregs) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const RegisterRenameTable& rrt) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore-amd-k8.h	/^  static inline ostream& operator <<(ostream& os, const ReorderBufferEntry& rob) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore.cpp	/^  ostream& operator <<(ostream& os, const PhysicalRegister& physreg) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore.cpp	/^ostream& OutOfOrderModel::operator <<(ostream& os, const PhysicalRegisterOperandInfo& opinfo) {$/;"	f	class:OutOfOrderModel
operator <<	ooocore.h	/^  static inline ostream& operator <<(ostream& os, const IssueQueue<size, operandcount>& issueq) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore.h	/^  static inline ostream& operator <<(ostream& os, const LoadStoreQueueEntry& lsq) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore.h	/^  static inline ostream& operator <<(ostream& os, const PhysicalRegisterFile& physregs) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore.h	/^  static inline ostream& operator <<(ostream& os, const RegisterRenameTable& rrt) {$/;"	f	namespace:OutOfOrderModel
operator <<	ooocore.h	/^  static inline ostream& operator <<(ostream& os, const ReorderBufferEntry& rob) {$/;"	f	namespace:OutOfOrderModel
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const BasicBlock& bb) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const CR0& cr0) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const CR4& cr4) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const Context& ctx) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const IssueState& state) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const PageFaultErrorCode& pfec) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const SegmentDescriptor& seg) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const SegmentDescriptorCache& seg) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const TransOpBase& op) {$/;"	f
operator <<	ptlhwdef.cpp	/^ostream& operator <<(ostream& os, const UserContext& arf) {$/;"	f
operator <<	ptlhwdef.cpp	/^stringbuf& operator <<(stringbuf& os, const SFR& sfr) {$/;"	f
operator <<	ptlhwdef.cpp	/^stringbuf& operator <<(stringbuf& sb, const TransOpBase& op) {$/;"	f
operator <<	ptlhwdef.h	/^inline ostream& operator <<(ostream& os, const SFR& sfr) {$/;"	f
operator <<	ptlhwdef.h	/^static inline ostream& operator <<(ostream& os, const RIPVirtPhys& rvp) { return rvp.print(os); }$/;"	f
operator <<	ptlhwdef.h	/^static inline ostream& operator <<(ostream& os, const RIPVirtPhysBase& rvp) { return rvp.print(os); }$/;"	f
operator <<	ptlhwdef.h	/^static inline ostream& operator <<(ostream& os, const flagstring& bs) {$/;"	f
operator <<	ptlhwdef.h	/^static inline stringbuf& operator <<(stringbuf& sb, const flagstring& bs) {$/;"	f
operator <<	ptlmon.cpp	/^static ostream& operator <<(ostream& os, const page_type_t& pagetype) {$/;"	f	file:
operator <<	ptlsim.cpp	/^ostream& operator <<(ostream& os, const PTLsimConfig& config) {$/;"	f
operator <<	ptlstats.cpp	/^ostream& operator <<(ostream& os, const RGBA& rgba) {$/;"	f
operator <<	ptlxen-common.cpp	/^ostream& operator <<(ostream& os, const Level1PTE& pte) {$/;"	f
operator <<	ptlxen-common.cpp	/^ostream& operator <<(ostream& os, const Level2PTE& pte) {$/;"	f
operator <<	ptlxen-common.cpp	/^ostream& operator <<(ostream& os, const Level3PTE& pte) {$/;"	f
operator <<	ptlxen-common.cpp	/^ostream& operator <<(ostream& os, const Level4PTE& pte) {$/;"	f
operator <<	ptlxen-common.cpp	/^ostream& operator <<(ostream& os, const shared_info& si) {$/;"	f
operator <<	ptlxen-events.cpp	/^ostream& operator <<(ostream& os, const evtchn_status_t& status) {$/;"	f
operator <<	ptlxen-events.cpp	/^ostream& operator <<(ostream& os, const xencons_interface& console) {$/;"	f
operator <<	ptlxen-memory.cpp	/^ostream& operator <<(ostream& os, const page_type_t& pagetype) {$/;"	f
operator <<	ptlxen.cpp	/^ostream& operator <<(ostream& os, const DescriptorTablePointer& dtp) {$/;"	f
operator <<	ptlxen.cpp	/^static inline ostream& operator <<(ostream& os, const iret_context& iretctx) {$/;"	f	file:
operator <<	seqcore.cpp	/^ostream& operator <<(ostream& os, const TransactionalMemory<N, setcount>& tm) {$/;"	f
operator <<	superstl.cpp	/^  ostream& operator <<(ostream& os, const CycleTimer& ct) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, char v) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const bitmaskstring& bs) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const bitstring& bs) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const bytemaskstring& bs) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const bytestring& bs) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const char* v) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const floatstring& fs) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const hexstring& hs) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const intstring& is) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const padstring& s) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^  stringbuf& operator <<(stringbuf& os, const substring& s) {$/;"	f	namespace:superstl
operator <<	superstl.cpp	/^ostream& operator <<(ostream& os, const vec16b& v) {$/;"	f
operator <<	superstl.cpp	/^ostream& operator <<(ostream& os, const vec8w& v) {$/;"	f
operator <<	superstl.h	/^    bitvec<N> operator <<(size_t shift) const { return bitvec<N>(*this) <<= shift; }$/;"	f	class:superstl::bitvec
operator <<	superstl.h	/^  ostream& operator <<(ostream& os, FixedIntegerQueueSet<T, nulltag, N, Q> q) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  ostream& operator <<(ostream& os, const FixedKeyValueHashtable<Tkey, Tdata, N, setcount>& ht) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  ostream& operator <<(ostream& os, const FixedValueHashtable<T, N, setcount>& ht) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  ostream& operator <<(ostream& os, const GenericChunkList<T>& cl) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  ostream& operator <<(ostream& os, const SearchableChunkList16Entry<T, bytes>& chunk) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline CRC32& operator <<(CRC32& crc, const T& t) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline odstream& operator <<(odstream& os, const T& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline odstream& operator <<(odstream& os, const iosflush& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const Hashtable<K, T, setcount, KM>& ht) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const SelfHashtable<K, T, setcount, LM, KM>& ht) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const T& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const array<T, size>& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const bitvec<N>& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const char& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const char* v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const dynarray<T>& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const iosflush& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const range<T>& r) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const selflistlink& link) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const stack<T, size>& st) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline ostream& operator <<(ostream& os, const stringbuf& v) { stringbuf sb; sb << (char*)v; os.write((char*)sb, sb.size()); return os; }$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline stringbuf& operator <<(stringbuf& os, const T* v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline stringbuf& operator <<(stringbuf& os, const bool v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline stringbuf& operator <<(stringbuf& os, const hilo<N>& hl) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline stringbuf& operator <<(stringbuf& os, const percentstring& ps) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline stringbuf& operator <<(stringbuf& os, const shortptr<T, P, base, granularity>& sp) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline stringbuf& operator <<(stringbuf& os, const stringbuf& sb) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  static inline stringbuf& operator <<(stringbuf& sb, const bitvec<N>& v) {$/;"	f	namespace:superstl
operator <<	superstl.h	/^  template <class T> static inline const T& operator <<(dynarray<T>& buf, const T& v) { return buf.push(v); }$/;"	f	namespace:superstl
operator <<=	superstl.h	/^    bitvec<N>& operator <<=(int index) {$/;"	f	class:superstl::bitvec
operator <=	ptlxen.h	/^static inline Level1PTE operator <=(Level1PTE& target, Level1PTE source) {$/;"	f
operator <=	ptlxen.h	/^static inline Level2PTE operator <=(Level2PTE& target, Level2PTE source) {$/;"	f
operator <=	ptlxen.h	/^static inline Level3PTE operator <=(Level3PTE& target, Level3PTE source) {$/;"	f
operator <=	ptlxen.h	/^static inline Level4PTE operator <=(Level4PTE& target, Level4PTE source) {$/;"	f
operator =	datastore.cpp	/^DataStoreNode& DataStoreNode::operator =(W64s data) {$/;"	f	class:DataStoreNode
operator =	datastore.cpp	/^DataStoreNode& DataStoreNode::operator =(const char* data) {$/;"	f	class:DataStoreNode
operator =	datastore.cpp	/^DataStoreNode& DataStoreNode::operator =(double data) {$/;"	f	class:DataStoreNode
operator =	logic.h	/^    inline ref& operator =(base_t tag) {$/;"	f	class:FullyAssociativeTagsNbitOneHot::ref
operator =	logic.h	/^    inline ref& operator =(const ref& other) {$/;"	f	class:FullyAssociativeTagsNbitOneHot::ref
operator =	logic.h	/^  T& operator =(const T& t) {$/;"	f	struct:latch
operator =	ooocore-amd-k8.h	/^    LoadStoreQueueEntry& operator =(const SFR& sfr) {$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
operator =	ooocore.h	/^    LoadStoreQueueEntry& operator =(const SFR& sfr) {$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
operator =	ptlhwdef.h	/^  SegmentDescriptorCache& operator =(const SegmentDescriptor& desc) {$/;"	f	struct:SegmentDescriptorCache
operator =	superstl.h	/^      inline reference& operator =(bool x) {$/;"	f	class:superstl::bitvec::reference
operator =	superstl.h	/^      inline reference& operator =(const reference& j) {$/;"	f	class:superstl::bitvec::reference
operator =	superstl.h	/^    indexref<T>& operator =(const T& obj) { $/;"	f	struct:superstl::indexref
operator =	superstl.h	/^    indexref<T>& operator =(const T* obj) {$/;"	f	struct:superstl::indexref
operator =	superstl.h	/^    indexref<T>& operator =(int i) {$/;"	f	struct:superstl::indexref
operator =	superstl.h	/^    indexrefnull<T>& operator =(const T& obj) { $/;"	f	struct:superstl::indexrefnull
operator =	superstl.h	/^    indexrefnull<T>& operator =(const T* obj) {$/;"	f	struct:superstl::indexrefnull
operator =	superstl.h	/^    indexrefnull<T>& operator =(int i) {$/;"	f	struct:superstl::indexrefnull
operator =	superstl.h	/^    shortptr<T, P, base, granularity>& operator =(const T& obj) { $/;"	f	struct:superstl::shortptr
operator =	superstl.h	/^    shortptr<T, P, base, granularity>& operator =(const T* obj) {$/;"	f	struct:superstl::shortptr
operator =	superstl.h	/^    stack<T, size>& operator =(const stack<T, size>& stack) {$/;"	f	struct:superstl::stack
operator =	superstl.h	/^    stringbuf& operator =(const char* str) {$/;"	f	class:superstl::stringbuf
operator =	superstl.h	/^    stringbuf& operator =(const stringbuf& str) {$/;"	f	class:superstl::stringbuf
operator ==	ptlhwdef.h	/^  bool operator ==(const RIPVirtPhys& b) const {$/;"	f	struct:RIPVirtPhys
operator ==	superstl.h	/^    bool operator ==(const bitvec<N>& rhs) const { return this->equalop(rhs); }$/;"	f	class:superstl::bitvec
operator ==	superstl.h	/^    bool operator ==(const stringbuf& s) {$/;"	f	class:superstl::stringbuf
operator >>	superstl.h	/^    bitvec<N> operator >>(size_t shift) const { return bitvec<N>(*this) >>= shift; }$/;"	f	class:superstl::bitvec
operator >>	superstl.h	/^  inline idstream& operator >>(idstream& is, T& v) { $/;"	f	namespace:superstl
operator >>	superstl.h	/^  static inline istream& operator >>(istream& is, const readline& v) {$/;"	f	namespace:superstl
operator >>	superstl.h	/^  static inline istream& operator >>(istream& is, stringbuf& sb) {$/;"	f	namespace:superstl
operator >>	superstl.h	/^  template <class T> static inline const T& operator >>(dynarray<T>& buf, T& v) { return (v = buf.pop()); }$/;"	f	namespace:superstl
operator >>=	superstl.h	/^    bitvec<N>& operator>>=(int index) {$/;"	f	class:superstl::bitvec
operator T	logic.h	/^  operator T() const { return data; }$/;"	f	struct:latch
operator T&	superstl.h	/^    operator T&() const { return *data; }$/;"	f	class:superstl::queuelink
operator T*	superstl.h	/^    operator T*() const { return &(get(index)); }$/;"	f	struct:superstl::indexref
operator T*	superstl.h	/^    operator T*() const { return &(get(index)); }$/;"	f	struct:superstl::indexrefnull
operator T*	superstl.h	/^    operator T*() const { return data; }$/;"	f	class:superstl::dynarray
operator T*	superstl.h	/^    operator T*() const { return data; }$/;"	f	class:superstl::queuelink
operator T*	superstl.h	/^    operator T*() const { return data; }$/;"	f	struct:superstl::FixedValueHashtable
operator T*	superstl.h	/^    operator T*() const { return get(); }$/;"	f	struct:superstl::shortptr
operator Tdata*	superstl.h	/^    operator Tdata*() const { return data; }$/;"	f	struct:superstl::FixedKeyValueHashtable
operator W16	datastore.h	/^  operator W16() const { return (W64s)(*this); }$/;"	f	struct:DataStoreNode
operator W16	ptlhwdef.h	/^  operator W16() const { return *((W16*)this); }$/;"	f	struct:X87ControlWord
operator W16	ptlhwdef.h	/^  operator W16() const { return *((W16*)this); }$/;"	f	struct:X87StatusWord
operator W16s	datastore.h	/^  operator W16s() const { return (W64s)(*this); }$/;"	f	struct:DataStoreNode
operator W32	datastore.h	/^  operator W32() const { return (W64s)(*this); }$/;"	f	struct:DataStoreNode
operator W32	globals.h	/^  operator W32() const { return data; }$/;"	f	union:MXCSR
operator W32	ptlhwdef.h	/^  operator W32() const { return data; }$/;"	f	union:MaskControlInfo
operator W32	ptlhwdef.h	/^  operator W32() const { return data; }$/;"	f	union:PermbControlInfo
operator W32	superstl.h	/^    operator W32() const {$/;"	f	struct:superstl::CRC32
operator W32s	datastore.h	/^  operator W32s() const { return (W64s)(*this); }$/;"	f	struct:DataStoreNode
operator W64	branchpred.h	/^  operator W64() const { return rip; }$/;"	f	struct:ReturnAddressStackEntry
operator W64	datastore.h	/^  operator W64() const { return (W64s)(*this); }$/;"	f	struct:DataStoreNode
operator W64	globals.h	/^  operator W64() const { return value; }$/;"	f	struct:constbits
operator W64	ptlhwdef.h	/^  operator W64() const { return *((W64*)this); }$/;"	f	struct:SegmentDescriptor
operator W64	ptlhwdef.h	/^  operator W64() const { return rip; }$/;"	f	struct:RIPVirtPhys
operator W64	ptlhwdef.h	/^  operator W64() const { return w64; }$/;"	f	union:SSEType
operator W64*	datastore.cpp	/^DataStoreNode::operator W64*() const {$/;"	f	class:DataStoreNode
operator W64s	datastore.cpp	/^DataStoreNode::operator W64s() const {$/;"	f	class:DataStoreNode
operator W64s*	datastore.cpp	/^DataStoreNode::operator W64s*() const {$/;"	f	class:DataStoreNode
operator W8s	datastore.h	/^  operator W8s() const { return (W64s)(*this); }$/;"	f	struct:DataStoreNode
operator Waddr	ptlxen.h	/^  operator Waddr() const { return *((const Waddr*)this); }$/;"	f	struct:PageFrameType
operator []	datastore.h	/^  DataStoreNode& operator [](const char* key) { return get(key); }$/;"	f	struct:DataStoreNode
operator []	dcache-amd-k8.h	/^    LoadFillReq& operator [](int idx) { return reqs[idx]; }$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
operator []	dcache-amd-k8.h	/^    const LoadFillReq& operator [](int idx) const { return reqs[idx]; }$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
operator []	dcache.h	/^    LoadFillReq& operator [](int idx) { return reqs[idx]; }$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
operator []	dcache.h	/^    const LoadFillReq& operator [](int idx) const { return reqs[idx]; }$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
operator []	logic.h	/^  T& operator [](int index) { return tags[index]; }$/;"	f	struct:FullyAssociativeTags
operator []	logic.h	/^  T& operator [](int index) { return tags[index]; }$/;"	f	struct:LockableFullyAssociativeTags
operator []	logic.h	/^  T& operator [](int index) {$/;"	f	struct:HistoryBuffer
operator []	logic.h	/^  V& operator [](int way) { return data[way]; }$/;"	f	struct:FullyAssociativeArray
operator []	logic.h	/^  V& operator [](int way) { return data[way]; }$/;"	f	struct:LockableFullyAssociativeArray
operator []	logic.h	/^  base_t operator [](int i) const {$/;"	f	struct:FullyAssociativeTags16bit
operator []	logic.h	/^  base_t operator [](int i) const {$/;"	f	struct:FullyAssociativeTags8bit
operator []	logic.h	/^  base_t operator [](int index) const { return tagsmirror[index]; }$/;"	f	struct:FullyAssociativeTagsNbitOneHot
operator []	logic.h	/^  base_t& operator [](int i) {$/;"	f	struct:FullyAssociativeTags16bit
operator []	logic.h	/^  base_t& operator [](int i) {$/;"	f	struct:FullyAssociativeTags8bit
operator []	logic.h	/^  const T& operator [](int index) const { return tags[index]; }$/;"	f	struct:FullyAssociativeTags
operator []	logic.h	/^  const T& operator [](int index) const { return tags[index]; }$/;"	f	struct:LockableFullyAssociativeTags
operator []	logic.h	/^  const T& operator [](int index) const {$/;"	f	struct:HistoryBuffer
operator []	logic.h	/^  latch<T>& operator [](int i) { $/;"	f	struct:SynchronousRegisterFile
operator []	logic.h	/^  ref operator [](int index) { return ref(*this, index); }$/;"	f	struct:FullyAssociativeTagsNbitOneHot
operator []	superstl.h	/^    T& operator [](int i) { $/;"	f	struct:superstl::array
operator []	superstl.h	/^    T& operator [](int i) { $/;"	f	struct:superstl::stack
operator []	superstl.h	/^    bool operator [](size_t index) const { return test(index); }$/;"	f	class:superstl::bitvec
operator []	superstl.h	/^    const T& operator [](int i) const { $/;"	f	struct:superstl::array
operator []	superstl.h	/^    const T& operator [](int i) const { $/;"	f	struct:superstl::stack
operator []	superstl.h	/^    inline T operator [](int i) const { return data[i]; }$/;"	f	class:superstl::dynarray
operator []	superstl.h	/^    inline T operator [](int i) const { return data[i]; }$/;"	f	struct:superstl::FixedValueHashtable
operator []	superstl.h	/^    inline T& operator [](int i) { return data[i]; }$/;"	f	class:superstl::dynarray
operator []	superstl.h	/^    inline T& operator [](int i) { return data[i]; }$/;"	f	struct:superstl::FixedValueHashtable
operator []	superstl.h	/^    inline Tdata operator [](int i) const { return data[i]; }$/;"	f	struct:superstl::FixedKeyValueHashtable
operator []	superstl.h	/^    inline Tdata& operator [](int i) { return data[i]; }$/;"	f	struct:superstl::FixedKeyValueHashtable
operator []	superstl.h	/^    reference operator [](size_t index) { return reference(*this, index); }$/;"	f	class:superstl::bitvec
operator ^	superstl.h	/^    bitvec<N> operator ^(const bitvec<N>& y) const {$/;"	f	class:superstl::bitvec
operator ^=	superstl.h	/^    bitvec<N>& operator^=(const bitvec<N>& rhs) {$/;"	f	class:superstl::bitvec
operator bool	datastore.h	/^  operator bool() const { return os.ok(); }$/;"	f	struct:StatsFileWriter
operator bool	superstl.h	/^      inline operator bool() const {$/;"	f	class:superstl::bitvec::reference
operator bool	superstl.h	/^    operator bool() const { return (!empty()); }$/;"	f	class:superstl::queue
operator bool	superstl.h	/^    operator bool() const { return (!empty()); }$/;"	f	class:superstl::queuelink
operator bool	superstl.h	/^    operator bool() const { return (!empty()); }$/;"	f	class:superstl::selfqueuelink
operator bool	superstl.h	/^    operator bool() const {$/;"	f	class:superstl::odstream
operator bool	superstl.h	/^    operator bool() { return ok(); }$/;"	f	class:superstl::idstream
operator byte	datastore.h	/^  operator byte() const { return (W64s)(*this); }$/;"	f	struct:DataStoreNode
operator byte	decode.h	/^  operator byte() const { return (*((byte*)this)); }$/;"	f	struct:ModRMByte
operator byte	decode.h	/^  operator byte() const { return (*((byte*)this)); }$/;"	f	struct:RexByte
operator byte	decode.h	/^  operator byte() const { return (*((byte*)this)); }$/;"	f	struct:SIBByte
operator char*	superstl.h	/^    operator char*() const {$/;"	f	class:superstl::stringbuf
operator const T*	superstl.h	/^    operator const T*() const { return data; }$/;"	f	struct:superstl::FixedValueHashtable
operator const Tdata*	superstl.h	/^    operator const Tdata*() const { return data; }$/;"	f	struct:superstl::FixedKeyValueHashtable
operator const char**	datastore.cpp	/^DataStoreNode::operator const char**() const {$/;"	f	class:DataStoreNode
operator delete	globals.h	/^inline void operator delete(void*, void*) { }$/;"	f
operator delete	mm.cpp	/^void operator delete(void* m) {$/;"	f
operator delete[]	globals.h	/^inline void operator delete[](void*, void*) { }$/;"	f
operator delete[]	mm.cpp	/^void operator delete[](void* m) {$/;"	f
operator double	datastore.cpp	/^DataStoreNode::operator double() const {$/;"	f	class:DataStoreNode
operator double*	datastore.cpp	/^DataStoreNode::operator double*() const {$/;"	f	class:DataStoreNode
operator float	datastore.cpp	/^DataStoreNode::operator float() const {$/;"	f	class:DataStoreNode
operator new	globals.h	/^inline void* operator new(size_t, void* p) { return p; }$/;"	f
operator new	mm.cpp	/^void* operator new(size_t sz) {$/;"	f
operator new[]	globals.h	/^inline void* operator new[](size_t, void* p) { return p; }$/;"	f
operator new[]	mm.cpp	/^void* operator new[](size_t sz) {$/;"	f
operator |	superstl.h	/^    bitvec<N> operator |(const bitvec<N>& y) const {$/;"	f	class:superstl::bitvec
operator |=	superstl.h	/^    bitvec<N>& operator|=(const bitvec<N>& rhs) {$/;"	f	class:superstl::bitvec
operator ~	superstl.h	/^      bool operator~() const {$/;"	f	class:superstl::bitvec::reference
operator ~	superstl.h	/^    bitvec<N> operator ~() const { return bitvec<N>(*this).invert(); }$/;"	f	class:superstl::bitvec
operator ~	superstl.h	/^    bool operator ~() const { return size(); }$/;"	f	struct:superstl::range
opinfo	ooocore-amd-k8.h	/^        PhysicalRegisterOperandInfo opinfo[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon45
opinfo	ooocore-amd-k8.h	/^        PhysicalRegisterOperandInfo opinfo[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon48
opinfo	ooocore-amd-k8.h	/^        PhysicalRegisterOperandInfo opinfo[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon50
opinfo	ooocore-amd-k8.h	/^        PhysicalRegisterOperandInfo opinfo[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon53
opinfo	ooocore.h	/^        PhysicalRegisterOperandInfo opinfo[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon12
opinfo	ooocore.h	/^        PhysicalRegisterOperandInfo opinfo[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon14
opinfo	ooocore.h	/^        PhysicalRegisterOperandInfo opinfo[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon17
opinfo	ooocore.h	/^        PhysicalRegisterOperandInfo opinfo[MAX_OPERANDS];$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon9
opinfo	ptlhwdef.cpp	/^const OpcodeInfo opinfo[OP_MAX_OPCODE] = {$/;"	v
opsize_prefix	decode.h	/^  bool opsize_prefix;$/;"	m	struct:TraceDecoder
options	config.h	/^  ConfigurationOption* options;$/;"	m	struct:ConfigurationParserBase
options	config.h	/^  ConfigurationParserBase options;$/;"	m	struct:ConfigurationParser
ordering	ooocore-amd-k8.h	/^        W64 ordering;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
ordering	ooocore-amd-k8.h	/^        W64 ordering;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
ordering	ooocore.h	/^        W64 ordering;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
ordering	ooocore.h	/^        W64 ordering;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
origaddr	seqcore.cpp	/^      W64 origaddr;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon88	file:
origrip	loader.h	/^  W64 origrip;$/;"	m	struct:LoaderInfo
origrsp	loader.h	/^  W64 origrsp;$/;"	m	struct:LoaderInfo
origvirt	ooocore-amd-k8.h	/^        W64 origvirt;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
origvirt	ooocore-amd-k8.h	/^    Waddr origvirt; \/\/ original virtual address, with low bits$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
origvirt	ooocore.h	/^        W64 origvirt;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
origvirt	ooocore.h	/^    Waddr origvirt; \/\/ original virtual address, with low bits$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
orop	superstl.h	/^    void orop(const bitvecbase<0>&)  { }$/;"	f	struct:superstl::bitvecbase
orop	superstl.h	/^    void orop(const bitvecbase<1>& x)  { w |= x.w; }$/;"	f	struct:superstl::bitvecbase
orop	superstl.h	/^    void orop(const bitvecbase<N>& x) {$/;"	f	struct:superstl::bitvecbase
os	datastore.h	/^  odstream os;$/;"	m	struct:StatsFileWriter
os	ptlstats.cpp	/^  ostream& os;$/;"	m	class:TableCreator	file:
os	ptlstats.cpp	/^  ostream* os;$/;"	m	class:SVGCreator	file:
osfxsr	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
ostream	superstl.h	/^    ostream(): odstream() { }$/;"	f	class:superstl::ostream
ostream	superstl.h	/^    ostream(const char* filename, bool append = false): odstream(filename, append) { }$/;"	f	class:superstl::ostream
ostream	superstl.h	/^    ostream(int fd): odstream(fd) { }$/;"	f	class:superstl::ostream
ostream	superstl.h	/^  class ostream: public odstream {$/;"	c	namespace:superstl
osxmmexcpt	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
outcome	decode.h	/^  int outcome;$/;"	m	struct:TraceDecoder
overflow	dcache-amd-k8.h	/^    static void overflow(W64 tag) { }$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
overflow	dcache.h	/^    static void overflow(W64 tag) { }$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
overflow	logic.h	/^  static void overflow(T tag) { }$/;"	f	struct:NullAssociativeArrayStatisticsCollector
overflow_entry	lowlevel-64bit-xen.S	/^overflow_entry:$/;"	l
overflows	ooocore-amd-k8.h	/^      W64 overflows;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
overflows	ooocore.h	/^      W64 overflows;$/;"	m	struct:OutOfOrderCoreStats::branchpred::ras
overflows	ooocore.h	/^      W64 overflows;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
overshoot_and_dump	ptlsim.h	/^  bool overshoot_and_dump;$/;"	m	struct:PTLsimConfig
p	ptlhwdef.h	/^	W16 base1:8, type:4, s:1, dpl:2, p:1;$/;"	m	struct:SegmentDescriptor
p	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
p	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
p	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
p	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
p	ptlhwdef.h	/^  byte p:1, rw:1, us:1, rsv:1, nx:1, pad:3;$/;"	m	struct:PageFaultErrorCode
p	superstl.h	/^    P p;$/;"	m	struct:superstl::shortptr
p	superstl.h	/^    char* p;$/;"	m	class:superstl::stringbuf
packedstruct	cpuid.cpp	/^} packedstruct;$/;"	v	typeref:struct:DescriptorTablePointer
packedstruct	globals.h	45;"	d
packedstruct	ptlhwdef.h	/^} packedstruct;$/;"	v	typeref:struct:SegmentDescriptor
packedstruct	ptlhwdef.h	/^} packedstruct;$/;"	v	typeref:struct:X87RegPadded
packedstruct	ptlxen.cpp	/^} packedstruct;$/;"	v	typeref:struct:DescriptorTablePointer
pad	ptlhwdef.h	/^  byte a:1, d:1, ptwrite:1, pad:5;$/;"	m	struct:PTEUpdateBase
pad	ptlhwdef.h	/^  byte final_insn_in_bb:1, final_arch_in_insn:1, final_flags_in_insn:1, any_flags_in_insn:1, pad:3, marked:1;$/;"	m	struct:TransOpBase
pad	ptlhwdef.h	/^  byte p:1, rw:1, us:1, rsv:1, nx:1, pad:3;$/;"	m	struct:PageFaultErrorCode
pad	ptlhwdef.h	/^  byte pad[6];$/;"	m	struct:X87RegPadded
pad	superstl.h	/^    W16 pad;$/;"	m	struct:superstl::SearchableChunkList16Entry
pad	superstl.h	/^    char pad;$/;"	m	struct:superstl::padstring
pad1	dcache-amd-k8.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
pad1	dcache.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
pad1	ooocore-amd-k8.h	/^    byte pad1;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
pad1	ooocore.h	/^    byte pad1;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
pad1	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
pad2	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
pad3	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
pad32	dcache-amd-k8.h	/^  W32 pad32;$/;"	m	struct:LoadStoreInfo
pad32	dcache.h	/^  W32 pad32;$/;"	m	struct:LoadStoreInfo
pad4	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
padchunkcount	logic.h	/^  static const int padchunkcount = ((padsize*2)+15) \/ 16;$/;"	m	struct:FullyAssociativeTags16bit
padchunkcount	logic.h	/^  static const int padchunkcount = (padsize+15) \/ 16;$/;"	m	struct:FullyAssociativeTags8bit
padchunkcount	logic.h	/^  static const int padchunkcount = (padsize+15) \/ 16;$/;"	m	struct:FullyAssociativeTagsNbitOneHot
padding	datastore.cpp	/^  W32 padding;$/;"	m	struct:DataStoreNodeArrayHeader	file:
padding	dstbuild	/^sub padding {$/;"	s
padding	mm.cpp	/^    byte padding[CHUNKSIZE - (sizeof(FreeExtentBase) + sizeof(Waddr))];$/;"	m	struct:ExtentAllocator::FreeExtent	file:
padding	mm.cpp	/^  W16 padding;$/;"	m	struct:SlabAllocator	file:
padding	ooocore-amd-k8.h	/^    W32 padding;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
padding	ooocore.h	/^    W32 padding;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
padding	ptlhwdef.h	/^  byte padding[PAGE_SIZE - sizeof(ContextBase)];$/;"	m	struct:Context
paddr_t	xen-types.h	/^typedef unsigned long paddr_t;$/;"	t
padhi	ptlhwdef.h	/^  W64 mfnlo:28, use64:1, kernel:1, padlo:2, mfnhi:28, df:1, padhi:3;$/;"	m	struct:RIPVirtPhysBase
padlo	ptlhwdef.h	/^  W64 mfnlo:28, use64:1, kernel:1, padlo:2, mfnhi:28, df:1, padhi:3;$/;"	m	struct:RIPVirtPhysBase
padstring	superstl.h	/^    padstring() { }$/;"	f	struct:superstl::padstring
padstring	superstl.h	/^    padstring(const char* value, int width, char pad = ' ') {$/;"	f	struct:superstl::padstring
padstring	superstl.h	/^  DeclareStringBufToStream(padstring);$/;"	v
padstring	superstl.h	/^  struct padstring {$/;"	s	namespace:superstl
pae	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
pae	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } pae;$/;"	m	union:VirtAddr	typeref:struct:VirtAddr::__anon126
page_allocs	mm.cpp	/^  W64 page_allocs;$/;"	m	struct:SlabAllocator	file:
page_crossings	stats.h	/^    struct page_crossings { \/\/ node: summable$/;"	s	struct:PTLsimStats::decoder
page_crossings	stats.h	/^    } page_crossings;$/;"	m	struct:PTLsimStats::decoder	typeref:struct:PTLsimStats::decoder::page_crossings
page_fault_entry	lowlevel-64bit-xen.S	/^page_fault_entry:$/;"	l
page_fault_in_progress	ptlxen-memory.cpp	/^static int page_fault_in_progress = 0;$/;"	v	file:
page_frees	mm.cpp	/^  W64 page_frees;$/;"	m	struct:SlabAllocator	file:
page_is_slab_bitmap	mm.cpp	/^bitvec<PTL_PAGE_POOL_SIZE> page_is_slab_bitmap;$/;"	v
page_table_acc_dirty_update	ptlxen-memory.cpp	/^void page_table_acc_dirty_update(W64 rawvirt, W64 toplevel_mfn, const PTEUpdate& update) {$/;"	f
page_table_level_count	ptlhwdef.h	/^  int page_table_level_count() const { return 4; }$/;"	f	struct:Context
page_table_levels	ptlmon.cpp	/^  int page_table_levels;$/;"	m	struct:XenController	file:
page_table_walk	ptlxen-memory.cpp	/^Level1PTE page_table_walk(W64 rawvirt, W64 toplevel_mfn, bool do_special_translations) {$/;"	f
pagealloc	mm.cpp	/^ExtentAllocator<4096, 512, 512> pagealloc;$/;"	v
pagecache	stats.h	/^    struct pagecache {$/;"	s	struct:PTLsimStats::decoder
pagecache	stats.h	/^    } pagecache;$/;"	m	struct:PTLsimStats::decoder	typeref:struct:PTLsimStats::decoder::pagecache
pageid	kernel.h	/^  Waddr pageid(Waddr address) const { return pageid((void*)address); }$/;"	f	class:AddressSpace
pageid	kernel.h	/^  Waddr pageid(void* address) const {$/;"	f	class:AddressSpace
pageid_to_map_byte	kernel.cpp	/^byte& AddressSpace::pageid_to_map_byte(spat_t top, Waddr pageid) {$/;"	f	class:AddressSpace
pages_to_kb	ptlxen.h	/^static inline W64 pages_to_kb(W64 pages) { return (pages * 4096) \/ 1024; }$/;"	f
parallel	globals.h	315;"	d
parallel_aliasing	ooocore-amd-k8.h	/^          W64 parallel_aliasing;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
parallel_aliasing	ooocore.h	/^          W64 parallel_aliasing;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
parent	datastore.h	/^  DataStoreNode* parent;$/;"	m	struct:DataStoreNode
parent	datastore.h	/^  DataStoreNodeTemplate* parent;$/;"	m	struct:DataStoreNodeTemplate
parse	config.cpp	/^int ConfigurationParserBase::parse(void* baseptr, char* argstr) {$/;"	f	class:ConfigurationParserBase
parse	config.cpp	/^int ConfigurationParserBase::parse(void* baseptr, int argc, char* argv[]) {$/;"	f	class:ConfigurationParserBase
parse	config.h	/^  int parse(T& config, char* argstr) {$/;"	f	struct:ConfigurationParser
parse	config.h	/^  int parse(T& config, int argc, char* argv[]) {$/;"	f	struct:ConfigurationParser
partial_pages	mm.cpp	/^  PageHeader* partial_pages;$/;"	m	struct:SlabAllocator	file:
parts	mathlib.cpp	/^  } parts;$/;"	m	union:math::__anon78	typeref:struct:math::__anon78::__anon79	file:
pat	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
pause	ptlmon.cpp	/^  int pause() {$/;"	f	struct:XenController
pause	ptlsim.h	/^  bool pause;$/;"	m	struct:PTLsimConfig
pause	ptlxen.h	/^      bool pause;$/;"	m	struct:PTLsimHostCall::__anon99::__anon107
pause_at_startup	ptlsim.h	/^  W64 pause_at_startup;$/;"	m	struct:PTLsimConfig
pc	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
pcd	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
pcd	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
pcd	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
pcd	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
pce	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
pe	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
pe	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
pe	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
peak_bytes_allocated	mm.cpp	/^  W64 peak_bytes_allocated;$/;"	m	struct:ExtentAllocator	file:
peak_bytes_allocated	mm.cpp	/^  W64 peak_bytes_allocated;$/;"	m	struct:SlabAllocator	file:
peak_objs_allocated	mm.cpp	/^  W64 peak_objs_allocated;$/;"	m	struct:SlabAllocator	file:
peak_pages_allocated	mm.cpp	/^  W64 peak_pages_allocated;$/;"	m	struct:SlabAllocator	file:
peek	branchpred.cpp	/^  W64 peek() {$/;"	f	struct:ReturnAddressStack
peek	logic.h	/^  T* peek() {$/;"	f	struct:FixedQueue
peek	ooocore-amd-k8.h	/^    selfqueuelink* peek() {$/;"	f	struct:OutOfOrderModel::StateList
peek	ooocore.h	/^    selfqueuelink* peek() {$/;"	f	struct:OutOfOrderModel::StateList
peekhead	logic.h	/^  T* peekhead() {$/;"	f	struct:FixedQueue
peektail	logic.h	/^  T* peektail() {$/;"	f	struct:FixedQueue
pending	ooocore-amd-k8.h	/^      W64 pending;$/;"	m	struct:OutOfOrderCoreStats::commit::freereg
pending	ooocore.h	/^      W64 pending;$/;"	m	struct:OutOfOrderCoreStats::commit::freereg
pending_patched_switch_to_sim_addr	kernel.cpp	/^SwitchToSimThunkCode* pending_patched_switch_to_sim_addr = null;$/;"	v
pendingreqs	ptlmon.cpp	/^PendingRequestTable pendingreqs;$/;"	v
per_cluster_stats_update	ooocore-amd-k8.h	1529;"	d
per_cluster_stats_update	ooocore.h	1553;"	d
per_cluster_stats_update	ooocore.h	1568;"	d
per_context_dcache_stats_ref	dcache-amd-k8.h	23;"	d
per_context_dcache_stats_ref	dcache.h	23;"	d
per_context_dcache_stats_update	dcache-amd-k8.h	24;"	d
per_context_dcache_stats_update	dcache.h	24;"	d
per_context_ooocore_stats_ref	ooocore-amd-k8.h	48;"	d
per_context_ooocore_stats_ref	ooocore.h	49;"	d
per_context_ooocore_stats_update	ooocore-amd-k8.h	49;"	d
per_context_ooocore_stats_update	ooocore.h	50;"	d
per_physregfile_stats_update	ooocore-amd-k8.h	1537;"	d
per_physregfile_stats_update	ooocore.h	1572;"	d
per_vcpu_stack_base	ptlmon.cpp	/^  byte* per_vcpu_stack_base;$/;"	m	struct:XenController	file:
per_vcpu_stack_base	ptlxen.h	/^  byte* per_vcpu_stack_base;$/;"	m	struct:PTLsimMonitorInfo
percent	globals.h	712;"	d
percent_digits	datastore.h	/^  int percent_digits;$/;"	m	struct:DataStoreNodePrintSettings
percent_digits	ptlstats.cpp	/^  W64 percent_digits;$/;"	m	struct:PTLstatsConfig	file:
percent_of_parent	datastore.cpp	/^double DataStoreNode::percent_of_parent() const {$/;"	f	class:DataStoreNode
percent_of_toplevel	datastore.cpp	/^double DataStoreNode::percent_of_toplevel() const {$/;"	f	class:DataStoreNode
percent_of_toplevel	datastore.h	/^  int force_sum_of_subtrees_only:1, percent_of_toplevel:1, hide_zero_branches:1, cumulative_histogram:1, show_stars_in_histogram:1;$/;"	m	struct:DataStoreNodePrintSettings
percent_of_toplevel	ptlstats.cpp	/^  bool percent_of_toplevel;$/;"	m	struct:PTLstatsConfig	file:
percentstring	superstl.h	/^    percentstring() { }$/;"	f	struct:superstl::percentstring
percentstring	superstl.h	/^    percentstring(W64s value, W64s total, int width = 7) {$/;"	f	struct:superstl::percentstring
percentstring	superstl.h	/^  DeclareStringBufToStream(percentstring);$/;"	v
percentstring	superstl.h	/^  struct percentstring {$/;"	s	namespace:superstl
perfctr	ptlxen.h	/^    } perfctr;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon106
perfctr_name	ptlsim.h	/^  stringbuf perfctr_name;$/;"	m	struct:PTLsimConfig
perfctr_start	perfctrs.cpp	/^W64 perfctr_start[4];$/;"	v
perfctr_stop	perfctrs.cpp	/^W64 perfctr_stop[4];$/;"	v
perfctrs_dump	perfctrs.cpp	/^void perfctrs_dump(ostream& os) {$/;"	f
perfctrs_init	perfctrs.cpp	/^bool perfctrs_init() {$/;"	f
perfctrs_setup_perfctr	perfctrs.cpp	/^int perfctrs_setup_perfctr(int cpu, int index, W64 value) {$/;"	f
perfctrs_start	perfctrs.cpp	/^void perfctrs_start() {$/;"	f
perfctrs_stop	perfctrs.cpp	/^void perfctrs_stop() {$/;"	f
perfctrs_write_perfctr	perfctrs.cpp	/^int perfctrs_write_perfctr(int cpu, int index, W64 value) {$/;"	f
perfect_cache	ptlsim.h	/^  bool perfect_cache;$/;"	m	struct:PTLsimConfig
performance	stats.h	/^    struct performance {$/;"	s	struct:PTLsimStats::simulator
performance	stats.h	/^    } performance;$/;"	m	struct:PTLsimStats::simulator	typeref:struct:PTLsimStats::simulator::performance
pfec	decode.h	/^  PageFaultErrorCode pfec;$/;"	m	struct:TraceDecoder
pfec	seqcore.cpp	/^      W32 pfec;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon88	file:
pfn_t	ptlxen.h	/^typedef unsigned long pfn_t;$/;"	t
pg	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
pge	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
phys_cpu_affinity	ptlmon.cpp	/^  W64 phys_cpu_affinity;$/;"	m	struct:XenController	file:
phys_cpu_affinity	ptlxen.h	/^  W64  phys_cpu_affinity;$/;"	m	struct:PTLsimMonitorInfo
phys_level2_pagedir	ptlxen-memory.cpp	/^struct Level2PTE* phys_level2_pagedir;$/;"	v	typeref:struct:Level2PTE
phys_level3_mfn	ptlmon.cpp	/^  mfn_t ptl_level4_mfn, ptl_level3_mfn, phys_level3_mfn, ptl_level2_mfn;$/;"	m	struct:XenController	file:
phys_level3_pagedir	ptlxen-memory.cpp	/^struct Level3PTE* phys_level3_pagedir;$/;"	v	typeref:struct:Level3PTE
phys_level3_pagedir_mfn	ptlxen-memory.cpp	/^mfn_t phys_level3_pagedir_mfn;$/;"	v
phys_level3_pfn	ptlmon.cpp	/^  pfn_t ptl_level4_pfn, ptl_level3_pfn, phys_level3_pfn, ptl_level2_pfn, ptl_level1_pfn;$/;"	m	struct:XenController	file:
phys_pagedir	ptlxen-memory.cpp	/^struct Level1PTE* phys_pagedir;$/;"	v	typeref:struct:Level1PTE
phys_pagedir_mfn_count	ptlxen-memory.cpp	/^W64 phys_pagedir_mfn_count;$/;"	v
phys_reg_file_names	ooocore-amd-k8.h	/^  static const char* phys_reg_file_names[PHYS_REG_FILE_COUNT] = {"int", "fp", "st", "br"};$/;"	v
phys_reg_file_names	ooocore.h	/^  static const char* phys_reg_file_names[PHYS_REG_FILE_COUNT] = {"int", "fp", "st", "br"};$/;"	v
phys_reg_files_writable_by_uop	ooopipe.cpp	/^static W32 phys_reg_files_writable_by_uop(const TransOp& uop) {$/;"	f	file:
phys_to_mapped_virt	kernel.h	/^static inline void* phys_to_mapped_virt(Waddr rawphys) {$/;"	f
phys_to_mapped_virt	ptlxen.h	/^static inline void* phys_to_mapped_virt(W64 rawphys) {$/;"	f
physaddr	ptlhwdef.h	/^      W64 physaddr:48, flags:8, lfrqslot:8;$/;"	m	struct:IssueState::__anon114::__anon116
physaddr	ptlhwdef.h	/^  W64 addrvalid:1, invalid:1, datavalid:1, physaddr:45, bytemask:8, tag:8;$/;"	m	struct:SFR
physaddr_type_names	ptlxen.h	/^static const char* physaddr_type_names[PHYSADDR_TYPE_COUNT] = {"dram", "raw", "ptl", "shinfo", "m2p"};$/;"	v
physmap_pml4_entry	ptlxen-memory.cpp	/^Level4PTE physmap_pml4_entry;$/;"	v
physreg	ooocore-amd-k8.h	/^    PhysicalRegister* physreg;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
physreg	ooocore-amd-k8.h	/^    W16 physreg;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
physreg	ooocore-amd-k8.h	/^    W16 physreg;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
physreg	ooocore.h	/^    PhysicalRegister* physreg;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
physreg	ooocore.h	/^    W16 physreg;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
physreg	ooocore.h	/^    W16 physreg;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
physreg_state_names	ooocore-amd-k8.h	/^  static const char* physreg_state_names[MAX_PHYSREG_STATE] = {"none", "free", "waiting", "bypass", "written", "arch", "pendingfree"};$/;"	v
physreg_state_names	ooocore.h	/^  static const char* physreg_state_names[MAX_PHYSREG_STATE] = {"none", "free", "waiting", "bypass", "written", "arch", "pendingfree"};$/;"	v
physreg_states	ooocore-amd-k8.h	/^    ListOfStateLists physreg_states;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
physreg_states	ooocore.h	/^    ListOfStateLists physreg_states;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
physregfiles	ooocore-amd-k8.h	/^    PhysicalRegisterFile physregfiles[PHYS_REG_FILE_COUNT];$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
physregfiles	ooocore.h	/^    PhysicalRegisterFile physregfiles[PHYS_REG_FILE_COUNT];$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
physregs_full	ooocore-amd-k8.h	/^      W64 physregs_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
physregs_full	ooocore.h	/^      W64 physregs_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
pi	mathlib.cpp	/^  static const mp_no pi = {1,{1.0,3.0,$/;"	v	file:
pin	ptlxen.h	/^  Waddr mfn:28, type:3, pin:1;$/;"	m	struct:PageFrameType
pin_page_table_mfn	ptlmon.cpp	/^  int pin_page_table_mfn(mfn_t mfn, int level) {$/;"	f	struct:XenController
pin_page_table_mfns	ptlmon.cpp	/^  int pin_page_table_mfns(const mfn_t* mfns, int count, int level) {$/;"	f	struct:XenController
pin_page_table_page	ptlmon.cpp	/^  int pin_page_table_page(void* virt, int level) {$/;"	f	struct:XenController
pin_page_table_page	ptlxen-memory.cpp	/^int pin_page_table_page(void* virt, int level) {$/;"	f
pinctl	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
pm	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
pm	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
pointer	globals.h	/^template <typename T> struct ispointer_t<T*> { static const bool pointer = 1; };$/;"	m	struct:ispointer_t
pointer	globals.h	/^template<typename T> struct ispointer_t { static const bool pointer = 0; };$/;"	m	struct:ispointer_t
pointer_to_slaballoc	mm.cpp	/^  static SlabAllocator* pointer_to_slaballoc(void* p) {$/;"	f	struct:SlabAllocator
poll_timer_cycle	ptlhwdef.h	/^  W64  poll_timer_cycle;$/;"	m	struct:ContextBase
pool	mm-private.h	/^  W8  pool;$/;"	m	struct:MemoryManagerEvent
pool_names	mm-private.h	/^static const char* pool_names[PTL_MM_POOL_COUNT] = {"page", "slab", "gen ", "all "};$/;"	v
pop	branchpred.cpp	/^  ReturnAddressStackEntry& pop(ReturnAddressStackEntry& old) {$/;"	f	struct:ReturnAddressStack
pop	logic.h	/^  T* pop() {$/;"	f	struct:FixedQueue
pop	superstl.h	/^    T& pop() {$/;"	f	class:superstl::dynarray
pop	superstl.h	/^    T& pop() {$/;"	f	struct:superstl::stack
pop	superstl.h	/^    void pop(T* obj) { remove_tail(); }$/;"	f	class:superstl::queue
popcount	globals.h	/^static inline int popcount(W32 x) {$/;"	f
popcount	superstl.h	/^    size_t popcount() const { return this->popcountop(); }$/;"	f	class:superstl::bitvec
popcount64	globals.h	/^static inline int popcount64(W64 x) {$/;"	f
popcount8bit	globals.h	/^static inline int popcount8bit(byte x) {$/;"	f
popcountlut8bit	superstl.cpp	/^const unsigned char popcountlut8bit[] = {$/;"	v
popcountop	superstl.h	/^    size_t popcountop() const { return 0; }$/;"	f	struct:superstl::bitvecbase
popcountop	superstl.h	/^    size_t popcountop() const { return popcount64(w); }$/;"	f	struct:superstl::bitvecbase
popcountop	superstl.h	/^    size_t popcountop() const {$/;"	f	struct:superstl::bitvecbase
pophead	logic.h	/^  T* pophead() {$/;"	f	struct:FixedQueue
pops	ooocore-amd-k8.h	/^      W64 pops;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
pops	ooocore.h	/^      W64 pops;$/;"	m	struct:OutOfOrderCoreStats::branchpred::ras
pops	ooocore.h	/^      W64 pops;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
port_to_vcpu	ptlxen-events.cpp	/^inline int port_to_vcpu(int port) {$/;"	f
port_to_vcpu_cache	ptlxen-events.cpp	/^W8s port_to_vcpu_cache[NR_EVENT_CHANNELS];$/;"	v
pp3	mathlib.cpp	/^  static const mynumber pp3 = {{0x98000000, 0xBC8CB3B3 }};\/* -4.9789962314799099e-17  *\/$/;"	v	file:
pp4	mathlib.cpp	/^  static const mynumber pp4 = {{0x23e32ed7, 0xbacd747f }};\/* -1.9034889620193266e-25  *\/$/;"	v	file:
precision	superstl.h	/^    int precision;$/;"	m	struct:superstl::floatstring
predcount	ptlhwdef.h	/^  W32 predcount;$/;"	m	struct:BasicBlockBase
predict	branchpred.cpp	/^  W64 predict(PredictorUpdate& update, int type, W64 branchaddr, W64 target) {$/;"	f	struct:CombinedPredictor
predict	branchpred.cpp	/^  byte* predict(W64 branchaddr) {$/;"	f	struct:BimodalPredictor
predict	branchpred.cpp	/^  byte* predict(W64 branchaddr) {$/;"	f	struct:TwoLevelPredictor
predict	branchpred.cpp	/^W64 BranchPredictorInterface::predict(PredictorUpdate& update, int type, W64 branchaddr, W64 target) {$/;"	f	class:BranchPredictorInterface
predicted_alias	ooocore-amd-k8.h	/^        byte inherit_sfr_used:1, rcready:1, load_store_second_phase:1, predicted_alias:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
predicted_alias	ooocore.h	/^        byte inherit_sfr_used:1, rcready:1, load_store_second_phase:1, predicted_alias:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
predicted_alias_unresolved	ooocore-amd-k8.h	/^        W64 predicted_alias_unresolved;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
predicted_alias_unresolved	ooocore.h	/^        W64 predicted_alias_unresolved;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
predictions	ooocore-amd-k8.h	/^    W64 predictions;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
predictions	ooocore.h	/^    W64 predictions;$/;"	m	struct:OutOfOrderCoreStats::branchpred
predictions	ooocore.h	/^    W64 predictions;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
predinfo	ooocore-amd-k8.h	/^    BranchPredictorUpdateInfo predinfo;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
predinfo	ooocore.h	/^    BranchPredictorUpdateInfo predinfo;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
predrip	ooocore-amd-k8.h	/^        W64 predrip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon44
predrip	ooocore-amd-k8.h	/^        W64 predrip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon49
predrip	ooocore.h	/^        W64 predrip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon13
predrip	ooocore.h	/^        W64 predrip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon8
predtaken	ooocore-amd-k8.h	/^        byte taken:1, predtaken:1, ld_st_truly_unaligned:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
predtaken	ooocore.h	/^        byte taken:1, predtaken:1, ld_st_truly_unaligned:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
prefetch	dcache-amd-k8.h	/^  struct prefetch { \/\/ node: summable$/;"	s	struct:DataCacheStats
prefetch	dcache-amd-k8.h	/^  } prefetch;$/;"	m	struct:DataCacheStats	typeref:struct:DataCacheStats::prefetch
prefetch	dcache.h	/^  struct prefetch { \/\/ node: summable$/;"	s	struct:DataCacheStats
prefetch	dcache.h	/^  } prefetch;$/;"	m	struct:DataCacheStats	typeref:struct:DataCacheStats::prefetch
prefetch	globals.h	/^static inline void prefetch(const void* x) { asm volatile("prefetcht0 (%0)" : : "r" (x)); }$/;"	f
prefetches	dcache-amd-k8.h	/^    W64 prefetches;$/;"	m	struct:PerContextDataCacheStats::store
prefetches	dcache.h	/^    W64 prefetches;$/;"	m	struct:PerContextDataCacheStats::store
prefix_map_x86	decode-core.cpp	/^static const W16 prefix_map_x86[256] = {$/;"	v	file:
prefix_map_x86_64	decode-core.cpp	/^static const W16 prefix_map_x86_64[256] = {$/;"	v	file:
prefix_names	decode-core.cpp	/^const char* prefix_names[PFX_count] = {"repz", "repnz", "lock", "cs", "ss", "ds", "es", "fs", "gs", "datasz", "addrsz", "rex", "fwait"};$/;"	v
prefixes	decode.h	/^  W32 prefixes;$/;"	m	struct:TraceDecoder
prep	kernel.cpp	/^  void prep() {$/;"	f	struct:InsideSimEscapeCode
prep	logic.h	/^  static const vec_t prep(base_t tag) {$/;"	f	struct:FullyAssociativeTags16bit
prep	logic.h	/^  static const vec_t prep(base_t tag) {$/;"	f	struct:FullyAssociativeTags8bit
prep	logic.h	/^  static void prep(vec16b* targetslices, base_t tag) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
prep_L2_sframask_and_reqmask	dcache-amd-k8.h	/^  static inline void prep_L2_sframask_and_reqmask(const SFR* sfr, W64 addr, int sizeshift, bitvec<L2_LINE_SIZE>& sframask, bitvec<L2_LINE_SIZE>& reqmask) {$/;"	f	namespace:CacheSubsystem
prep_L2_sframask_and_reqmask	dcache.h	/^  static inline void prep_L2_sframask_and_reqmask(const SFR* sfr, W64 addr, int sizeshift, bitvec<L2_LINE_SIZE>& sframask, bitvec<L2_LINE_SIZE>& reqmask) {$/;"	f	namespace:CacheSubsystem
prep_initial_ptlsim_context	ptlmon.cpp	/^  void prep_initial_ptlsim_context(int vcpuid, Context& ptlctx) {$/;"	f	struct:XenController
prep_secondary_vcpu_context	ptlxen.cpp	/^void prep_secondary_vcpu_context(int vcpuid, Context& ptlctx) {$/;"	f
prep_sframask_and_reqmask	dcache-amd-k8.h	/^  static inline void prep_sframask_and_reqmask(const SFR* sfr, W64 addr, int sizeshift, bitvec<L1_LINE_SIZE>& sframask, bitvec<L1_LINE_SIZE>& reqmask) {$/;"	f	namespace:CacheSubsystem
prep_sframask_and_reqmask	dcache.h	/^  static inline void prep_sframask_and_reqmask(const SFR* sfr, W64 addr, int sizeshift, bitvec<L1_LINE_SIZE>& sframask, bitvec<L1_LINE_SIZE>& reqmask) {$/;"	f	namespace:CacheSubsystem
present	ptlhwdef.h	/^  W32 present:1, use64:1, use32:1, supervisor:1, dpl:2;$/;"	m	struct:SegmentDescriptorCache
prev	superstl.h	/^    queuelink<T>* prev;$/;"	m	class:superstl::queuelink
prev	superstl.h	/^    selflistlink* prev;$/;"	m	class:superstl::selflistlink
prev	superstl.h	/^    selfqueuelink* prev;$/;"	m	class:superstl::selfqueuelink
prev_interrupts_pending	ooocore-amd-k8.h	/^    bool prev_interrupts_pending;$/;"	m	struct:OutOfOrderModel::ThreadContext
prev_interrupts_pending	ooocore.h	/^    bool prev_interrupts_pending;$/;"	m	struct:OutOfOrderModel::ThreadContext
prevoldest	logic.h	/^  T prevoldest;$/;"	m	struct:HistoryBuffer
primitive	globals.h	/^template <typename T> struct isprimitive_t { static const bool primitive = 0; };$/;"	m	struct:isprimitive_t
print	branchpred.cpp	/^  ostream& print(ostream& os, W64 tag) const {$/;"	f	struct:BTBEntry
print	config.cpp	/^ostream& ConfigurationParserBase::print(const void* baseptr, ostream& os) const {$/;"	f	class:ConfigurationParserBase
print	config.h	/^  ostream& print(ostream& os, const T& config) {$/;"	f	struct:ConfigurationParser
print	datastore.cpp	/^ostream& DataStoreNode::print(ostream& os, const DataStoreNodePrintSettings& printinfo, int depth, double supersum) const {$/;"	f	class:DataStoreNode
print	datastore.cpp	/^ostream& StatsFileReader::print(ostream& os) const {$/;"	f	class:StatsFileReader
print	datastore.h	/^static inline ostream& print(ostream& os, const StatsFileReader& reader) {$/;"	f
print	dcache-amd-k8.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:CacheSubsystem::LoadFillReq
print	dcache.cpp	/^ostream& CacheHierarchy::print(ostream& os) {$/;"	f	class:CacheHierarchy
print	dcache.cpp	/^ostream& CacheLine<linesize>::print(ostream& os, W64 tag) const {$/;"	f	class:CacheLine
print	dcache.cpp	/^ostream& CacheLineWithValidMask<linesize>::print(ostream& os, W64 tag) const {$/;"	f	class:CacheLineWithValidMask
print	dcache.cpp	/^ostream& LoadFillReq::print(ostream& os) const {$/;"	f	class:LoadFillReq
print	dcache.cpp	/^ostream& LoadFillReqQueue<size>::print(ostream& os) const {$/;"	f	class:LoadFillReqQueue
print	dcache.cpp	/^ostream& MissBuffer<SIZE>::print(ostream& os) const {$/;"	f	class:MissBuffer
print	decode-core.cpp	/^ostream& BasicBlockCache::print(ostream& os) {$/;"	f	class:BasicBlockCache
print	decode-core.cpp	/^ostream& DecodedOperand::print(ostream& os) const {$/;"	f	class:DecodedOperand
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:AssociativeArray
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:FixedQueue
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:FullyAssociativeArray
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:FullyAssociativeTags
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:FullyAssociativeTags16bit
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:FullyAssociativeTags8bit
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:LockableAssociativeArray
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:LockableCommitRollbackAssociativeArray
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:LockableFullyAssociativeArray
print	logic.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:LockableFullyAssociativeTags
print	logic.h	/^  stringbuf& print(stringbuf& os) const {$/;"	f	struct:FullyAssociativeTags
print	logic.h	/^  stringbuf& print(stringbuf& os) const {$/;"	f	struct:LockableFullyAssociativeTags
print	mm-private.h	/^  ostream& print(ostream& os) const {$/;"	f	struct:MemoryManagerEvent
print	mm.cpp	/^    ostream& print(ostream& os) {$/;"	f	struct:ExtentAllocator::FreeExtent
print	mm.cpp	/^  ostream& print(ostream& os) const {$/;"	f	struct:ExtentAllocator
print	mm.cpp	/^  ostream& print(ostream& os) const {$/;"	f	struct:SlabAllocator
print	ooocore-amd-k8.h	/^    ostream& print(ostream& os, W64 physaddr) const {$/;"	f	struct:OutOfOrderModel::MemoryInterlockEntry
print	ooocore.cpp	/^ostream& EventLog::print(ostream& os, bool only_to_tail) {$/;"	f	class:EventLog
print	ooocore.cpp	/^ostream& LoadStoreQueueEntry::print(ostream& os) const {$/;"	f	class:LoadStoreQueueEntry
print	ooocore.cpp	/^ostream& OutOfOrderCoreEvent::print(ostream& os) const {$/;"	f	class:OutOfOrderCoreEvent
print	ooocore.cpp	/^ostream& PhysicalRegisterFile::print(ostream& os) const {$/;"	f	class:PhysicalRegisterFile
print	ooocore.cpp	/^ostream& RegisterRenameTable::print(ostream& os) const {$/;"	f	class:RegisterRenameTable
print	ooocore.cpp	/^ostream& ReorderBufferEntry::print(ostream& os) const {$/;"	f	class:ReorderBufferEntry
print	ooocore.h	/^    ostream& print(ostream& os, W64 physaddr) const {$/;"	f	struct:OutOfOrderModel::MemoryInterlockEntry
print	oooexec.cpp	/^ostream& IssueQueue<size, operandcount>::print(ostream& os) const {$/;"	f	class:IssueQueue
print	ptlhwdef.cpp	/^ostream& RIPVirtPhysBase::print(ostream& os) const {$/;"	f	class:RIPVirtPhysBase
print	ptlxen-memory.cpp	/^ostream& print(ostream& os, const xen_memory_reservation_t& req, Context& ctx) {$/;"	f
print	seqcore.cpp	/^  ostream& print(ostream& os) const {$/;"	f	struct:TransactionalMemory
print	seqcore.cpp	/^ostream& CommitRecord::print(ostream& os) const {$/;"	f	class:CommitRecord
print	seqcore.cpp	/^ostream& SequentialCoreEvent::print(ostream& os) const {$/;"	f	class:SequentialCoreEvent
print	seqcore.cpp	/^ostream& SequentialCoreEventLog::print(ostream& os, bool only_to_tail, W64 bbcount) {$/;"	f	class:SequentialCoreEventLog
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	class:superstl::bitvec
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::BitmapAllocator3Level
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::FixedIntegerQueueSet
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::FixedKeyValueHashtable
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::FixedValueHashtable
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::GenericChunkList
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::SearchableChunkList16Entry
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::SelfHashtable
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::range
print	superstl.h	/^    ostream& print(ostream& os) const {$/;"	f	struct:superstl::stack
print	superstl.h	/^    ostream& print(ostream& os) {$/;"	f	struct:superstl::Hashtable
print	superstl.h	/^    stringbuf& print(stringbuf& sb) const {$/;"	f	class:superstl::bitvec
print_banner	ptlmon.cpp	/^void print_banner(ostream& os) {$/;"	f
print_banner	ptlsim.cpp	/^void print_banner(ostream& os, const PTLsimStats& stats, int argc, char** argv) {$/;"	f
print_data	ptlstats.cpp	/^  virtual void print_data(double value, int row, int column) {$/;"	f	class:LaTeXTableCreator
print_data	ptlstats.cpp	/^  virtual void print_data(double value, int row, int column) {$/;"	f	class:TableCreator
print_datastore_info	ptlstats.cpp	/^  bool print_datastore_info;$/;"	m	struct:PTLstatsConfig	file:
print_evtchn_mask	ptlmon.cpp	/^  ostream& print_evtchn_mask(ostream& os, const char* title, const unsigned long* data) {$/;"	f	struct:XenController
print_fetch_bb_address_ringbuf	ooopipe.cpp	/^static void print_fetch_bb_address_ringbuf(ostream& os) {$/;"	f	file:
print_header	ptlstats.cpp	/^  virtual void print_header(int col) {$/;"	f	class:LaTeXTableCreator
print_header	ptlstats.cpp	/^  virtual void print_header(int col) {$/;"	f	class:TableCreator
print_invalid_insns	decode-core.cpp	/^void print_invalid_insns(int op, const byte* ripstart, const byte* rip, int valid_byte_count, const PageFaultErrorCode& pfec, Waddr faultaddr) {$/;"	f
print_list_of_state_lists	ooocore.cpp	/^static void OutOfOrderModel::print_list_of_state_lists(ostream& os, const ListOfStateLists& lol, const char* title) {$/;"	f	class:OutOfOrderModel
print_log_buffer	ptlmon.cpp	/^  void print_log_buffer(ostream& os) {$/;"	f	struct:XenController
print_lsq	ooocore.cpp	/^void ThreadContext::print_lsq(ostream& os) {$/;"	f	class:ThreadContext
print_meminfo_line	ptlxen.cpp	/^void print_meminfo_line(ostream& os, const char* name, W64 pages) {$/;"	f
print_n_basic_blocks	seqcore.cpp	/^  ostream& print_n_basic_blocks(ostream& os, W64 bbcount) {$/;"	f	struct:SequentialCoreEventLog
print_one_basic_block	seqcore.cpp	/^  ostream& print_one_basic_block(ostream& os) {$/;"	f	struct:SequentialCoreEventLog
print_operand_info	ooocore.cpp	/^ostream& ReorderBufferEntry::print_operand_info(ostream& os, int operand) const {$/;"	f	class:ReorderBufferEntry
print_page_chain	mm.cpp	/^  ostream& print_page_chain(ostream& os, PageHeader* page) const {$/;"	f	struct:SlabAllocator
print_page_table	ptlxen-common.cpp	/^ostream& print_page_table(ostream& os, Level1PTE* ptes, W64 baseaddr) {$/;"	f
print_page_table_tree	ptlxen-memory.cpp	/^void print_page_table_tree(ostream& os, mfn_t mfn, int level = 0, int maxlevel = 3) {$/;"	f
print_page_table_with_types	ptlxen-memory.cpp	/^ostream& print_page_table_with_types(ostream& os, Level1PTE* ptes) {$/;"	f
print_pending_events	ptlxen-events.cpp	/^void print_pending_events(ostream& os) {$/;"	f
print_regs	ptlxen.cpp	/^void print_regs(ostream& os, const W64* regs) {$/;"	f
print_rename_tables	ooocore.cpp	/^void ThreadContext::print_rename_tables(ostream& os) {$/;"	f	class:ThreadContext
print_rob	ooocore.cpp	/^void ThreadContext::print_rob(ostream& os) {$/;"	f	class:ThreadContext
print_saved_usage	ptlmon.cpp	/^void print_saved_usage(ostream& os) {$/;"	f
print_smt_state	ooocore.cpp	/^void OutOfOrderCore::print_smt_state(ostream& os) {$/;"	f	class:OutOfOrderCore
print_stack	ptlxen.cpp	/^void print_stack(ostream& os, Waddr sp) {$/;"	f
print_state	seqcore.cpp	/^  ostream& print_state(ostream& os) {$/;"	f	struct:SequentialCore
print_sysinfo	kernel.cpp	/^void print_sysinfo(ostream& os) {$/;"	f
print_sysinfo	ptlxen.cpp	/^void print_sysinfo(ostream& os) {$/;"	f
print_template	ptlstats.cpp	/^  bool print_template;$/;"	m	struct:PTLstatsConfig	file:
print_tlb	ptlxen-memory.cpp	/^void Context::print_tlb(ostream& os) {$/;"	f	class:Context
print_usage	ptlsim.cpp	/^void print_usage(int argc, char** argv) {$/;"	f
print_validate_errors	mm.cpp	/^bool print_validate_errors = 1;$/;"	v
print_value_and_flags	ptlhwdef.cpp	/^stringbuf& print_value_and_flags(stringbuf& sb, W64 value, W16 flags) {$/;"	f
printbanner	ptlstats.cpp	/^void printbanner() {$/;"	f
printenv	kernel.cpp	/^void printenv(char** pp) {$/;"	f
printflags	decode-core.cpp	/^ostream& printflags(ostream& os, W64 flags) {$/;"	f
printfont	ptlstats.cpp	/^  ostream& printfont(ostream& os) {$/;"	f	class:SVGCreator
printheader	ptlstats.cpp	/^  void printheader(float width, float height) {$/;"	f	class:SVGCreator
printhl	superstl.h	/^    ostream& printhl(ostream& os) const {$/;"	f	class:superstl::bitvec
printhl	superstl.h	/^    stringbuf& printhl(stringbuf& sb) const {$/;"	f	class:superstl::bitvec
printid	logic.h	/^  ostream& printid(ostream& os, int slot) const {$/;"	f	struct:FullyAssociativeTags16bit
printid	logic.h	/^  ostream& printid(ostream& os, int slot) const {$/;"	f	struct:FullyAssociativeTags8bit
printid	logic.h	/^  ostream& printid(ostream& os, int slot) const {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
printstyle	ptlstats.cpp	/^  ostream& printstyle(ostream& os) {$/;"	f	class:SVGCreator
printusage	config.cpp	/^ostream& ConfigurationParserBase::printusage(const void* baseptr, ostream& os) const {$/;"	f	class:ConfigurationParserBase
printusage	config.h	/^  ostream& printusage(ostream& os, const T& config) {$/;"	f	struct:ConfigurationParser
printway	logic.h	/^  stringbuf& printway(stringbuf& os, int i) const {$/;"	f	struct:FullyAssociativeTags
printway	logic.h	/^  stringbuf& printway(stringbuf& os, int i) const {$/;"	f	struct:LockableFullyAssociativeTags
probe	dcache-amd-k8.h	/^    bool probe(W64 addr, int threadid = 0) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
probe	dcache.h	/^    bool probe(W64 addr, int threadid = 0) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
probe	logic.h	/^  V* probe(T addr) {$/;"	f	struct:AssociativeArray
probe	logic.h	/^  V* probe(T addr) {$/;"	f	struct:LockableAssociativeArray
probe	logic.h	/^  V* probe(T addr) {$/;"	f	struct:LockableCommitRollbackAssociativeArray
probe	logic.h	/^  V* probe(T tag) {$/;"	f	struct:FullyAssociativeArray
probe	logic.h	/^  V* probe(T tag) {$/;"	f	struct:LockableFullyAssociativeArray
probe	logic.h	/^  int probe(T target) {$/;"	f	struct:FullyAssociativeTags
probe	logic.h	/^  int probe(T target) {$/;"	f	struct:LockableFullyAssociativeTags
probe	logic.h	/^  int probe(base_t target) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
probe_cache_and_sfr	dcache.cpp	/^bool CacheHierarchy::probe_cache_and_sfr(W64 addr, const SFR* sfr, int sizeshift) {$/;"	f	class:CacheHierarchy
probe_icache	dcache.cpp	/^bool CacheHierarchy::probe_icache(Waddr virtaddr, Waddr physaddr) {$/;"	f	class:CacheHierarchy
probecache	oooexec.cpp	/^int ReorderBufferEntry::probecache(Waddr addr, LoadStoreQueueEntry* sfra) {$/;"	f	class:ReorderBufferEntry
probed	dcache-amd-k8.h	/^    static void probed(V& line, W64 tag, int way, bool hit) { $/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
probed	dcache.h	/^    static void probed(V& line, W64 tag, int way, bool hit) { $/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
probed	logic.h	/^  static void probed(V& elem, T tag, int way, bool hit) { }$/;"	f	struct:NullAssociativeArrayStatisticsCollector
process_event	ptlmon.cpp	/^  int process_event() {$/;"	f	struct:XenController
process_native_upcall	ptlxen.cpp	/^void process_native_upcall() {$/;"	f
propagate_x86_exception	kernel.cpp	/^void Context::propagate_x86_exception(byte exception, W32 errorcode, Waddr virtaddr) {$/;"	f	class:Context
propagate_x86_exception	ptlxen.cpp	/^void Context::propagate_x86_exception(byte exception, W32 errorcode, Waddr virtaddr) {$/;"	f	class:Context
prot	kernel.cpp	/^  W32 prot;$/;"	m	struct:old_mmap32_arg_struct	file:
prot	kernel.cpp	/^  unsigned int prot;$/;"	m	struct:MemoryMapExtent	file:
pse	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
pseudo_real_time_clock	ptlsim.h	/^  bool pseudo_real_time_clock;$/;"	m	struct:PTLsimConfig
pseudocommit	oooexec.cpp	/^int ReorderBufferEntry::pseudocommit() {$/;"	f	class:ReorderBufferEntry
psz	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
pt_to_px	ptlstats.cpp	/^inline double pt_to_px(double pt) { return pt \/ 1.25; }$/;"	f
pte_t	ptlxen.h	/^typedef unsigned long pte_t;$/;"	t
pte_to_mapped_virt	ptlxen.h	/^static inline void* pte_to_mapped_virt(W64 rawvirt, const Level1PTE& pte) {$/;"	f
pte_update_count	seqcore.h	/^  int pte_update_count;$/;"	m	struct:CommitRecord
ptehi	decode.h	/^  Level1PTE ptehi;$/;"	m	struct:TraceDecoder
ptelo	decode.h	/^  Level1PTE ptelo;$/;"	m	struct:TraceDecoder
pteupdate	ooocore-amd-k8.h	/^        PTEUpdateBase pteupdate;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
pteupdate	ooocore-amd-k8.h	/^    PTEUpdate pteupdate;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
pteupdate	ooocore.h	/^        PTEUpdateBase pteupdate;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
pteupdate	ooocore.h	/^    PTEUpdate pteupdate;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
pteupdate	seqcore.cpp	/^      W64 pteupdate;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon91	file:
pteupdate	seqcore.cpp	/^    } pteupdate;$/;"	m	union:SequentialCoreEvent::__anon86	typeref:struct:SequentialCoreEvent::__anon86::__anon91	file:
pteused	seqcore.cpp	/^      W64 pteused;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon88	file:
ptl_alloc_private_32bit_pages	ptlmon.cpp	/^void* ptl_alloc_private_32bit_pages(Waddr bytecount, int prot, Waddr base) {$/;"	f
ptl_alloc_private_page	ptlmon.cpp	/^void* ptl_alloc_private_page() {$/;"	f
ptl_alloc_private_pages	ptlmon.cpp	/^void* ptl_alloc_private_pages(Waddr bytecount, int prot, Waddr base = 0, int extraflags = 0) {$/;"	f
ptl_free_private_page	ptlmon.cpp	/^void ptl_free_private_page(void* addr) {$/;"	f
ptl_free_private_pages	ptlmon.cpp	/^void ptl_free_private_pages(void* addr, Waddr bytecount) {$/;"	f
ptl_internal_trap	ptlxen.cpp	/^asmlinkage void ptl_internal_trap(int trapid, const char* name, W64* regs) {$/;"	f
ptl_level1_pfn	ptlmon.cpp	/^  pfn_t ptl_level4_pfn, ptl_level3_pfn, phys_level3_pfn, ptl_level2_pfn, ptl_level1_pfn;$/;"	m	struct:XenController	file:
ptl_level2_mfn	ptlmon.cpp	/^  mfn_t ptl_level4_mfn, ptl_level3_mfn, phys_level3_mfn, ptl_level2_mfn;$/;"	m	struct:XenController	file:
ptl_level2_pfn	ptlmon.cpp	/^  pfn_t ptl_level4_pfn, ptl_level3_pfn, phys_level3_pfn, ptl_level2_pfn, ptl_level1_pfn;$/;"	m	struct:XenController	file:
ptl_level3_map	ptlxen.h	/^  Level3PTE* ptl_level3_map;$/;"	m	struct:PTLsimMonitorInfo
ptl_level3_mfn	ptlmon.cpp	/^  mfn_t ptl_level4_mfn, ptl_level3_mfn, phys_level3_mfn, ptl_level2_mfn;$/;"	m	struct:XenController	file:
ptl_level3_mfn	ptlxen.h	/^  mfn_t ptl_level3_mfn;$/;"	m	struct:PTLsimMonitorInfo
ptl_level3_pfn	ptlmon.cpp	/^  pfn_t ptl_level4_pfn, ptl_level3_pfn, phys_level3_pfn, ptl_level2_pfn, ptl_level1_pfn;$/;"	m	struct:XenController	file:
ptl_level4_mfn	ptlmon.cpp	/^  mfn_t ptl_level4_mfn, ptl_level3_mfn, phys_level3_mfn, ptl_level2_mfn;$/;"	m	struct:XenController	file:
ptl_level4_pfn	ptlmon.cpp	/^  pfn_t ptl_level4_pfn, ptl_level3_pfn, phys_level3_pfn, ptl_level2_pfn, ptl_level1_pfn;$/;"	m	struct:XenController	file:
ptl_lock_private_pages	ptlmon.cpp	/^bool ptl_lock_private_pages(void* addr, Waddr bytecount) {$/;"	f
ptl_mfns	ptlmon.cpp	/^  mfn_t* ptl_mfns;$/;"	m	struct:XenController	file:
ptl_mm_add_event	mm.cpp	/^void ptl_mm_add_event(int event, int pool, void* caller, void* address, W32 bytes, int slab = 0) {$/;"	f
ptl_mm_alloc	mm.cpp	/^void* ptl_mm_alloc(size_t bytes) {$/;"	f
ptl_mm_alloc	mm.cpp	/^void* ptl_mm_alloc(size_t bytes, void* caller) {$/;"	f
ptl_mm_alloc_aligned	mm.cpp	/^void* ptl_mm_alloc_aligned(int alignbits) {$/;"	f
ptl_mm_alloc_and_zero_private_pages_for_objects	mm.h	/^static inline T* ptl_mm_alloc_and_zero_private_pages_for_objects(int count) {$/;"	f
ptl_mm_alloc_private_32bit_page	mm.cpp	/^void* ptl_mm_alloc_private_32bit_page() {$/;"	f
ptl_mm_alloc_private_32bit_pages	mm.cpp	/^void* ptl_mm_alloc_private_32bit_pages(Waddr bytecount, int prot, Waddr base) {$/;"	f
ptl_mm_alloc_private_page	mm.cpp	/^void* ptl_mm_alloc_private_page() {$/;"	f
ptl_mm_alloc_private_pages	mm.cpp	/^void* ptl_mm_alloc_private_pages(Waddr bytecount, int prot, Waddr base) { $/;"	f
ptl_mm_alloc_private_pages	mm.cpp	/^void* ptl_mm_alloc_private_pages(Waddr bytecount, int prot, Waddr base) {$/;"	f
ptl_mm_alloc_private_pages_for_objects	mm.h	/^static inline T* ptl_mm_alloc_private_pages_for_objects(int count) {$/;"	f
ptl_mm_capture_stats	mm.cpp	/^DataStoreNode& ptl_mm_capture_stats(DataStoreNode& root) {$/;"	f
ptl_mm_cleanup	mm.cpp	/^void ptl_mm_cleanup() {$/;"	f
ptl_mm_dump	mm.cpp	/^void ptl_mm_dump(ostream& os) {$/;"	f
ptl_mm_dump_free_bytes	mm.cpp	/^W64 ptl_mm_dump_free_bytes(ostream& os) {$/;"	f
ptl_mm_flush_logging	mm.cpp	/^void ptl_mm_flush_logging() {$/;"	f
ptl_mm_free	mm.cpp	/^void ptl_mm_free(void* p) {$/;"	f
ptl_mm_free	mm.cpp	/^void ptl_mm_free(void* p, void* caller) {$/;"	f
ptl_mm_free_private_page	mm.cpp	/^void ptl_mm_free_private_page(void* addr) {$/;"	f
ptl_mm_free_private_pages	mm.cpp	/^void ptl_mm_free_private_pages(void* addr, Waddr bytecount) {$/;"	f
ptl_mm_getsize	mm.cpp	/^size_t ptl_mm_getsize(void* p) {$/;"	f
ptl_mm_init	mm.cpp	/^void ptl_mm_init(byte* heap_start, byte* heap_end) {$/;"	f
ptl_mm_reclaim	mm.cpp	/^void ptl_mm_reclaim(size_t bytes, int urgency) {$/;"	f
ptl_mm_register_reclaim_handler	mm.cpp	/^bool ptl_mm_register_reclaim_handler(mm_reclaim_handler_t handler) {$/;"	f
ptl_mm_set_logging	mm.cpp	/^void ptl_mm_set_logging(const char* mm_log_filename, int mm_event_buffer_size, bool set_enable_inline_mm_logging) {$/;"	f
ptl_mm_set_validate	mm.cpp	/^void ptl_mm_set_validate(bool set_enable_mm_validate) {$/;"	f
ptl_mm_try_alloc	mm.cpp	/^void* ptl_mm_try_alloc(size_t bytes) {$/;"	f
ptl_mm_try_alloc_private_page	mm.cpp	/^void* ptl_mm_try_alloc_private_page() {$/;"	f
ptl_mm_try_alloc_private_pages	mm.cpp	/^void* ptl_mm_try_alloc_private_pages(Waddr bytecount, int prot, Waddr base, void* caller) {$/;"	f
ptl_mm_validate	mm.cpp	/^void ptl_mm_validate() {$/;"	f
ptl_mm_zero_private_page	mm.cpp	/^void ptl_mm_zero_private_page(void* addr) {$/;"	f
ptl_mm_zero_private_pages	mm.cpp	/^void ptl_mm_zero_private_pages(void* addr, Waddr bytecount) {$/;"	f
ptl_page_count	ptlmon.cpp	/^  int ptl_page_count;$/;"	m	struct:XenController	file:
ptl_pagedir	ptlxen.h	/^  Level1PTE* ptl_pagedir;$/;"	m	struct:PTLsimMonitorInfo
ptl_pagedir_map	ptlxen.h	/^  Level2PTE* ptl_pagedir_map;$/;"	m	struct:PTLsimMonitorInfo
ptl_pagedir_map_mfn	ptlxen.h	/^  mfn_t ptl_pagedir_map_mfn;$/;"	m	struct:PTLsimMonitorInfo
ptl_pagedir_mfn_count	ptlmon.cpp	/^  int ptl_pagedir_mfn_count;$/;"	m	struct:XenController	file:
ptl_pagedir_mfn_count	ptlxen.h	/^  W64 ptl_pagedir_mfn_count;$/;"	m	struct:PTLsimMonitorInfo
ptl_pip	seqcore.cpp	/^      W64 ptl_pip;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon93	file:
ptl_unlock_private_pages	ptlmon.cpp	/^bool ptl_unlock_private_pages(void* addr, Waddr bytecount) {$/;"	f
ptl_virt_to_mfn	ptlmon.cpp	/^  mfn_t ptl_virt_to_mfn(void* virt) {$/;"	f	struct:XenController
ptl_virt_to_mfn	ptlxen.h	/^static inline mfn_t ptl_virt_to_mfn(void* p) {$/;"	f
ptl_virt_to_pfn	ptlmon.cpp	/^  pfn_t ptl_virt_to_pfn(void* virt) {$/;"	f	struct:XenController
ptl_virt_to_pfn	ptlxen.h	/^static inline pfn_t ptl_virt_to_pfn(void* p) {$/;"	f
ptl_virt_to_phys	ptlxen.h	/^static inline W64 ptl_virt_to_phys(void* p) {$/;"	f
ptl_zero_private_pages	ptlmon.cpp	/^void ptl_zero_private_pages(void* addr, Waddr bytecount) {$/;"	f
ptlcall	ptlcalls.h	/^static inline W64 ptlcall(W64 callid, W64 arg1, W64 arg2, W64 arg3, W64 arg4, W64 arg5) {$/;"	f
ptlcall	ptlcalls.h	/^static inline W64 ptlcall(W64 op, W64 arg1, W64 arg2, W64 arg3, W64 arg4) {$/;"	f
ptlcall_buf	ptlxen.cpp	/^char ptlcall_buf[4096];$/;"	v
ptlcall_capture_stats	ptlcalls.h	/^static inline W64 ptlcall_capture_stats(const char* name) { return ptlcall(PTLCALL_CAPTURE_STATS, (W64)(Waddr)name, 0, 0, 0, 0); }$/;"	f
ptlcall_capture_stats	ptlcalls.h	/^static inline W64 ptlcall_capture_stats(const char* snapshot) {$/;"	f
ptlcall_capture_stats_	ptlcalls.c	/^  W64 ptlcall_capture_stats_() { return ptlcall_capture_stats(NULL); }$/;"	f
ptlcall_capture_stats__	ptlcalls.c	/^  W64 ptlcall_capture_stats__() { return ptlcall_capture_stats(NULL); }$/;"	f
ptlcall_checkpoint	ptlcalls.h	/^static inline W64 ptlcall_checkpoint(const char* name) {$/;"	f
ptlcall_func_t	ptlcalls.h	/^typedef W64 (*ptlcall_func_t)(W64 callid, W64 arg1, W64 arg2, W64 arg3, W64 arg4, W64 arg5);$/;"	t
ptlcall_insn_supported	ptlcalls.h	/^static int ptlcall_insn_supported = -1;$/;"	v
ptlcall_marker	ptlcalls.h	/^static inline W64 ptlcall_marker(W64 marker) { return ptlcall(PTLCALL_MARKER, marker, 0, 0, 0, 0); }$/;"	f
ptlcall_marker	ptlcalls.h	/^static inline W64 ptlcall_marker(W64 marker) {$/;"	f
ptlcall_multi	ptlcalls.h	/^static inline W64 ptlcall_multi(char* const list[], size_t length, int flush) {$/;"	f
ptlcall_multi_enqueue	ptlcalls.h	/^static inline W64 ptlcall_multi_enqueue(char* const list[], size_t length) {$/;"	f
ptlcall_multi_flush	ptlcalls.h	/^static inline W64 ptlcall_multi_flush(char* const list[], size_t length) {$/;"	f
ptlcall_names	kernel.cpp	/^const char* ptlcall_names[PTLCALL_COUNT] = {"nop", "marker", "switch_to_sim", "switch_to_native", "capture_stats"};$/;"	v
ptlcall_nop	ptlcalls.h	/^static inline W64 ptlcall_nop() { return ptlcall(PTLCALL_MARKER, 0, 0, 0, 0, 0); }$/;"	f
ptlcall_nop	ptlcalls.h	/^static inline W64 ptlcall_nop() {$/;"	f
ptlcall_nop_	ptlcalls.c	/^  W64 ptlcall_nop_() { return ptlcall_nop(); }$/;"	f
ptlcall_nop__	ptlcalls.c	/^  W64 ptlcall_nop__() { return ptlcall_nop(); }$/;"	f
ptlcall_op	ptlcalls.h	/^static inline W64 ptlcall_op(W32 op, W32 arg1, W32 arg2, W32 arg3, W32 arg4) {$/;"	f
ptlcall_op	ptlcalls.h	/^static inline W64 ptlcall_op(W64 op, W64 arg1, W64 arg2, W64 arg3, W64 arg4) {$/;"	f
ptlcall_rdtsc	ptlcalls.h	/^static inline W64 ptlcall_rdtsc() {$/;"	f
ptlcall_single	ptlcalls.h	/^static inline W64 ptlcall_single(const char* command, int flush) {$/;"	f
ptlcall_single_enqueue	ptlcalls.h	/^static inline W64 ptlcall_single_enqueue(const char* command) {$/;"	f
ptlcall_single_flush	ptlcalls.h	/^static inline W64 ptlcall_single_flush(const char* command) {$/;"	f
ptlcall_switch_to_native	ptlcalls.h	/^static inline W64 ptlcall_switch_to_native() { return ptlcall(PTLCALL_SWITCH_TO_NATIVE, 0, 0, 0, 0, 0); }$/;"	f
ptlcall_switch_to_native	ptlcalls.h	/^static inline W64 ptlcall_switch_to_native() {$/;"	f
ptlcall_switch_to_native_	ptlcalls.c	/^  W64 ptlcall_switch_to_native_() { return ptlcall_switch_to_native(); }$/;"	f
ptlcall_switch_to_native__	ptlcalls.c	/^  W64 ptlcall_switch_to_native__() { return ptlcall_switch_to_native(); }$/;"	f
ptlcall_switch_to_sim	ptlcalls.h	/^static inline W64 ptlcall_switch_to_sim() { return ptlcall(PTLCALL_SWITCH_TO_SIM, 0, 0, 0, 0, 0); }$/;"	f
ptlcall_switch_to_sim	ptlcalls.h	/^static inline W64 ptlcall_switch_to_sim() {$/;"	f
ptlcall_switch_to_sim_	ptlcalls.c	/^  W64 ptlcall_switch_to_sim_() { return ptlcall_switch_to_sim(); }$/;"	f
ptlcall_switch_to_sim__	ptlcalls.c	/^  W64 ptlcall_switch_to_sim__() { return ptlcall_switch_to_sim(); }$/;"	f
ptlcall_while_in_native	ptlxen.cpp	/^int ptlcall_while_in_native = 0;$/;"	v
ptlcore_ptr_to_ptlmon_ptr	ptlmon.cpp	/^static inline T ptlcore_ptr_to_ptlmon_ptr(T p) {$/;"	f	file:
ptlmon_ptr_to_ptlcore_ptr	ptlmon.cpp	/^static inline T ptlmon_ptr_to_ptlcore_ptr(T p) {$/;"	f	file:
ptlsim_breakout_port	ptlmon.cpp	/^  int ptlsim_breakout_port;$/;"	m	struct:XenController	file:
ptlsim_entry_shinfo	ptlmon.cpp	/^  shared_info* ptlsim_entry_shinfo;$/;"	m	struct:XenController	file:
ptlsim_filename	loader.h	/^  char ptlsim_filename[1024];$/;"	m	struct:LoaderInfo
ptlsim_hostcall_port	ptlmon.cpp	/^  int ptlsim_hostcall_port;$/;"	m	struct:XenController	file:
ptlsim_hypercall_histogram	ptlxen.cpp	/^W64 ptlsim_hypercall_histogram[64];$/;"	v
ptlsim_init	ptlxen.cpp	/^void ptlsim_init() {$/;"	f
ptlsim_init_fail	ptlxen.cpp	/^static inline void ptlsim_init_fail(W64 marker) {$/;"	f	file:
ptlsim_inject	kernel.cpp	/^int ptlsim_inject(int argc, char** argv) {$/;"	f
ptlsim_loader_thunk_name	injectcode.cpp	/^void ptlsim_loader_thunk_name(LoaderInfo* info) {$/;"	f
ptlsim_loader_thunk_name	injectcode.cpp	70;"	d	file:
ptlsim_loader_thunk_name	injectcode.cpp	74;"	d	file:
ptlsim_marker_id	ptlcalls.h	/^static W64 ptlsim_marker_id = 0;$/;"	v
ptlsim_mfn_bitmap	ptlxen.cpp	/^infinite_bitvec_t* ptlsim_mfn_bitmap = null;$/;"	v
ptlsim_pml4_entry	ptlxen-memory.cpp	/^Level4PTE ptlsim_pml4_entry;$/;"	v
ptlsim_preinit	kernel.cpp	/^extern "C" void* ptlsim_preinit(void* origrsp, void* nextinit) {$/;"	f
ptlsim_preinit_entry	lowlevel-32bit.S	/^ptlsim_preinit_entry:$/;"	l
ptlsim_preinit_entry	lowlevel-64bit-xen.S	/^ptlsim_preinit_entry:$/;"	l
ptlsim_preinit_entry	lowlevel-64bit.S	/^ptlsim_preinit_entry:$/;"	l
ptlsim_state	ptlxen.h	/^  byte ptlsim_state; \/\/ (PTLSIM_STATE_xxx)$/;"	m	struct:PTLsimMonitorInfo
ptlsim_upcall_port	ptlmon.cpp	/^  int ptlsim_upcall_port;$/;"	m	struct:XenController	file:
ptr_t	superstl.h	/^    typedef int ptr_t;$/;"	t	struct:superstl::FixedKeyValueHashtable
ptr_t	superstl.h	/^    typedef int ptr_t;$/;"	t	struct:superstl::FixedValueHashtable
ptralign	globals.h	603;"	d
ptrmask	globals.h	604;"	d
ptwrite	ptlhwdef.h	/^  byte a:1, d:1, ptwrite:1, pad:5;$/;"	m	struct:PTEUpdateBase
push	branchpred.cpp	/^  void push(W64 uuid, W64 rip, ReturnAddressStackEntry& old) {$/;"	f	struct:ReturnAddressStack
push	logic.h	/^  T* push() {$/;"	f	struct:FixedQueue
push	logic.h	/^  T* push(const T& data) {$/;"	f	struct:FixedQueue
push	superstl.h	/^    T& push() {$/;"	f	class:superstl::dynarray
push	superstl.h	/^    T& push() {$/;"	f	struct:superstl::stack
push	superstl.h	/^    T& push(const T& v) {$/;"	f	struct:superstl::stack
push	superstl.h	/^    void push(T* obj) { add_to_tail(obj); }$/;"	f	class:superstl::queue
push	superstl.h	/^    void push(const T& obj) {$/;"	f	class:superstl::dynarray
push_on_kernel_stack	ptlxen.cpp	/^static inline bool push_on_kernel_stack(Context& ctx, Waddr& p, Waddr data) {$/;"	f	file:
pushes	ooocore-amd-k8.h	/^      W64 pushes;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
pushes	ooocore.h	/^      W64 pushes;$/;"	m	struct:OutOfOrderCoreStats::branchpred::ras
pushes	ooocore.h	/^      W64 pushes;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
pushhead	logic.h	/^  T* pushhead() {$/;"	f	struct:FixedQueue
put	decode-core.cpp	/^void TraceDecoder::put(const TransOp& transop) {$/;"	f	class:TraceDecoder
put	ptlsim.h	/^  int put() {$/;"	f	struct:TransOpBuffer
putreq	ptlxen-events.cpp	832;"	d	file:
putreq	ptlxen-memory.cpp	1606;"	d	file:
putreq	ptlxen.cpp	1101;"	d	file:
pvi	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
pwt	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
pwt	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
pwt	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
pwt	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
px_to_pt	ptlstats.cpp	/^inline double px_to_pt(double px) { return px * 1.25; }$/;"	f
q_mode	decode.h	/^enum { b_mode, v_mode, w_mode, d_mode, q_mode, x_mode, dq_mode };$/;"	e	enum:__anon140
qnan	globals.h	/^  struct { W64 mantissa:51, qnan:1, exponent:11, negative:1; } ieeenan;$/;"	m	struct:W64orDouble::__anon29
query_page	ptlxen-memory.cpp	/^page_type_t query_page(mfn_t mfn) {$/;"	f
query_page_type	ptlmon.cpp	/^  page_type_t query_page_type(const mfn_t mfn) {$/;"	f	struct:XenController
query_pages	ptlxen-memory.cpp	/^int query_pages(page_type_t* pt, int count) {$/;"	f
queue	superstl.h	/^    queue() { reset(); }$/;"	f	class:superstl::queue
queue	superstl.h	/^  class queue: selflistlink {$/;"	c	namespace:superstl
queued_mem_lock_release_count	ooocore-amd-k8.h	/^    byte queued_mem_lock_release_count;$/;"	m	struct:OutOfOrderModel::ThreadContext
queued_mem_lock_release_count	ooocore.h	/^    byte queued_mem_lock_release_count;$/;"	m	struct:OutOfOrderModel::ThreadContext
queued_mem_lock_release_list	ooocore-amd-k8.h	/^    W64 queued_mem_lock_release_list[4];$/;"	m	struct:OutOfOrderModel::ThreadContext
queued_mem_lock_release_list	ooocore.h	/^    W64 queued_mem_lock_release_list[4];$/;"	m	struct:OutOfOrderModel::ThreadContext
queued_upcall_count	ptlxen.h	/^  W32s queued_upcall_count;$/;"	m	struct:PTLsimMonitorInfo
queuelink	superstl.h	/^    queuelink() { reset(); }$/;"	f	class:superstl::queuelink
queuelink	superstl.h	/^    queuelink(const T& t) { reset(); data = &t; }$/;"	f	class:superstl::queuelink
queuelink	superstl.h	/^    queuelink(const T* t) { reset(); data = t; }$/;"	f	class:superstl::queuelink
queuelink	superstl.h	/^  class queuelink {$/;"	c	namespace:superstl
quiet	ptlsim.h	/^  bool quiet;$/;"	m	struct:PTLsimConfig
quiet_nan	mathlib.cpp	/^    W32 mantissa0:19, quiet_nan:1, exponent:11, negative:1;$/;"	m	struct:math::ieee754_double::__anon84	file:
quiet_nan	mathlib.cpp	/^  struct { W32 mantissa:22, quiet_nan:1, exponent:8, negative:1; } ieee_nan;$/;"	m	struct:math::ieee754_float::__anon82	file:
r	ptlstats.cpp	/^  float r;$/;"	m	struct:RGBAColor	file:
ra	ptlhwdef.h	/^  W64 ra;$/;"	m	struct:IssueInput
ra	ptlhwdef.h	/^  byte rd, ra, rb, rc;$/;"	m	struct:TransOpBase
ra	ptlhwdef.h	/^  byte req2, ra, rb;$/;"	m	struct:CondCodeToFlagRegs
radix	mathlib.cpp	/^  static const number radix          = {{0x00000000, 0x41700000}}; \/* 2**24  *\/$/;"	v	file:
radixi	mathlib.cpp	/^  static const number radixi         = {{0x00000000, 0x3e700000}}; \/* 2**-24 *\/$/;"	v	file:
raflags	ptlhwdef.h	/^  W16 raflags;$/;"	m	struct:IssueInput
random32	superstl.cpp	/^  W32 RandomNumberGenerator::random32() {$/;"	f	class:superstl::RandomNumberGenerator
random64	superstl.cpp	/^  W64 RandomNumberGenerator::random64() {$/;"	f	class:superstl::RandomNumberGenerator
range	superstl.h	/^    range() { } $/;"	f	struct:superstl::range
range	superstl.h	/^    range(T lo, T hi) { this->lo = lo; this->hi = hi; }$/;"	f	struct:superstl::range
range	superstl.h	/^    range(T v) { this->lo = v; this->hi = v; }$/;"	f	struct:superstl::range
range	superstl.h	/^  struct range {$/;"	s	namespace:superstl
ras	branchpred.cpp	/^  ReturnAddressStack<RASSIZE> ras;$/;"	m	struct:CombinedPredictor	file:
ras	ooocore-amd-k8.h	/^    struct ras { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::branchpred
ras	ooocore-amd-k8.h	/^    } ras;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred	typeref:struct:PerContextOutOfOrderCoreStats::branchpred::ras
ras	ooocore.h	/^    struct ras { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::branchpred
ras	ooocore.h	/^    struct ras { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::branchpred
ras	ooocore.h	/^    } ras;$/;"	m	struct:OutOfOrderCoreStats::branchpred	typeref:struct:OutOfOrderCoreStats::branchpred::ras
ras	ooocore.h	/^    } ras;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred	typeref:struct:PerContextOutOfOrderCoreStats::branchpred::ras
ras_old	branchpred.h	/^  ReturnAddressStackEntry ras_old;$/;"	m	struct:PredictorUpdate
ras_push	branchpred.h	/^  W32 ctxid:8, flags:8, bimodal:1, twolevel:1, meta:1, ras_push:1;$/;"	m	struct:PredictorUpdate
rate	stats.h	/^      struct rate {$/;"	s	struct:PTLsimStats::simulator::performance
rate	stats.h	/^      } rate;$/;"	m	struct:PTLsimStats::simulator::performance	typeref:struct:PTLsimStats::simulator::performance::rate
rawcopy	globals.h	/^inline void rawcopy(T& dest, const V& source) { memcpy(&dest, &source, sizeof(T)); }$/;"	f
rb	ptlhwdef.h	/^  W64 rb;$/;"	m	struct:IssueInput
rb	ptlhwdef.h	/^  byte rd, ra, rb, rc;$/;"	m	struct:TransOpBase
rb	ptlhwdef.h	/^  byte req2, ra, rb;$/;"	m	struct:CondCodeToFlagRegs
rbflags	ptlhwdef.h	/^  W16 rbflags;$/;"	m	struct:IssueInput
rbimm	ptlhwdef.h	/^  W64s rbimm;$/;"	m	struct:TransOpBase
rc	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
rc	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
rc	ptlhwdef.h	/^  W64 rc;$/;"	m	struct:IssueInput
rc	ptlhwdef.h	/^  byte rd, ra, rb, rc;$/;"	m	struct:TransOpBase
rc	ptlxen.h	/^  W64 rc;$/;"	m	struct:PTLsimHostCall
rcflags	ptlhwdef.h	/^  W16 rcflags;$/;"	m	struct:IssueInput
rcimm	ptlhwdef.h	/^  W64s rcimm;$/;"	m	struct:TransOpBase
rcready	ooocore-amd-k8.h	/^        byte inherit_sfr_used:1, rcready:1, load_store_second_phase:1, predicted_alias:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
rcready	ooocore.h	/^        byte inherit_sfr_used:1, rcready:1, load_store_second_phase:1, predicted_alias:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
rd	ptlhwdef.h	/^  byte rd, ra, rb, rc;$/;"	m	struct:TransOpBase
rddata	ptlhwdef.h	/^      W64 rddata;$/;"	m	struct:IssueState::__anon114::__anon115
rddata	ptlhwdef.h	/^      W64 rddata;$/;"	m	struct:IssueState::__anon114::__anon116
rdflags	ptlhwdef.h	/^      W64 addr:48, rdflags:16;$/;"	m	struct:IssueState::__anon114::__anon115
rdmsr	ptlmon.cpp	/^static W64 rdmsr(int xc, int cpu, W32 index) {$/;"	f	file:
rdp	ptlhwdef.h	/^      W64 rdp;$/;"	m	struct:FXSAVEStruct::__anon120::__anon122
rdpmc	cpuid.cpp	/^static inline W64 rdpmc(W32 op) {$/;"	f	file:
rdpmc	ptlxen.h	/^static inline W64 rdpmc(W32 op) {$/;"	f
rdtsc	globals.h	/^static inline W64 rdtsc() {$/;"	f
read	datastore.cpp	/^bool DataStoreNode::read(idstream& is) {$/;"	f	class:DataStoreNode
read	superstl.cpp	/^  int idstream::read(void* dest, int count) {$/;"	f	class:superstl::idstream
read_cr2	ptlxen-memory.cpp	/^static inline Waddr read_cr2() { return shinfo.vcpu_info[0].arch.cr2; }$/;"	f	file:
read_exec_only	kernel.cpp	/^  W32 read_exec_only:1;$/;"	m	struct:user_desc_32bit	file:
read_process_memory_W32	kernel.cpp	/^W32 read_process_memory_W32(int pid, W64 source) {$/;"	f
read_process_memory_W32	kernel.cpp	/^W32 read_process_memory_W32(int pid, Waddr source) {$/;"	f
read_process_memory_W64	kernel.cpp	/^W64 read_process_memory_W64(int pid, W64 source) {$/;"	f
read_process_memory_W64	kernel.cpp	/^W64 read_process_memory_W64(int pid, Waddr source) {$/;"	f
readbuf	superstl.cpp	/^  int idstream::readbuf(byte* dest, int count) {$/;"	f	class:superstl::idstream
readline	superstl.cpp	/^  int idstream::readline(char* v, int len) {$/;"	f	class:superstl::idstream
readline	superstl.cpp	/^  int idstream::readline(stringbuf& sb) {$/;"	f	class:superstl::idstream
readline	superstl.h	/^    readline(char* p, size_t l): buf(p), len(l) { }$/;"	f	class:superstl::readline
readline	superstl.h	/^  class readline { $/;"	c	namespace:superstl
readmap	kernel.h	/^  spat_t readmap;$/;"	m	class:AddressSpace
ready	dcache-amd-k8.h	/^    bitvec<size> ready;                      \/\/ Wait to extract\/signext and write into register$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
ready	dcache.h	/^    bitvec<size> ready;                      \/\/ Wait to extract\/signext and write into register$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
ready	ooocore-amd-k8.h	/^        byte ready;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon50
ready	ooocore-amd-k8.h	/^    bool ready() const { return ((flags & FLAG_WAIT) == 0); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
ready	ooocore.h	/^        byte ready;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon14
ready	ooocore.h	/^    bool ready() const { return ((flags & FLAG_WAIT) == 0); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
ready	ptlxen.h	/^  W32 ready;$/;"	m	struct:PTLsimHostCall
ready_to_commit	ooocore.cpp	/^bool ReorderBufferEntry::ready_to_commit() const {$/;"	f	class:ReorderBufferEntry
ready_to_issue	ooocore.cpp	/^bool ReorderBufferEntry::ready_to_issue() const {$/;"	f	class:ReorderBufferEntry
real_target_rip	seqcore.cpp	/^      W64 real_target_rip;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon93	file:
real_timer_port	ptlxen-events.cpp	/^int real_timer_port[MAX_VIRT_CPUS];$/;"	v
realtime	ptlsim.h	/^  bool realtime;$/;"	m	struct:PTLsimConfig
reason	ptlxen.h	/^      int reason;$/;"	m	struct:PTLsimHostCall::__anon99::__anon108
reclaim	decode-core.cpp	/^int BasicBlockCache::reclaim(size_t bytesreq, int urgency) {$/;"	f	class:BasicBlockCache
reclaim	mm.cpp	/^  int reclaim(int limit = 0) {$/;"	f	struct:SlabAllocator
reclaim_handler_list	mm.cpp	/^mm_reclaim_handler_t reclaim_handler_list[64];$/;"	v
reclaim_handler_list_count	mm.cpp	/^int reclaim_handler_list_count = 0;$/;"	v
reclaim_reqs	mm.cpp	/^  W64 reclaim_reqs;$/;"	m	struct:SlabAllocator	file:
reclaim_rounds	stats.h	/^    W64 reclaim_rounds;$/;"	m	struct:PTLsimStats::decoder
reclaim_unused_extents	mm.cpp	/^  int reclaim_unused_extents(AddressSizeSpan* ass, int asscount, int sizealign) {$/;"	f	struct:ExtentAllocator
reconstruct	datastore.cpp	/^DataStoreNode* DataStoreNodeTemplate::reconstruct(const W64*& p) const {$/;"	f	class:DataStoreNodeTemplate
reconstruct_virq_to_port_mappings	ptlxen-events.cpp	/^void reconstruct_virq_to_port_mappings() {$/;"	f
record_count	datastore.h	/^  W64 record_count;$/;"	m	struct:StatsFileHeader
record_offset	datastore.h	/^  W64 record_offset;$/;"	m	struct:StatsFileHeader
record_size	datastore.h	/^  W64 record_size;$/;"	m	struct:StatsFileHeader
rectangle	ptlstats.cpp	/^  void rectangle(float x, float y, float width, float height) {$/;"	f	class:SVGCreator
redispatch	ooocore-amd-k8.h	/^      } redispatch;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon53
redispatch	ooocore-amd-k8.h	/^    struct redispatch {$/;"	s	struct:PerContextOutOfOrderCoreStats::dispatch
redispatch	ooocore-amd-k8.h	/^    } redispatch;$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch	typeref:struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
redispatch	ooocore.h	/^      } redispatch;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon17
redispatch	ooocore.h	/^    struct redispatch {$/;"	s	struct:PerContextOutOfOrderCoreStats::dispatch
redispatch	ooocore.h	/^    } redispatch;$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch	typeref:struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
redispatch	oooexec.cpp	/^void ReorderBufferEntry::redispatch(const bitvec<MAX_OPERANDS>& dependent_operands, ReorderBufferEntry* prevrob) {$/;"	f	class:ReorderBufferEntry
redispatch_deadlock_recovery	ooopipe.cpp	/^void ThreadContext::redispatch_deadlock_recovery() {$/;"	f	class:ThreadContext
redispatch_dependents	oooexec.cpp	/^void ReorderBufferEntry::redispatch_dependents(bool inclusive) {$/;"	f	class:ReorderBufferEntry
ref	logic.h	/^    inline ref(FullyAssociativeTagsNbitOneHot& tags_, int index_): tags(tags_), index(index_) { }$/;"	f	class:FullyAssociativeTagsNbitOneHot::ref
ref	logic.h	/^  class ref {$/;"	c	struct:FullyAssociativeTagsNbitOneHot
refcount	ooocore-amd-k8.h	/^    W16s refcount;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
refcount	ooocore.h	/^    W16s refcount;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
refcount	ptlhwdef.h	/^  int refcount;$/;"	m	struct:BasicBlockBase
refcount	ptlhwdef.h	/^  int refcount;$/;"	m	struct:BasicBlockChunkList
reference	superstl.h	/^      inline reference(bitvec& __b, size_t index) {$/;"	f	class:superstl::bitvec::reference
reference	superstl.h	/^    class reference {$/;"	c	class:superstl::bitvec
referenced	ooocore-amd-k8.h	/^    bool referenced() const { return (refcount > 0); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
referenced	ooocore.h	/^    bool referenced() const { return (refcount > 0); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
refetch	ooocore-amd-k8.h	/^      W64 refetch;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
refetch	ooocore.h	/^      W64 refetch;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
reg	decode.h	/^      int reg;$/;"	m	struct:DecodedOperand::__anon142::__anon143
reg	decode.h	/^    } reg;$/;"	m	union:DecodedOperand::__anon142	typeref:struct:DecodedOperand::__anon142::__anon143
reg	decode.h	/^  byte rm:3, reg:3, mod:2; $/;"	m	struct:ModRMByte
reg	ooocore-amd-k8.h	/^      W64 reg;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::alloc
reg	ooocore-amd-k8.h	/^      W64 reg;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::renamed
reg	ooocore.h	/^      W64 reg;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::alloc
reg	ooocore.h	/^      W64 reg;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::renamed
reg	ptlhwdef.h	/^    } reg;$/;"	m	union:IssueState::__anon114	typeref:struct:IssueState::__anon114::__anon115
reg	ptlhwdef.h	/^  X87Reg reg;$/;"	m	struct:X87RegPadded
reg16_to_uniform_reg	decode-core.cpp	/^const byte reg16_to_uniform_reg[16] = { APR_ax, APR_cx, APR_dx, APR_bx, APR_sp, APR_bp, APR_si, APR_di, APR_r8w, APR_r9w, APR_r10w, APR_r11w, APR_r12w, APR_r13w, APR_r14w, APR_r15w };$/;"	v
reg32_to_uniform_reg	decode-core.cpp	/^const byte reg32_to_uniform_reg[16] = { APR_eax, APR_ecx, APR_edx, APR_ebx, APR_esp, APR_ebp, APR_esi, APR_edi, APR_r8d, APR_r9d, APR_r10d, APR_r11d, APR_r12d, APR_r13d, APR_r14d, APR_r15d };$/;"	v
reg64_to_uniform_reg	decode-core.cpp	/^const byte reg64_to_uniform_reg[16] = { APR_rax, APR_rcx, APR_rdx, APR_rbx, APR_rsp, APR_rbp, APR_rsi, APR_rdi, APR_r8, APR_r9, APR_r10, APR_r11, APR_r12, APR_r13, APR_r14, APR_r15 };$/;"	v
reg8_to_uniform_reg	decode-core.cpp	/^const byte reg8_to_uniform_reg[8] = { APR_al, APR_cl, APR_dl, APR_bl, APR_ah, APR_ch, APR_dh, APR_bh };$/;"	v
reg8x_to_uniform_reg	decode-core.cpp	/^const byte reg8x_to_uniform_reg[16] = { APR_al, APR_cl, APR_dl, APR_bl, APR_spl, APR_bpl, APR_sil, APR_dil, APR_r8b, APR_r9b, APR_r10b, APR_r11b, APR_r12b, APR_r13b, APR_r14b, APR_r15b };$/;"	v
reg_and_flags	ooocore-amd-k8.h	/^      W64 reg_and_flags;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::renamed
reg_and_flags	ooocore.h	/^      W64 reg_and_flags;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::renamed
reginfo	decode-core.cpp	/^const ArchPseudoRegInfo reginfo[APR_COUNT] = {$/;"	v
regname	ptlhwdef.cpp	/^char* regname(int r) {$/;"	f
release	ooocore-amd-k8.h	/^    bool release(int slot) {$/;"	f	struct:OutOfOrderModel::IssueQueue
release	ooocore.h	/^    bool release(int slot) {$/;"	f	struct:OutOfOrderModel::IssueQueue
release	oooexec.cpp	/^void ReorderBufferEntry::release() {$/;"	f	class:ReorderBufferEntry
release	ptlhwdef.h	/^  bool release() {$/;"	f	struct:BasicBlockBase
release	superstl.h	/^    void release() {$/;"	f	struct:superstl::RecursiveMutex
release	superstl.h	/^    void release() {$/;"	f	struct:superstl::Spinlock
release_mem_lock	oooexec.cpp	/^bool ReorderBufferEntry::release_mem_lock(bool forced) {$/;"	f	class:ReorderBufferEntry
reload_segment_descriptor	ptlxen.cpp	/^void Context::reload_segment_descriptor(unsigned int segid, W16 selector) {$/;"	f	class:Context
remaining	dcache.h	/^    int remaining() const { return (SIZE - count); }$/;"	f	struct:CacheSubsystem::MissBuffer
remaining	dcache.h	/^    int remaining() const {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
remaining	logic.h	/^  int remaining() const {$/;"	f	struct:FixedQueue
remaining	ooocore-amd-k8.h	/^    bool remaining() const { return (!states[PHYSREG_FREE].empty()); }$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
remaining	ooocore-amd-k8.h	/^    bool remaining() const { return (size - count); }$/;"	f	struct:OutOfOrderModel::IssueQueue
remaining	ooocore.h	/^    bool remaining() const { return (!states[PHYSREG_FREE].empty()); }$/;"	f	struct:OutOfOrderModel::PhysicalRegisterFile
remaining	ooocore.h	/^    bool remaining() const { return (size - count); }$/;"	f	struct:OutOfOrderModel::IssueQueue
remaining	superstl.h	/^    bool remaining() const { return (N - count); }$/;"	f	struct:superstl::FixedKeyValueHashtable
remaining	superstl.h	/^    bool remaining() const { return (N - count); }$/;"	f	struct:superstl::FixedValueHashtable
remaining	superstl.h	/^    int remaining() const {$/;"	f	class:superstl::stringbuf
remove	datastore.cpp	/^bool DataStoreNode::remove(const char* key) {$/;"	f	class:DataStoreNode
remove	ooocore-amd-k8.h	/^    selfqueuelink* remove(selfqueuelink* entry) {$/;"	f	struct:OutOfOrderModel::StateList
remove	ooocore.h	/^    selfqueuelink* remove(selfqueuelink* entry) {$/;"	f	struct:OutOfOrderModel::StateList
remove	oooexec.cpp	/^bool IssueQueue<size, operandcount>::remove(int slot) {$/;"	f	class:IssueQueue
remove	superstl.h	/^      bool remove(int idx) {$/;"	f	struct:superstl::ChunkList::Chunk
remove	superstl.h	/^    T& remove(T& obj) {$/;"	f	struct:superstl::SelfHashtable
remove	superstl.h	/^    T* remove(T obj) {$/;"	f	struct:superstl::GenericChunkList
remove	superstl.h	/^    T* remove(T* obj) {$/;"	f	struct:superstl::SelfHashtable
remove	superstl.h	/^    T* remove(const T& e) {$/;"	f	struct:superstl::SearchableChunkList16Entry
remove	superstl.h	/^    bitvec<N> remove(size_t index, size_t count = 1) {$/;"	f	class:superstl::bitvec
remove	superstl.h	/^    bool remove(const K key) {$/;"	f	struct:superstl::Hashtable
remove	superstl.h	/^    bool remove(const K& key, T& value) {$/;"	f	struct:superstl::Hashtable
remove	superstl.h	/^    bool remove(const Locator& locator) {$/;"	f	struct:superstl::ChunkList
remove_head	superstl.h	/^    T* remove_head() {$/;"	f	class:superstl::queue
remove_head	superstl.h	/^    queuelink<T>* remove_head() {$/;"	f	class:superstl::queuelink
remove_switch_to_sim_breakpoint	kernel.cpp	/^bool remove_switch_to_sim_breakpoint() {$/;"	f
remove_tail	superstl.h	/^    T* remove_tail() {$/;"	f	class:superstl::queue
remove_tail	superstl.h	/^    queuelink<T>* remove_tail() {$/;"	f	class:superstl::queuelink
removeall	datastore.cpp	/^void DataStoreNode::removeall() {$/;"	f	class:DataStoreNode
removehead	superstl.h	/^    selfqueuelink* removehead() {$/;"	f	class:superstl::selfqueuelink
removetail	superstl.h	/^    selfqueuelink* removetail() {$/;"	f	class:superstl::selfqueuelink
rename	datastore.cpp	/^void DataStoreNode::rename(const char* newname) {$/;"	f	class:DataStoreNode
rename	ooocore-amd-k8.h	/^      double rename;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
rename	ooocore-amd-k8.h	/^      } rename;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon45
rename	ooocore.h	/^      double rename;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
rename	ooocore.h	/^      } rename;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon9
rename	ooopipe.cpp	/^void ThreadContext::rename() {$/;"	f	class:ThreadContext
renamed	ooocore-amd-k8.h	/^    struct renamed {$/;"	s	struct:PerContextOutOfOrderCoreStats::frontend
renamed	ooocore-amd-k8.h	/^    } renamed;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend	typeref:struct:PerContextOutOfOrderCoreStats::frontend::renamed
renamed	ooocore.h	/^    struct renamed {$/;"	s	struct:PerContextOutOfOrderCoreStats::frontend
renamed	ooocore.h	/^    } renamed;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend	typeref:struct:PerContextOutOfOrderCoreStats::frontend::renamed
renamed_in_this_basic_block	ooocore-amd-k8.h	/^    bitvec<TRANSREG_COUNT> renamed_in_this_basic_block;$/;"	m	struct:OutOfOrderModel::RegisterRenameTable
renamed_in_this_basic_block	ooocore.h	/^    bitvec<TRANSREG_COUNT> renamed_in_this_basic_block;$/;"	m	struct:OutOfOrderModel::RegisterRenameTable
renew	superstl.h	/^  static inline T* renew(T* p, size_t oldcount, size_t newcount) {$/;"	f	namespace:superstl
rep_and_size_to_assist_t	decode.h	/^  typedef int rep_and_size_to_assist_t[3][4];$/;"	t	struct:TraceDecoder
repblock	ptlhwdef.h	/^  byte type:4, repblock:1, invalidblock:1, call:1, ret:1;$/;"	m	struct:BasicBlockBase
replaced	dcache-amd-k8.h	/^    static void replaced(V& line, W64 oldtag, W64 newtag, int way) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
replaced	dcache.h	/^    static void replaced(V& line, W64 oldtag, W64 newtag, int way) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
replaced	logic.h	/^  static void replaced(V& elem, T oldtag, T newtag, int way) { }$/;"	f	struct:NullAssociativeArrayStatisticsCollector
replacewith	superstl.h	/^    selflistlink* replacewith(selflistlink* newlink) {$/;"	f	class:superstl::selflistlink
replay	ooocore-amd-k8.h	/^        struct replay { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
replay	ooocore-amd-k8.h	/^        struct replay { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
replay	ooocore-amd-k8.h	/^        } replay;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
replay	ooocore-amd-k8.h	/^        } replay;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
replay	ooocore-amd-k8.h	/^      W64 replay;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
replay	ooocore-amd-k8.h	/^      } replay;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon50
replay	ooocore-amd-k8.h	/^    bool replay(int slot) {$/;"	f	struct:OutOfOrderModel::IssueQueue
replay	ooocore.h	/^        struct replay { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
replay	ooocore.h	/^        struct replay { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
replay	ooocore.h	/^        } replay;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
replay	ooocore.h	/^        } replay;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
replay	ooocore.h	/^      W64 replay;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue::result
replay	ooocore.h	/^      } replay;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon14
replay	ooocore.h	/^    bool replay(int slot) {$/;"	f	struct:OutOfOrderModel::IssueQueue
replay	oooexec.cpp	/^bool IssueQueue<size, operandcount>::replay(int slot, const tag_t* operands, const tag_t* preready) {$/;"	f	class:IssueQueue
replay	oooexec.cpp	/^void ReorderBufferEntry::replay() {$/;"	f	class:ReorderBufferEntry
replay_locked	oooexec.cpp	/^void ReorderBufferEntry::replay_locked() {$/;"	f	class:ReorderBufferEntry
req2	ptlhwdef.h	/^  byte req2, ra, rb;$/;"	m	struct:CondCodeToFlagRegs
reqs	dcache-amd-k8.h	/^    LoadFillReq reqs[size];$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
reqs	dcache.h	/^    LoadFillReq reqs[size];$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
requested_switch_to_native	kernel.cpp	/^bool requested_switch_to_native = 0;$/;"	v
requestq	ptlmon.cpp	/^queue<PendingRequest, PendingRequestLinkManager> requestq;$/;"	v
required	dcache-amd-k8.h	/^    W64 required;$/;"	m	struct:DataCacheStats::prefetch
required	dcache.h	/^    W64 required;$/;"	m	struct:DataCacheStats::prefetch
res1	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
res1	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
res11	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
res17	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
res19	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
res2	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
res2	ptlhwdef.h	/^  W64 l0:1, g0:1, l1:1, g1:1, l2:1, g2:1, l3:1, g3:1, le:1, ge:1, res1:3, gd:1, res2:2,$/;"	m	struct:DebugReg
res32	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
res6	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
reseed	superstl.cpp	/^  void RandomNumberGenerator::reseed(W32 seed) {$/;"	f	class:superstl::RandomNumberGenerator
reserve	superstl.cpp	/^  void stringbuf::reserve(int extra) {$/;"	f	class:superstl::stringbuf
reserve	superstl.h	/^    void reserve(int newsize) {$/;"	f	class:superstl::dynarray
reserved	cpuid.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	struct:ProcessorMiscInfo::__anon33	file:
reserved	decode-complex.cpp	/^  struct { W32 brandid:8, clflush:8, reserved:8, apicid:8; } fields;$/;"	m	struct:ProcessorMiscInfo::__anon71	file:
reserved	superstl.h	/^    size_t reserved;$/;"	m	class:superstl::dynarray
reserved1	cpuid.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon32	file:
reserved1	decode-complex.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon70	file:
reserved1	ptlhwdef.h	/^      W16 reserved1;$/;"	m	struct:FXSAVEStruct::__anon120::__anon121
reserved1	ptlhwdef.h	/^  W16 reserved1;$/;"	m	struct:X87State
reserved2	cpuid.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon32	file:
reserved2	decode-complex.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon70	file:
reserved2	ptlhwdef.h	/^      W16 reserved2;$/;"	m	struct:FXSAVEStruct::__anon120::__anon121
reserved2	ptlhwdef.h	/^  W16 reserved2;$/;"	m	struct:X87State
reserved3	ptlhwdef.h	/^  W16 reserved3;$/;"	m	struct:X87State
reserved4	ptlhwdef.h	/^  W16 reserved4;$/;"	m	struct:X87State
reserved_entries	ooocore-amd-k8.h	/^    int reserved_entries;$/;"	m	struct:OutOfOrderModel::IssueQueue
reserved_entries	ooocore.h	/^    int reserved_entries;$/;"	m	struct:OutOfOrderModel::IssueQueue
reserved_iq_entries	ooocore-amd-k8.h	/^    int reserved_iq_entries;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
reserved_iq_entries	ooocore.h	/^    int reserved_iq_entries;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
reset	branchpred.cpp	/^  void reset() {$/;"	f	struct:BTBEntry
reset	branchpred.cpp	/^  void reset() {$/;"	f	struct:BimodalPredictor
reset	branchpred.cpp	/^  void reset() {$/;"	f	struct:CombinedPredictor
reset	branchpred.cpp	/^  void reset() {$/;"	f	struct:TwoLevelPredictor
reset	branchpred.cpp	/^void BranchPredictorInterface::reset() {$/;"	f	class:BranchPredictorInterface
reset	dcache-amd-k8.h	/^      void reset() {$/;"	f	struct:CacheSubsystem::MissBuffer::Entry
reset	dcache-amd-k8.h	/^    static void reset() {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
reset	dcache-amd-k8.h	/^    void reset() { clearstats(); }$/;"	f	struct:CacheSubsystem::CacheLine
reset	dcache-amd-k8.h	/^    void reset() { valid = 0; clearstats(); }$/;"	f	struct:CacheSubsystem::CacheLineWithValidMask
reset	dcache-amd-k8.h	/^    void reset() {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
reset	dcache-amd-k8.h	/^    void reset() {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
reset	dcache.cpp	/^void CacheHierarchy::reset() {$/;"	f	class:CacheHierarchy
reset	dcache.cpp	/^void LoadFillReqQueue<size>::reset(int threadid) {$/;"	f	class:LoadFillReqQueue
reset	dcache.cpp	/^void MissBuffer<SIZE>::reset() {$/;"	f	class:MissBuffer
reset	dcache.cpp	/^void MissBuffer<SIZE>::reset(int threadid) {$/;"	f	class:MissBuffer
reset	dcache.h	/^      void reset() {$/;"	f	struct:CacheSubsystem::MissBuffer::Entry
reset	dcache.h	/^    static void reset() {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
reset	dcache.h	/^    void reset() { clearstats(); }$/;"	f	struct:CacheSubsystem::CacheLine
reset	dcache.h	/^    void reset() { valid = 0; clearstats(); }$/;"	f	struct:CacheSubsystem::CacheLineWithValidMask
reset	dcache.h	/^    void reset() {$/;"	f	struct:CacheSubsystem::LoadFillReqQueue
reset	dcache.h	/^    void reset() {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
reset	decode-core.cpp	/^void TraceDecoder::reset() {$/;"	f	class:TraceDecoder
reset	kernel.cpp	/^void AddressSpace::reset() {$/;"	f	class:AddressSpace
reset	logic.h	/^  void reset() {$/;"	f	struct:AssociativeArray
reset	logic.h	/^  void reset() {$/;"	f	struct:CommitRollbackCache
reset	logic.h	/^  void reset() {$/;"	f	struct:FixedQueue
reset	logic.h	/^  void reset() {$/;"	f	struct:FullyAssociativeArray
reset	logic.h	/^  void reset() {$/;"	f	struct:FullyAssociativeTags
reset	logic.h	/^  void reset() {$/;"	f	struct:FullyAssociativeTags16bit
reset	logic.h	/^  void reset() {$/;"	f	struct:FullyAssociativeTags8bit
reset	logic.h	/^  void reset() {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
reset	logic.h	/^  void reset() {$/;"	f	struct:HistoryBuffer
reset	logic.h	/^  void reset() {$/;"	f	struct:LockableAssociativeArray
reset	logic.h	/^  void reset() {$/;"	f	struct:LockableCommitRollbackAssociativeArray
reset	logic.h	/^  void reset() {$/;"	f	struct:LockableFullyAssociativeArray
reset	logic.h	/^  void reset() {$/;"	f	struct:LockableFullyAssociativeTags
reset	logic.h	/^  void reset() {$/;"	f	struct:Queue
reset	logic.h	/^  void reset() {$/;"	f	struct:SynchronousRegisterFile
reset	logic.h	/^  void reset(const T& d = T()) {$/;"	f	struct:latch
reset	mm.cpp	/^  void reset() {$/;"	f	struct:ExtentAllocator
reset	mm.cpp	/^  void reset(int objsize) {$/;"	f	struct:SlabAllocator
reset	ooocore-amd-k8.h	/^    void reset() { uuid = 0; rob = 0; vcpuid = 0; threadid = 0;}$/;"	f	struct:OutOfOrderModel::MemoryInterlockEntry
reset	ooocore-amd-k8.h	/^    void reset() {$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
reset	ooocore-amd-k8.h	/^    void reset() {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
reset	ooocore-amd-k8.h	/^    void reset(W8 threadid, bool check_id = true) {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
reset	ooocore.cpp	/^void EventLog::reset() {$/;"	f	class:EventLog
reset	ooocore.cpp	/^void ListOfStateLists::reset() {$/;"	f	class:ListOfStateLists
reset	ooocore.cpp	/^void OutOfOrderCore::reset() {$/;"	f	class:OutOfOrderCore
reset	ooocore.cpp	/^void PhysicalRegisterFile::reset() {$/;"	f	class:PhysicalRegisterFile
reset	ooocore.cpp	/^void PhysicalRegisterFile::reset(W8 threadid) {$/;"	f	class:PhysicalRegisterFile
reset	ooocore.cpp	/^void ReorderBufferEntry::reset() {$/;"	f	class:ReorderBufferEntry
reset	ooocore.cpp	/^void StateList::reset() {$/;"	f	class:StateList
reset	ooocore.cpp	/^void ThreadContext::reset() {$/;"	f	class:ThreadContext
reset	ooocore.h	/^    void reset() { uuid = 0; rob = 0; vcpuid = 0; threadid = 0;}$/;"	f	struct:OutOfOrderModel::MemoryInterlockEntry
reset	ooocore.h	/^    void reset() {$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
reset	ooocore.h	/^    void reset() {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
reset	ooocore.h	/^    void reset(W8 threadid, bool check_id = true) {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
reset	oooexec.cpp	/^void IssueQueue<size, operandcount>::reset(int coreid) {$/;"	f	class:IssueQueue
reset	oooexec.cpp	/^void IssueQueue<size, operandcount>::reset(int coreid, int threadid) {$/;"	f	class:IssueQueue
reset	ptlhwdef.cpp	/^void BasicBlock::reset() {$/;"	f	class:BasicBlock
reset	ptlhwdef.cpp	/^void BasicBlock::reset(const RIPVirtPhys& rip) {$/;"	f	class:BasicBlock
reset	ptlhwdef.h	/^  inline void reset() {$/;"	f	struct:ContextBase
reset	ptlmon.cpp	/^  void reset() {$/;"	f	struct:XenController
reset	ptlsim.cpp	/^void PTLsimConfig::reset() {$/;"	f	class:PTLsimConfig
reset	ptlsim.h	/^  void reset() {$/;"	f	struct:TransOpBuffer
reset	ptlstats.cpp	/^void PTLstatsConfig::reset() {$/;"	f	class:PTLstatsConfig
reset	seqcore.cpp	/^  void reset() {$/;"	f	struct:TransactionalMemory
reset	seqcore.cpp	/^void SequentialCoreEventLog::reset() {$/;"	f	class:SequentialCoreEventLog
reset	seqcore.h	/^  void reset() {$/;"	f	struct:CommitRecord
reset	superstl.cpp	/^  void stringbuf::reset(int length) {$/;"	f	class:superstl::stringbuf
reset	superstl.h	/^        void reset(Chunk* chunk_) {$/;"	f	struct:superstl::ChunkList::Chunk::Iterator
reset	superstl.h	/^      void reset() { chunk = null; index = 0; }$/;"	f	struct:superstl::ChunkList::Locator
reset	superstl.h	/^      void reset(ChunkList<T, N>* chunklist) {$/;"	f	struct:superstl::ChunkList::Iterator
reset	superstl.h	/^      void reset(GenericChunkList<T>& chunk) { reset(&chunk); }$/;"	f	struct:superstl::GenericChunkList::Iterator
reset	superstl.h	/^      void reset(GenericChunkList<T>* chunk) {$/;"	f	struct:superstl::GenericChunkList::Iterator
reset	superstl.h	/^      void reset(Hashtable<K, T, setcount, KM>& ht) {$/;"	f	struct:superstl::Hashtable::Iterator
reset	superstl.h	/^      void reset(Hashtable<K, T, setcount, KM>* ht) {$/;"	f	struct:superstl::Hashtable::Iterator
reset	superstl.h	/^      void reset(SelfHashtable<K, T, setcount, LM, KM>& ht) {$/;"	f	struct:superstl::SelfHashtable::Iterator
reset	superstl.h	/^      void reset(SelfHashtable<K, T, setcount, LM, KM>* ht) {$/;"	f	struct:superstl::SelfHashtable::Iterator
reset	superstl.h	/^      void reset(chunk_t& chunk) { reset(&chunk); }$/;"	f	struct:superstl::SearchableChunkList16Entry::Iterator
reset	superstl.h	/^      void reset(chunk_t* chunk) {$/;"	f	struct:superstl::SearchableChunkList16Entry::Iterator
reset	superstl.h	/^    bitvec<N>& reset() {$/;"	f	class:superstl::bitvec
reset	superstl.h	/^    bitvec<N>& reset(size_t index) {$/;"	f	class:superstl::bitvec
reset	superstl.h	/^    inline void reset() { fd = -1; error = 0; eos = 0; head = 0; tail = 0; buf = null; bufused = 0; bufsize = 0; bufmask = 0; offset = 0; close_on_destroy = 1; }$/;"	f	class:superstl::idstream
reset	superstl.h	/^    inline void reset() {$/;"	f	class:superstl::CycleTimer
reset	superstl.h	/^    inline void reset(W32 newcrc = 0xffffffff) {$/;"	f	struct:superstl::CRC32
reset	superstl.h	/^    void reset() { count = 0; }$/;"	f	struct:superstl::stack
reset	superstl.h	/^    void reset() { next = null; prev = null; }$/;"	f	class:superstl::selflistlink
reset	superstl.h	/^    void reset() { next = this; prev = this; data = null; }$/;"	f	class:superstl::queuelink
reset	superstl.h	/^    void reset() { next = this; prev = this; }$/;"	f	class:superstl::queue
reset	superstl.h	/^    void reset() { next = this; prev = this; }$/;"	f	class:superstl::selfqueuelink
reset	superstl.h	/^    void reset() {$/;"	f	struct:superstl::FixedIntegerQueueSet
reset	superstl.h	/^    void reset() {$/;"	f	struct:superstl::FixedKeyValueHashtable
reset	superstl.h	/^    void reset() {$/;"	f	struct:superstl::FixedValueHashtable
reset	superstl.h	/^    void reset() {$/;"	f	struct:superstl::RecursiveMutex
reset	superstl.h	/^    void reset() {$/;"	f	struct:superstl::SearchableChunkList16Entry
reset	superstl.h	/^    void reset() {$/;"	f	struct:superstl::SelfHashtable
reset	superstl.h	/^    void reset() {$/;"	f	struct:superstl::Spinlock
reset	superstl.h	/^    void reset(size_t sizelimit = N) {$/;"	f	struct:superstl::BitmapAllocator3Level
reset_fetch	seqcore.cpp	/^  void reset_fetch(W64 realrip) {$/;"	f	struct:SequentialCore
reset_fetch_unit	ooopipe.cpp	/^void ThreadContext::reset_fetch_unit(W64 realrip) {$/;"	f	class:ThreadContext
reset_mode_switch_delta_cycles_and_insns	ptlxen.cpp	/^void reset_mode_switch_delta_cycles_and_insns(W64& delta_cycles, W64& delta_insns) {$/;"	f
reset_shared_entries	ooocore-amd-k8.h	/^    bool reset_shared_entries() { $/;"	f	struct:OutOfOrderModel::IssueQueue
reset_shared_entries	ooocore.h	/^    bool reset_shared_entries() { $/;"	f	struct:OutOfOrderModel::IssueQueue
resetop	superstl.h	/^    void resetop() { memset(w, 0, N * sizeof(T)); }$/;"	f	struct:superstl::bitvecbase
resetop	superstl.h	/^    void resetop() { w = 0; }$/;"	f	struct:superstl::bitvecbase
resetop	superstl.h	/^    void resetop() { }$/;"	f	struct:superstl::bitvecbase
resets	dcache-amd-k8.h	/^    W64 resets;$/;"	m	struct:DataCacheStats::lfrq
resets	dcache.h	/^    W64 resets;$/;"	m	struct:DataCacheStats::lfrq
resize	superstl.cpp	/^  void stringbuf::resize(int newlength) {$/;"	f	class:superstl::stringbuf
resize	superstl.h	/^    void resize(int newsize) {$/;"	f	class:superstl::dynarray
resize	superstl.h	/^    void resize(int newsize, const T& emptyvalue) {$/;"	f	class:superstl::dynarray
restart	dcache.cpp	/^void LoadFillReqQueue<size>::restart() {$/;"	f	class:LoadFillReqQueue
restart	dcache.cpp	/^void MissBuffer<SIZE>::restart() {$/;"	f	class:MissBuffer
restorefrom	ptlxen-common.cpp	/^void Context::restorefrom(const vcpu_extended_context& ctx) {$/;"	f	class:Context
restorefrom	ptlxen-common.cpp	/^void Context::restorefrom(const vcpu_guest_context& ctx) {$/;"	f	class:Context
result	ooocore-amd-k8.h	/^    struct result { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::commit
result	ooocore-amd-k8.h	/^    struct result { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::issue
result	ooocore-amd-k8.h	/^    } result;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit	typeref:struct:PerContextOutOfOrderCoreStats::commit::result
result	ooocore-amd-k8.h	/^    } result;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue	typeref:struct:PerContextOutOfOrderCoreStats::issue::result
result	ooocore.h	/^    struct result { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::commit
result	ooocore.h	/^    struct result { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::issue
result	ooocore.h	/^    } result;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit	typeref:struct:PerContextOutOfOrderCoreStats::commit::result
result	ooocore.h	/^    } result;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue	typeref:struct:PerContextOutOfOrderCoreStats::issue::result
result_store	decode-core.cpp	/^void TraceDecoder::result_store(int srcreg, int tempreg, const DecodedOperand& memref, int datatype, bool rmw) {$/;"	f	class:TraceDecoder
resume_from_native	ptlxen.cpp	/^void resume_from_native() {$/;"	f
resync_with_process_maps	kernel.cpp	/^void AddressSpace::resync_with_process_maps() {$/;"	f	class:AddressSpace
ret	ooocore-amd-k8.h	/^    W64 ret[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
ret	ooocore.h	/^    W64 ret[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:OutOfOrderCoreStats::branchpred
ret	ooocore.h	/^    W64 ret[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
ret	ptlhwdef.h	/^  byte type:4, repblock:1, invalidblock:1, call:1, ret:1;$/;"	m	struct:BasicBlockBase
reverse	ptlhwdef.h	/^  bool reverse;$/;"	m	struct:flagstring
reverse	superstl.h	/^    bool reverse;$/;"	m	struct:superstl::bitmaskstring
reverse	superstl.h	/^    bool reverse;$/;"	m	struct:superstl::bitstring
reversebits	globals.h	/^T reversebits(T v) {$/;"	f
rex	decode.h	/^  RexByte rex;$/;"	m	struct:TraceDecoder
rfid	ooocore-amd-k8.h	/^    W8  rfid;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
rfid	ooocore-amd-k8.h	/^    byte rfid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
rfid	ooocore-amd-k8.h	/^    byte rfid;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
rfid	ooocore-amd-k8.h	/^    byte rfid;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
rfid	ooocore.h	/^    W8  rfid;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
rfid	ooocore.h	/^    byte rfid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
rfid	ooocore.h	/^    byte rfid;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
rfid	ooocore.h	/^    byte rfid;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
rflags	decode-complex.cpp	/^  W64 rip, cs, rflags, rsp, ss;$/;"	m	struct:IRETStackFrame	file:
ringbuf	superstl.h	/^    byte* ringbuf;$/;"	m	class:superstl::odstream
ringbuf_mode	superstl.h	/^    bool ringbuf_mode;$/;"	m	class:superstl::odstream
ringbuf_tail	superstl.h	/^    int ringbuf_tail;$/;"	m	class:superstl::odstream
rip	branchpred.h	/^  W64 rip;$/;"	m	struct:ReturnAddressStackEntry
rip	decode-complex.cpp	/^  W64 rip, cs, rflags, rsp, ss;$/;"	m	struct:IRETStackFrame	file:
rip	decode.h	/^  Waddr rip;$/;"	m	struct:TraceDecoder
rip	ooocore-amd-k8.h	/^    RIPVirtPhys rip;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
rip	ooocore-amd-k8.h	/^    RIPVirtPhysBase rip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
rip	ooocore.h	/^    RIPVirtPhys rip;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
rip	ooocore.h	/^    RIPVirtPhysBase rip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
rip	ptlhwdef.h	/^      W64 rip;$/;"	m	struct:FXSAVEStruct::__anon120::__anon122
rip	ptlhwdef.h	/^  RIPVirtPhys rip;$/;"	m	struct:BasicBlockBase
rip	ptlhwdef.h	/^  W64 rip:48, cpl:2, maskevents:1, cs:13;$/;"	m	struct:TrapTarget
rip	ptlhwdef.h	/^  W64 rip;$/;"	m	struct:RIPVirtPhysBase
rip	seqcore.cpp	/^      W64 rip;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon93	file:
rip	seqcore.cpp	/^  W64 rip;$/;"	m	struct:SequentialCoreEvent	file:
rip_not_taken	ptlhwdef.h	/^  W64 rip_not_taken;$/;"	m	struct:BasicBlockBase
rip_taken	ptlhwdef.h	/^  W64 rip_taken;$/;"	m	struct:BasicBlockBase
ripafter	ooocore-amd-k8.h	/^    W64 ripafter;$/;"	m	struct:OutOfOrderModel::BranchPredictorUpdateInfo
ripafter	ooocore.h	/^    W64 ripafter;$/;"	m	struct:OutOfOrderModel::BranchPredictorUpdateInfo
riprel	decode.h	/^      bool riprel;$/;"	m	struct:DecodedOperand::__anon142::__anon145
ripseq	ptlhwdef.h	/^      W64 ripseq;$/;"	m	struct:IssueState::__anon114::__anon117
ripseq	ptlhwdef.h	/^  W64 ripseq;$/;"	m	struct:TransOpBase
ripstart	decode.h	/^  Waddr ripstart;$/;"	m	struct:TraceDecoder
riptaken	ptlhwdef.h	/^      W64 riptaken;$/;"	m	struct:IssueState::__anon114::__anon117
riptaken	ptlhwdef.h	/^  W64 riptaken;$/;"	m	struct:TransOpBase
rm	decode.h	/^  byte rm:3, reg:3, mod:2; $/;"	m	struct:ModRMByte
rob	dcache-amd-k8.h	/^      W16 rob; \/\/ to identify which thread.$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
rob	dcache-amd-k8.h	/^  W16 rob;$/;"	m	struct:LoadStoreInfo
rob	dcache.h	/^      W16 rob;$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
rob	dcache.h	/^  W16 rob;$/;"	m	struct:LoadStoreInfo
rob	ooocore-amd-k8.h	/^    ReorderBufferEntry* rob;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
rob	ooocore-amd-k8.h	/^    ReorderBufferEntry* rob;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
rob	ooocore-amd-k8.h	/^    W16 rob;$/;"	m	struct:OutOfOrderModel::MemoryInterlockEntry
rob	ooocore-amd-k8.h	/^    W16 rob;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
rob	ooocore-amd-k8.h	/^    W16 rob;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
rob	ooocore.h	/^    ReorderBufferEntry* rob;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
rob	ooocore.h	/^    ReorderBufferEntry* rob;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
rob	ooocore.h	/^    W16 rob;$/;"	m	struct:OutOfOrderModel::MemoryInterlockEntry
rob	ooocore.h	/^    W16 rob;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
rob	ooocore.h	/^    W16 rob;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
rob_cache_miss_list	ooocore-amd-k8.h	/^    StateList rob_cache_miss_list;                       \/\/ Loads only: wait for cache miss to be serviced$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_cache_miss_list	ooocore.h	/^    StateList rob_cache_miss_list;                       \/\/ Loads only: wait for cache miss to be serviced$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_completed_list	ooocore-amd-k8.h	/^    StateList rob_completed_list[MAX_CLUSTERS];          \/\/ Completed and result in transit for local and global forwarding$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_completed_list	ooocore.h	/^    StateList rob_completed_list[MAX_CLUSTERS];          \/\/ Completed and result in transit for local and global forwarding$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_dispatched_list	ooocore-amd-k8.h	/^    StateList rob_dispatched_list[MAX_CLUSTERS];         \/\/ Dispatched but waiting for operands$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_dispatched_list	ooocore.h	/^    StateList rob_dispatched_list[MAX_CLUSTERS];         \/\/ Dispatched but waiting for operands$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_free_list	ooocore-amd-k8.h	/^    StateList rob_free_list;                             \/\/ Free ROB entyry$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_free_list	ooocore.h	/^    StateList rob_free_list;                             \/\/ Free ROB entyry$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_frontend_list	ooocore-amd-k8.h	/^    StateList rob_frontend_list;                         \/\/ Frontend in progress (artificial delay)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_frontend_list	ooocore.h	/^    StateList rob_frontend_list;                         \/\/ Frontend in progress (artificial delay)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_full	ooocore-amd-k8.h	/^      W64 rob_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
rob_full	ooocore.h	/^      W64 rob_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
rob_issued_list	ooocore-amd-k8.h	/^    StateList rob_issued_list[MAX_CLUSTERS];             \/\/ Issued and in progress (or for loads, returned here after address is generated)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_issued_list	ooocore.h	/^    StateList rob_issued_list[MAX_CLUSTERS];             \/\/ Issued and in progress (or for loads, returned here after address is generated)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_memory_fence_list	ooocore-amd-k8.h	/^    StateList rob_memory_fence_list;                     \/\/ mf uops only: wait for memory fence to reach head of LSQ before completing$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_memory_fence_list	ooocore.h	/^    StateList rob_memory_fence_list;                     \/\/ mf uops only: wait for memory fence to reach head of LSQ before completing$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_commit_queue	ooocore-amd-k8.h	/^    StateList rob_ready_to_commit_queue;                 \/\/ Ready to commit$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_commit_queue	ooocore.h	/^    StateList rob_ready_to_commit_queue;                 \/\/ Ready to commit$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_dispatch_list	ooocore-amd-k8.h	/^    StateList rob_ready_to_dispatch_list;                \/\/ Ready to dispatch$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_dispatch_list	ooocore.h	/^    StateList rob_ready_to_dispatch_list;                \/\/ Ready to dispatch$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_issue_list	ooocore-amd-k8.h	/^    StateList rob_ready_to_issue_list[MAX_CLUSTERS];     \/\/ Ready to issue (all operands ready)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_issue_list	ooocore.h	/^    StateList rob_ready_to_issue_list[MAX_CLUSTERS];     \/\/ Ready to issue (all operands ready)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_load_list	ooocore-amd-k8.h	/^    StateList rob_ready_to_load_list[MAX_CLUSTERS];      \/\/ Ready to load (all operands ready)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_load_list	ooocore.h	/^    StateList rob_ready_to_load_list[MAX_CLUSTERS];      \/\/ Ready to load (all operands ready)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_store_list	ooocore-amd-k8.h	/^    StateList rob_ready_to_store_list[MAX_CLUSTERS];     \/\/ Ready to store (all operands except possibly rc are ready)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_store_list	ooocore.h	/^    StateList rob_ready_to_store_list[MAX_CLUSTERS];     \/\/ Ready to store (all operands except possibly rc are ready)$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_writeback_list	ooocore-amd-k8.h	/^    StateList rob_ready_to_writeback_list[MAX_CLUSTERS]; \/\/ Completed; result ready to writeback in parallel across all cluster register files$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_ready_to_writeback_list	ooocore.h	/^    StateList rob_ready_to_writeback_list[MAX_CLUSTERS]; \/\/ Completed; result ready to writeback in parallel across all cluster register files$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_states	ooocore-amd-k8.h	/^    ListOfStateLists rob_states;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
rob_states	ooocore-amd-k8.h	/^    ListOfStateLists rob_states;$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_states	ooocore.h	/^    ListOfStateLists rob_states;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
rob_states	ooocore.h	/^    ListOfStateLists rob_states;$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_tlb_miss_list	ooocore-amd-k8.h	/^    StateList rob_tlb_miss_list;                         \/\/ TLB miss waiting to be serviced on one or more levels$/;"	m	struct:OutOfOrderModel::ThreadContext
rob_tlb_miss_list	ooocore.h	/^    StateList rob_tlb_miss_list;                         \/\/ TLB miss waiting to be serviced on one or more levels$/;"	m	struct:OutOfOrderModel::ThreadContext
robs_on_fu	ooocore-amd-k8.h	/^    ReorderBufferEntry* robs_on_fu[FU_COUNT];$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
robs_on_fu	ooocore.h	/^    ReorderBufferEntry* robs_on_fu[FU_COUNT];$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
rollback	logic.h	/^  void rollback() {$/;"	f	struct:CommitRollbackCache
rollback	seqcore.cpp	/^  void rollback() {$/;"	f	struct:TransactionalMemory
rotleft	superstl.h	/^    bitvec<N> rotleft(int index) const {$/;"	f	class:superstl::bitvec
rotright	superstl.h	/^    bitvec<N> rotright(int index) const {$/;"	f	class:superstl::bitvec
round	mathlib.cpp	/^  double round(double x) {$/;"	f	namespace:math
round_robin_reg_file_offset	ooocore-amd-k8.h	/^    int round_robin_reg_file_offset;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
round_robin_reg_file_offset	ooocore.h	/^    int round_robin_reg_file_offset;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
round_robin_tid	ooocore-amd-k8.h	/^    byte round_robin_tid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
round_robin_tid	ooocore.h	/^    byte round_robin_tid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
row_name_width	ptlstats.cpp	/^  int row_name_width;$/;"	m	class:TableCreator	file:
rownames	ptlstats.cpp	/^  dynarray<char*>& rownames;$/;"	m	class:TableCreator	file:
rsp	decode-complex.cpp	/^  W64 rip, cs, rflags, rsp, ss;$/;"	m	struct:IRETStackFrame	file:
rsv	ptlhwdef.h	/^  byte p:1, rw:1, us:1, rsv:1, nx:1, pad:3;$/;"	m	struct:PageFaultErrorCode
run	ooocore.cpp	/^int OutOfOrderMachine::run(PTLsimConfig& config) {$/;"	f	class:OutOfOrderMachine
run	ptlsim.cpp	/^int PTLsimMachine::run(PTLsimConfig& config) { return 0; }$/;"	f	class:PTLsimMachine
run	ptlsim.h	/^  bool run;$/;"	m	struct:PTLsimConfig
run	seqcore.cpp	/^  virtual int run(PTLsimConfig& config) {$/;"	f	struct:SequentialMachine
run	stats.h	/^    struct run {$/;"	s	struct:PTLsimStats::simulator
run	stats.h	/^    } run;$/;"	m	struct:PTLsimStats::simulator	typeref:struct:PTLsimStats::simulator::run
runcycle	ooocore.cpp	/^bool OutOfOrderCore::runcycle() {$/;"	f	class:OutOfOrderCore
running	ptlhwdef.h	/^  byte running;$/;"	m	struct:ContextBase
running	superstl.h	/^    bool running;$/;"	m	class:superstl::CycleTimer
running_in_sim_mode	kernel.cpp	/^bool running_in_sim_mode = 0;$/;"	v
running_under_ptlsim	ptlcalls.h	/^static int running_under_ptlsim = -1;$/;"	v
running_under_ptlsim	ptlcalls.h	/^static int running_under_ptlsim = 0;$/;"	v
runstate	ptlhwdef.h	/^  RunstateInfo runstate;$/;"	m	struct:ContextBase
rvp	seqcore.cpp	/^      RIPVirtPhysBase rvp;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon92	file:
rw	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
rw	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
rw	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
rw	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
rw	ptlhwdef.h	/^  byte p:1, rw:1, us:1, rsv:1, nx:1, pad:3;$/;"	m	struct:PageFaultErrorCode
s	datastore.h	/^    const char* s;$/;"	m	union:DataStoreNode::DataType
s	ptlhwdef.h	/^	W16 base1:8, type:4, s:1, dpl:2, p:1;$/;"	m	struct:SegmentDescriptor
s0	ptlhwdef.h	/^      t0:2, s0:2, t1:2, s1:2, t2:2, s2:2, t3:2, s3:2;$/;"	m	struct:DebugReg
s1	mathlib.cpp	/^  static const mynumber  s1 = {{0x55555555, 0xBFC55555 }};\/* -0.16666666666666666     *\/$/;"	v	file:
s1	ptlhwdef.h	/^      t0:2, s0:2, t1:2, s1:2, t2:2, s2:2, t3:2, s3:2;$/;"	m	struct:DebugReg
s1	superstl.h	/^    W32 s1, s2, s3;$/;"	m	struct:superstl::RandomNumberGenerator
s16	xen-types.h	/^typedef signed short s16;$/;"	t
s2	mathlib.cpp	/^  static const mynumber  s2 = {{0x11110ECE, 0x3F811111 }};\/*  0.0083333333333323288   *\/$/;"	v	file:
s2	ptlhwdef.h	/^      t0:2, s0:2, t1:2, s1:2, t2:2, s2:2, t3:2, s3:2;$/;"	m	struct:DebugReg
s2	superstl.h	/^    W32 s1, s2, s3;$/;"	m	struct:superstl::RandomNumberGenerator
s3	mathlib.cpp	/^  static const mynumber  s3 = {{0x19DB08B8, 0xBF2A01A0 }};\/* -0.00019841269834414642  *\/$/;"	v	file:
s3	mathlib.cpp	/^  static const mynumber  s3 = {{0x55555555, 0xBFC55555}};\/* -0.16666666666666666    *\/$/;"	v	file:
s3	ptlhwdef.h	/^      t0:2, s0:2, t1:2, s1:2, t2:2, s2:2, t3:2, s3:2;$/;"	m	struct:DebugReg
s3	superstl.h	/^    W32 s1, s2, s3;$/;"	m	struct:superstl::RandomNumberGenerator
s32	xen-types.h	/^typedef signed int s32;$/;"	t
s4	mathlib.cpp	/^  static const mynumber  s4 = {{0x7B9A7ED9, 0x3EC71DE2 }};\/*  2.755729806860771e-06   *\/$/;"	v	file:
s5	mathlib.cpp	/^  static const mynumber  s5 = {{0x11110F15, 0x3F811111}};\/*  0.008333333333332452   *\/$/;"	v	file:
s5	mathlib.cpp	/^  static const mynumber  s5 = {{0xC2FCDF59, 0xBE5ADDFF }};\/* -2.5022014848318398e-08  *\/$/;"	v	file:
s64	xen-types.h	/^typedef signed long long s64;$/;"	t
s64	xen-types.h	/^typedef signed long s64;$/;"	t
s7	mathlib.cpp	/^  static const mynumber  s7 = {{0x5816C78D, 0xBF2A019F}};\/* -0.00019841261022928957 *\/$/;"	v	file:
s8	xen-types.h	/^typedef signed char s8;$/;"	t
sa_flags	syscalls.h	/^    unsigned long sa_flags;$/;"	m	struct:kernel_sigaction
sa_mask	syscalls.h	/^    sigset_t sa_mask;$/;"	m	struct:kernel_sigaction
sa_restorer	syscalls.h	/^    void (*sa_restorer) (void);$/;"	m	struct:kernel_sigaction
sanitize	superstl.h	/^    bitvec<N>& sanitize() {$/;"	f	class:superstl::bitvec
sanitize	superstl.h	/^    static void sanitize(unsigned long& val) { $/;"	f	struct:superstl::bitvec_sanitizer
sanitize	superstl.h	/^    static void sanitize(unsigned long) { }$/;"	f	struct:superstl::bitvec_sanitizer
save_context_switch_to_sim	kernel.cpp	/^extern "C" void save_context_switch_to_sim() {$/;"	f
save_context_switch_to_sim_lowlevel	lowlevel-32bit.S	/^save_context_switch_to_sim_lowlevel:$/;"	l
save_context_switch_to_sim_lowlevel	lowlevel-64bit.S	/^save_context_switch_to_sim_lowlevel:$/;"	l
saved_bytes_behind_switch_to_sim_thunk	kernel.cpp	/^SwitchToSimThunkCode saved_bytes_behind_switch_to_sim_thunk;$/;"	v
saved_cs	kernel.cpp	/^W16 saved_cs;$/;"	v
saved_ds	kernel.cpp	/^W16 saved_ds;$/;"	v
saved_es	kernel.cpp	/^W16 saved_es;$/;"	v
saved_fs	kernel.cpp	/^W16 saved_fs;$/;"	v
saved_fsreg	lowlevel-32bit.S	/^saved_fsreg:$/;"	l
saved_gs	kernel.cpp	/^W16 saved_gs;$/;"	v
saved_gsreg	lowlevel-32bit.S	/^saved_gsreg: $/;"	l
saved_ss	kernel.cpp	/^W16 saved_ss;$/;"	v
saved_thunk	loader.h	/^  byte saved_thunk[LOADER_THUNK_SIZE];$/;"	m	struct:LoaderInfo
saved_upcall_mask	ptlhwdef.h	/^  byte saved_upcall_mask;$/;"	m	struct:ContextBase
savestats	dcache-amd-k8.h	/^    static void savestats(DataStoreNode& ds) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
savestats	dcache.h	/^    static void savestats(DataStoreNode& ds) {$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
saveto	ptlxen-common.cpp	/^void Context::saveto(vcpu_extended_context& ctx) {$/;"	f	class:Context
saveto	ptlxen-common.cpp	/^void Context::saveto(vcpu_guest_context& ctx) {$/;"	f	class:Context
scale	decode.h	/^      int scale;$/;"	m	struct:DecodedOperand::__anon142::__anon145
scale	decode.h	/^  byte base:3, index:3, scale:2;$/;"	m	struct:SIBByte
sce	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
sched_get_all_issueq_free_slots	ooocore-amd-k8.h	/^    void sched_get_all_issueq_free_slots(int* a) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
sched_get_all_issueq_free_slots	ooocore.h	/^    void sched_get_all_issueq_free_slots(int* a) {$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
scnprintf	klibc.cpp	/^int scnprintf(char * buf, size_t size, const char *fmt, ...)$/;"	f
search	datastore.cpp	/^DataStoreNode* DataStoreNode::search(const char* key) const {$/;"	f	class:DataStoreNode
search	logic.h	/^  int search(base_t tag) const {$/;"	f	struct:FullyAssociativeTags16bit
search	logic.h	/^  int search(base_t tag) const {$/;"	f	struct:FullyAssociativeTags8bit
search	logic.h	/^  int search(base_t tag) const {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
search	logic.h	/^  int search(const vec_t target) const {$/;"	f	struct:FullyAssociativeTags16bit
search	logic.h	/^  int search(const vec_t target) const {$/;"	f	struct:FullyAssociativeTags8bit
search_sorted	superstl.h	/^  int search_sorted(const T* p, int n, const T& key, const Comparator& compare = DefaultComparator<T>()) {$/;"	f	namespace:superstl
searchpath	datastore.cpp	/^DataStoreNode* DataStoreNode::searchpath(const char* path) const {$/;"	f	class:DataStoreNode
secondary_vcpu_startup	ptlxen.cpp	/^asmlinkage void secondary_vcpu_startup(int vcpuid) {$/;"	f
seconds	superstl.h	/^    inline double seconds() const {$/;"	f	class:superstl::CycleTimer
seconds_to_ticks	globals.h	/^static inline W64 seconds_to_ticks(double seconds) {$/;"	f
section	config.h	/^  void section(const char* name) {$/;"	f	struct:ConfigurationParser
seek	superstl.cpp	/^  W64 idstream::seek(W64 pos, int whence) {$/;"	f	class:superstl::idstream
seek	superstl.cpp	/^  W64 odstream::seek(W64 pos, int whence) {$/;"	f	class:superstl::odstream
seg	injectcode.cpp	/^  W16 seg;$/;"	m	struct:FarJumpDescriptor	file:
seg	kernel.cpp	/^  W16 seg;$/;"	m	struct:FarJumpDescriptor	file:
seg	ptlhwdef.h	/^  SegmentDescriptorCache seg[SEGID_COUNT];$/;"	m	struct:ContextBase
seg_32bit	kernel.cpp	/^  W32 seg_32bit:1;$/;"	m	struct:user_desc_32bit	file:
seg_not_present	kernel.cpp	/^  W32 seg_not_present:1;$/;"	m	struct:user_desc_32bit	file:
segment_not_present_entry	lowlevel-64bit-xen.S	/^segment_not_present_entry:$/;"	l
segreg_to_uniform_reg	decode-core.cpp	/^const byte segreg_to_uniform_reg[16] = { APR_es, APR_cs, APR_ss, APR_ds, APR_fs, APR_zero, APR_zero };$/;"	v
select	globals.h	/^T select(K cond, T if0, T if1) {$/;"	f
select	logic.h	/^  V* select(T addr) {$/;"	f	struct:AssociativeArray
select	logic.h	/^  V* select(T addr) {$/;"	f	struct:LockableAssociativeArray
select	logic.h	/^  V* select(T addr) {$/;"	f	struct:LockableCommitRollbackAssociativeArray
select	logic.h	/^  V* select(T addr, T& oldaddr) {$/;"	f	struct:AssociativeArray
select	logic.h	/^  V* select(T addr, T& oldaddr) {$/;"	f	struct:LockableAssociativeArray
select	logic.h	/^  V* select(T addr, T& oldaddr) {$/;"	f	struct:LockableCommitRollbackAssociativeArray
select	logic.h	/^  V* select(T tag) {$/;"	f	struct:FullyAssociativeArray
select	logic.h	/^  V* select(T tag) {$/;"	f	struct:LockableFullyAssociativeArray
select	logic.h	/^  V* select(T tag, T& oldtag) {$/;"	f	struct:FullyAssociativeArray
select	logic.h	/^  V* select(T tag, T& oldtag) {$/;"	f	struct:LockableFullyAssociativeArray
select	logic.h	/^  int select(T target) {$/;"	f	struct:FullyAssociativeTags
select	logic.h	/^  int select(T target) {$/;"	f	struct:LockableFullyAssociativeTags
select	logic.h	/^  int select(T target, T& oldtag) {$/;"	f	struct:FullyAssociativeTags
select	logic.h	/^  int select(T target, T& oldtag) {$/;"	f	struct:LockableFullyAssociativeTags
select	logic.h	/^  int select(base_t target) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
select	logic.h	/^  int select(base_t target, base_t& oldtag) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
select_and_lock	logic.h	/^  V* select_and_lock(T addr) { bool dummy; return select_and_lock(addr, dummy); }$/;"	f	struct:LockableAssociativeArray
select_and_lock	logic.h	/^  V* select_and_lock(T addr) { bool dummy; return select_and_lock(addr, dummy); }$/;"	f	struct:LockableCommitRollbackAssociativeArray
select_and_lock	logic.h	/^  V* select_and_lock(T addr) {$/;"	f	struct:CommitRollbackCache
select_and_lock	logic.h	/^  V* select_and_lock(T addr, T& oldaddr) {$/;"	f	struct:CommitRollbackCache
select_and_lock	logic.h	/^  V* select_and_lock(T addr, bool& firstlock) {$/;"	f	struct:LockableAssociativeArray
select_and_lock	logic.h	/^  V* select_and_lock(T addr, bool& firstlock) {$/;"	f	struct:LockableCommitRollbackAssociativeArray
select_and_lock	logic.h	/^  V* select_and_lock(T addr, bool& firstlock, T& oldtag) {$/;"	f	struct:LockableAssociativeArray
select_and_lock	logic.h	/^  V* select_and_lock(T addr, bool& firstlock, T& oldtag) {$/;"	f	struct:LockableCommitRollbackAssociativeArray
select_and_lock	logic.h	/^  V* select_and_lock(T tag) { bool dummy; return select_and_lock(tag, dummy); }$/;"	f	struct:LockableFullyAssociativeArray
select_and_lock	logic.h	/^  V* select_and_lock(T tag, bool& firstlock) {$/;"	f	struct:LockableFullyAssociativeArray
select_and_lock	logic.h	/^  V* select_and_lock(T tag, bool& firstlock, T& oldtag) {$/;"	f	struct:LockableFullyAssociativeArray
select_and_lock	logic.h	/^  int select_and_lock(T tag, bool& firstlock) {$/;"	f	struct:LockableFullyAssociativeTags
select_and_lock	logic.h	/^  int select_and_lock(T tag, bool& firstlock, T& oldtag) {$/;"	f	struct:LockableFullyAssociativeTags
select_and_lock	logic.h	/^  int select_and_lock(T target) { bool dummy; return select_and_lock(target, dummy); }$/;"	f	struct:LockableFullyAssociativeTags
select_cluster	ooocore-amd-k8.h	/^      } select_cluster;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon47
select_cluster	ooocore.h	/^      } select_cluster;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon11
select_cluster	ooopipe.cpp	/^int ReorderBufferEntry::select_cluster() {$/;"	f	class:ReorderBufferEntry
selector	ptlhwdef.h	/^  W32 selector;$/;"	m	struct:SegmentDescriptorCache
self	kernel.h	/^  ThreadState* self;$/;"	m	struct:ThreadState
selflistlink	superstl.h	/^    selflistlink() { reset(); }$/;"	f	class:superstl::selflistlink
selflistlink	superstl.h	/^  class selflistlink {$/;"	c	namespace:superstl
selfqueuelink	superstl.h	/^    selfqueuelink() { }$/;"	f	class:superstl::selfqueuelink
selfqueuelink	superstl.h	/^  class selfqueuelink {$/;"	c	namespace:superstl
send_request_to_ptlmon	ptlmon.cpp	/^int send_request_to_ptlmon(int domain, const char* request) {$/;"	f
seq_total_basic_blocks	seqcore.cpp	/^  W64 seq_total_basic_blocks;$/;"	m	struct:SequentialCore	file:
seq_total_cycles	seqcore.cpp	/^  W64 seq_total_cycles;$/;"	m	struct:SequentialCore	file:
seq_total_uops_committed	seqcore.cpp	/^  W64 seq_total_uops_committed;$/;"	m	struct:SequentialCore	file:
seq_total_user_insns_committed	seqcore.cpp	/^  W64 seq_total_user_insns_committed;$/;"	m	struct:SequentialCore	file:
seqexec_result_names	seqcore.cpp	/^const char* seqexec_result_names[SEQEXEC_RESULT_COUNT] = {$/;"	v
sequential_mode_insns	ptlsim.h	/^  W64 sequential_mode_insns;$/;"	m	struct:PTLsimConfig
set	logic.h	/^    W16 set;$/;"	m	struct:LockableCommitRollbackAssociativeArray::ClearList
set	superstl.h	/^    bitvec<N>& set(size_t index) {$/;"	f	class:superstl::bitvec
set	superstl.h	/^    bool set() const { return !empty(); }$/;"	f	class:superstl::stringbuf
set_reserved_entries	ooocore-amd-k8.h	/^    void set_reserved_entries(int num) { reserved_entries = num; }$/;"	f	struct:OutOfOrderModel::IssueQueue
set_reserved_entries	ooocore.h	/^    void set_reserved_entries(int num) { reserved_entries = num; }$/;"	f	struct:OutOfOrderModel::IssueQueue
set_ringbuf_mode	superstl.cpp	/^  void odstream::set_ringbuf_mode(bool new_ringbuf_mode) {$/;"	f	class:superstl::odstream
set_switch_to_sim_breakpoint	kernel.cpp	/^void set_switch_to_sim_breakpoint(void* addr) {$/;"	f
set_unaligned_hint	ooopipe.cpp	/^void OutOfOrderCore::set_unaligned_hint(const RIPVirtPhysBase& rvp, bool value) {$/;"	f	class:OutOfOrderCore
set_virtualized_tsc_bias	ptlxen-events.cpp	/^void set_virtualized_tsc_bias(int vcpuid, W64s tsc_timestamp_bias, W64s system_time_bias) {$/;"	f
setall	superstl.h	/^    bitvec<N>& setall() {$/;"	f	class:superstl::bitvec
setallop	superstl.h	/^    void setallop() { w = ~static_cast<T>(0); }$/;"	f	struct:superstl::bitvecbase
setallop	superstl.h	/^    void setallop() { }$/;"	f	struct:superstl::bitvecbase
setallop	superstl.h	/^    void setallop() {$/;"	f	struct:superstl::bitvecbase
setattr	kernel.cpp	/^void AddressSpace::setattr(void* start, Waddr length, int prot) {$/;"	f	class:AddressSpace
setbase	ptlhwdef.h	/^  void setbase(W64 addr) {$/;"	f	struct:SegmentDescriptor
setbit	globals.h	182;"	d
setbrk	kernel.cpp	/^void* AddressSpace::setbrk(void* reqbrk) {$/;"	f	class:AddressSpace
setbuf	superstl.cpp	/^  int idstream::setbuf(int bufsize) {$/;"	f	class:superstl::idstream
setbuf	superstl.cpp	/^  int odstream::setbuf(int newbufsize) {$/;"	f	class:superstl::odstream
setchain	superstl.cpp	/^  void odstream::setchain(odstream* chain) {$/;"	f	class:superstl::odstream
setdash	ptlstats.cpp	/^  void setdash(float dashoffset, float dashon = 0, float dashoff = 0) {$/;"	f	class:SVGCreator
setdirty	kernel.h	/^  void setdirty(Waddr mfn) { make_page_accessible((void*)(mfn << 12), dirtymap); }$/;"	f	class:AddressSpace
setflag_names	ptlhwdef.cpp	/^const char* setflag_names[SETFLAG_COUNT] = {"z", "c", "o"};$/;"	v
setflags	ooocore-amd-k8.h	/^    struct setflags { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::commit
setflags	ooocore-amd-k8.h	/^    } setflags;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit	typeref:struct:PerContextOutOfOrderCoreStats::commit::setflags
setflags	ooocore.h	/^    struct setflags { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::commit
setflags	ooocore.h	/^    } setflags;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit	typeref:struct:PerContextOutOfOrderCoreStats::commit::setflags
setflags	ptlhwdef.h	/^  byte cond:4, setflags:3, nouserflags:1;$/;"	m	struct:TransOpBase
setflags_to_x86_flags	ptlhwdef.cpp	/^const W16 setflags_to_x86_flags[1<<3] = {$/;"	v
setfont	ptlstats.cpp	/^  void setfont(const char* font) {$/;"	f	class:SVGCreator
setlimit	ptlhwdef.h	/^  void setlimit(W64 size) {$/;"	f	struct:SegmentDescriptor
setof	logic.h	/^  static inline Waddr setof(T address) { return bits(address, log2(linesize), log2(setcount)); }$/;"	f	struct:DefaultCacheIndexingFunction
setof	logic.h	/^  static inline Waddr setof(T address) {$/;"	f	struct:CRCCacheIndexingFunction
setof	logic.h	/^  static inline Waddr setof(T address) {$/;"	f	struct:XORCacheIndexingFunction
setof	logic.h	/^  static int setof(T addr) {$/;"	f	struct:AssociativeArray
setof	logic.h	/^  static int setof(T addr) {$/;"	f	struct:LockableAssociativeArray
setof	logic.h	/^  static int setof(T addr) {$/;"	f	struct:LockableCommitRollbackAssociativeArray
setof	seqcore.cpp	/^  static int setof(W64 addr) {$/;"	f	struct:TransactionalMemory
setof	superstl.h	/^    static int setof(T value) {$/;"	f	struct:superstl::FixedValueHashtable
setof	superstl.h	/^    static int setof(Tkey key) {$/;"	f	struct:superstl::FixedKeyValueHashtable
setoffset	ptlstats.cpp	/^  void setoffset(float x, float y) {$/;"	f	class:SVGCreator
sets	logic.h	/^  Set sets[setcount];$/;"	m	struct:AssociativeArray
sets	logic.h	/^  Set sets[setcount];$/;"	m	struct:LockableAssociativeArray
sets	logic.h	/^  Set sets[setcount];$/;"	m	struct:LockableCommitRollbackAssociativeArray
sets	seqcore.cpp	/^  W16s sets[setcount];$/;"	m	struct:TransactionalMemory	file:
sets	superstl.h	/^    ptr_t sets[setcount];$/;"	m	struct:superstl::FixedKeyValueHashtable
sets	superstl.h	/^    ptr_t sets[setcount];$/;"	m	struct:superstl::FixedValueHashtable
sets	superstl.h	/^    selflistlink* sets[setcount];$/;"	m	struct:superstl::SelfHashtable
settrans	kernel.h	/^  void settrans(Waddr mfn) { make_page_accessible((void*)(mfn << 12), transmap); }$/;"	f	class:AddressSpace
setup	kernel.cpp	/^  void setup(void* target) {$/;"	f	struct:FarJumpDescriptor
setup	ptlsim.cpp	/^void ConfigurationParser<PTLsimConfig>::setup() {$/;"	f	class:ConfigurationParser
setup	ptlstats.cpp	/^void ConfigurationParser<PTLstatsConfig>::setup() {$/;"	f	class:ConfigurationParser
setup_perfevtsel	perfctrs.cpp	/^PerfEvtSelMSR setup_perfevtsel(int event, int unitmask) {$/;"	f
setup_sim_thunk_page	kernel.cpp	/^void setup_sim_thunk_page() {$/;"	f
setzero	globals.h	/^template <typename T> static inline void setzero(T& x) { memset(&x, 0, sizeof(T)); }$/;"	f
sf	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
sfence	ooocore-amd-k8.h	/^      W64 sfence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::fence
sfence	ooocore-amd-k8.h	/^    W8 store:1, lfence:1, sfence:1, entry_valid:1;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
sfence	ooocore.h	/^      W64 sfence;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::fence
sfence	ooocore.h	/^    W8 store:1, lfence:1, sfence:1, entry_valid:1;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
sfr	ooocore-amd-k8.h	/^        SFR sfr;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
sfr	ooocore-amd-k8.h	/^        W64 sfr;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::forward
sfr	ooocore-amd-k8.h	/^        W64 sfr;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::forward
sfr	ooocore-amd-k8.h	/^      W64 sfr;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::alloc
sfr	ooocore.h	/^        SFR sfr;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
sfr	ooocore.h	/^        W64 sfr;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::forward
sfr	ooocore.h	/^        W64 sfr;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::forward
sfr	ooocore.h	/^      W64 sfr;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::alloc
sfr	seqcore.cpp	/^      SFR sfr;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon88	file:
sfr_addr_and_data_and_data_to_store_not_ready	ooocore-amd-k8.h	/^          W64 sfr_addr_and_data_and_data_to_store_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_addr_and_data_and_data_to_store_not_ready	ooocore.h	/^          W64 sfr_addr_and_data_and_data_to_store_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_addr_and_data_not_ready	ooocore-amd-k8.h	/^          W64 sfr_addr_and_data_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
sfr_addr_and_data_not_ready	ooocore-amd-k8.h	/^          W64 sfr_addr_and_data_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_addr_and_data_not_ready	ooocore.h	/^          W64 sfr_addr_and_data_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
sfr_addr_and_data_not_ready	ooocore.h	/^          W64 sfr_addr_and_data_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_addr_and_data_to_store_not_ready	ooocore-amd-k8.h	/^          W64 sfr_addr_and_data_to_store_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_addr_and_data_to_store_not_ready	ooocore.h	/^          W64 sfr_addr_and_data_to_store_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_addr_not_ready	ooocore-amd-k8.h	/^          W64 sfr_addr_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
sfr_addr_not_ready	ooocore-amd-k8.h	/^          W64 sfr_addr_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_addr_not_ready	ooocore.h	/^          W64 sfr_addr_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
sfr_addr_not_ready	ooocore.h	/^          W64 sfr_addr_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_and_cache	ooocore-amd-k8.h	/^        W64 sfr_and_cache;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::forward
sfr_and_cache	ooocore.h	/^        W64 sfr_and_cache;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::forward
sfr_data_and_data_to_store_not_ready	ooocore-amd-k8.h	/^          W64 sfr_data_and_data_to_store_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_data_and_data_to_store_not_ready	ooocore.h	/^          W64 sfr_data_and_data_to_store_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_data_not_ready	ooocore-amd-k8.h	/^          W64 sfr_data_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
sfr_data_not_ready	ooocore-amd-k8.h	/^          W64 sfr_data_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfr_data_not_ready	ooocore.h	/^          W64 sfr_data_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue::replay
sfr_data_not_ready	ooocore.h	/^          W64 sfr_data_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue::replay
sfrused	dcache-amd-k8.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
sfrused	dcache.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
sgdt	cpuid.cpp	/^static inline void sgdt(DescriptorTablePointer& p) {$/;"	f	file:
sgdt	ptlxen.cpp	/^static inline void sgdt(DescriptorTablePointer& p) {$/;"	f	file:
shadow_evtchn_set_pending	ptlxen-events.cpp	/^bool shadow_evtchn_set_pending(unsigned int port) {$/;"	f
shadow_evtchn_unmask	ptlxen-events.cpp	/^int shadow_evtchn_unmask(unsigned int port) {$/;"	f
shadow_shinfo	ptlmon.cpp	/^  shared_info* shadow_shinfo;$/;"	m	struct:XenController	file:
shared_empty	ooocore-amd-k8.h	/^    bool shared_empty() {$/;"	f	struct:OutOfOrderModel::IssueQueue
shared_empty	ooocore.h	/^    bool shared_empty() {$/;"	f	struct:OutOfOrderModel::IssueQueue
shared_entries	ooocore-amd-k8.h	/^    int shared_entries;$/;"	m	struct:OutOfOrderModel::IssueQueue
shared_entries	ooocore.h	/^    int shared_entries;$/;"	m	struct:OutOfOrderModel::IssueQueue
shared_info	ptlxen.h	/^  struct shared_info* shared_info;$/;"	m	struct:PTLsimMonitorInfo	typeref:struct:PTLsimMonitorInfo::shared_info
shared_info_mfn	ptlxen.h	/^  mfn_t shared_info_mfn;$/;"	m	struct:PTLsimMonitorInfo
shared_map_page_count	ptlmon.cpp	/^  int shared_map_page_count;$/;"	m	struct:XenController	file:
shiftleftop	superstl.h	/^    void shiftleftop(size_t __shift) { w <<= __shift; }$/;"	f	struct:superstl::bitvecbase
shiftleftop	superstl.h	/^    void shiftleftop(size_t shift) {$/;"	f	struct:superstl::bitvecbase
shiftleftop	superstl.h	/^    void shiftleftop(size_t) { }$/;"	f	struct:superstl::bitvecbase
shiftop	uopimpl.cpp	/^inline void shiftop(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
shiftregs	branchpred.cpp	/^  array<int, L1SIZE> shiftregs; \/\/ L1 history shift register(s)$/;"	m	struct:TwoLevelPredictor	file:
shiftrightop	superstl.h	/^    void shiftrightop(size_t __shift) { w >>= __shift; }$/;"	f	struct:superstl::bitvecbase
shiftrightop	superstl.h	/^    void shiftrightop(size_t shift) {$/;"	f	struct:superstl::bitvecbase
shiftrightop	superstl.h	/^    void shiftrightop(size_t) { }$/;"	f	struct:superstl::bitvecbase
shinfo	ptlmon.cpp	/^  shared_info* shinfo;$/;"	m	struct:XenController	file:
shinfo	ptlxen.h	351;"	d
shinfo_evtchn_mask	ptlxen.h	356;"	d
shinfo_evtchn_pending	ptlxen.h	355;"	d
shinfo_evtchn_pending_sel	ptlxen.h	357;"	d
short_physreg_state_names	ooocore-amd-k8.h	/^  static const char* short_physreg_state_names[MAX_PHYSREG_STATE] = {"-", "free", "wait", "byps", "wrtn", "arch", "pend"};$/;"	v
short_physreg_state_names	ooocore.h	/^  static const char* short_physreg_state_names[MAX_PHYSREG_STATE] = {"-", "free", "wait", "byps", "wrtn", "arch", "pend"};$/;"	v
shortptr	superstl.h	/^    shortptr() { }$/;"	f	struct:superstl::shortptr
shortptr	superstl.h	/^    shortptr(const T& obj) {$/;"	f	struct:superstl::shortptr
shortptr	superstl.h	/^    shortptr(const T* obj) {$/;"	f	struct:superstl::shortptr
shortptr	superstl.h	/^  struct shortptr {$/;"	s	namespace:superstl
show_stars_in_histogram	datastore.h	/^  int force_sum_of_subtrees_only:1, percent_of_toplevel:1, hide_zero_branches:1, cumulative_histogram:1, show_stars_in_histogram:1;$/;"	m	struct:DataStoreNodePrintSettings
show_stars_in_histogram	ptlstats.cpp	/^  bool show_stars_in_histogram;$/;"	m	struct:PTLstatsConfig	file:
show_sum_of_subtrees_only	ptlstats.cpp	/^  bool show_sum_of_subtrees_only;$/;"	m	struct:PTLstatsConfig	file:
shutdown	ptlxen.cpp	/^int shutdown(int reason) {$/;"	f
shutdown	ptlxen.h	/^    } shutdown;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon108
shutdown_decode	decode-core.cpp	/^void shutdown_decode() {$/;"	f
shutdown_subsystems	ptlsim.cpp	/^void shutdown_subsystems() {$/;"	f
shutdown_uops	uopimpl.cpp	/^void shutdown_uops() {$/;"	f
sidt	cpuid.cpp	/^static inline void sidt(DescriptorTablePointer& p) {$/;"	f	file:
sidt	ptlxen.cpp	/^static inline void sidt(DescriptorTablePointer& p) {$/;"	f	file:
signbit	mathlib.h	/^  inline int signbit(double x) {$/;"	f	namespace:math
signbit	mathlib.h	120;"	d
signbitf	mathlib.h	/^  inline int signbitf(float x) {$/;"	f	namespace:math
signbitf	mathlib.h	127;"	d
signext	dcache-amd-k8.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
signext	dcache.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
signext	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } lm;$/;"	m	struct:VirtAddr::__anon125
signext	ptlhwdef.h	/^  struct { W64 offset:12, level1:9, level2:9, level3:9, level4:9, signext:16; } pae;$/;"	m	struct:VirtAddr::__anon126
signext16	globals.h	/^static inline W16s signext16(W16s x, const int i) { return (x << (16-i)) >> (16-i); }$/;"	f
signext32	globals.h	/^static inline W32s signext32(W32s x, const int i) { return (x << (32-i)) >> (32-i); }$/;"	f
signext64	globals.h	/^static inline W64s signext64(W64s x, const int i) { return (x << (64-i)) >> (64-i); }$/;"	f
signext_reg_or_mem	decode-core.cpp	/^void TraceDecoder::signext_reg_or_mem(const DecodedOperand& rd, DecodedOperand& ra, int rasize, bool zeroext) {$/;"	f	class:TraceDecoder
significand	mathlib.cpp	/^  double significand(double x) {$/;"	f	namespace:math
sigterm_handler	ptlmon.cpp	/^extern "C" void sigterm_handler(int sig, siginfo_t* si, void* contextp) {$/;"	f
sim_cycle	ptlsim.cpp	/^W64 sim_cycle = 0;$/;"	v
sim_mfn_to_host_mfn	ptlxen-memory.cpp	/^W64 sim_mfn_to_host_mfn(W64 simmfn) {$/;"	f
sim_mfn_to_host_mfn_map	ptlxen-memory.cpp	/^W32* sim_mfn_to_host_mfn_map = null;$/;"	v
sim_mfn_to_host_mfn_map_size	ptlxen-memory.cpp	/^W64 sim_mfn_to_host_mfn_map_size = 0;$/;"	v
sim_physaddr_to_host_physaddr	ptlxen.h	/^static inline Waddr sim_physaddr_to_host_physaddr(Waddr simphys) {$/;"	f
simcall	kernel.h	/^  simcall_func_t simcall;$/;"	m	struct:ThreadState
simcall_func_t	kernel.h	/^typedef W64 (*simcall_func_t)(W64 arg1, W64 arg2, W64 arg3, W64 arg4, W64 arg5, W64 arg6);$/;"	t
simd_coprocessor_error_entry	lowlevel-64bit-xen.S	/^simd_coprocessor_error_entry:$/;"	l
simswitch	ptlsim.h	/^  bool simswitch;$/;"	m	struct:PTLsimConfig
simulate	ptlsim.cpp	/^bool simulate(const char* machinename) {$/;"	f
simulated	ptlcalls.h	/^  W64 simulated;$/;"	m	struct:PTLsimThunkPage
simulator	ooocore-amd-k8.h	/^  struct simulator {$/;"	s	struct:OutOfOrderCoreStats
simulator	ooocore-amd-k8.h	/^  } simulator;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::simulator
simulator	ooocore.h	/^  struct simulator {$/;"	s	struct:OutOfOrderCoreStats
simulator	ooocore.h	/^  } simulator;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::simulator
simulator	stats.h	/^  struct simulator {$/;"	s	struct:PTLsimStats
simulator	stats.h	/^  } simulator;$/;"	m	struct:PTLsimStats	typeref:struct:PTLsimStats::simulator
sin	mathlib.cpp	/^  double sin(double x){$/;"	f	namespace:math
sincos	mathlib.cpp	/^static const union { int4 i[880]; double x[440]; } sincos = { {$/;"	v	typeref:union:math::__anon77	file:
size	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:4, ways:4, size:16; } fields;$/;"	m	struct:L2CacheInfo::__anon36	file:
size	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:8, ways:8, size:8; } fields;$/;"	m	struct:CacheInfo::__anon35	file:
size	decode.h	/^      int size;$/;"	m	struct:DecodedOperand::__anon142::__anon145
size	logic.h	/^  static const int size = SIZE;$/;"	m	struct:FixedQueue
size	mm.cpp	/^    Waddr size;$/;"	m	struct:ExtentAllocator::FreeExtent	file:
size	mm.cpp	/^  Waddr size;$/;"	m	struct:AddressSizeSpan	file:
size	ooocore-amd-k8.h	/^      W64 size[4]; \/\/ label: sizeshift_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load
size	ooocore-amd-k8.h	/^      W64 size[4]; \/\/ label: sizeshift_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store
size	ooocore-amd-k8.h	/^    W16 size;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
size	ooocore.h	/^      W64 size[4]; \/\/ label: sizeshift_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load
size	ooocore.h	/^      W64 size[4]; \/\/ label: sizeshift_names$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store
size	ooocore.h	/^    W16 size;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
size	ptlhwdef.h	/^  byte size:2, extshift:2, unaligned:1;$/;"	m	struct:TransOpBase
size	superstl.cpp	/^  W64 idstream::size() const {$/;"	f	class:superstl::idstream
size	superstl.h	/^    T size() const { return abs(hi - lo); }$/;"	f	struct:superstl::range
size	superstl.h	/^    inline int size() const { return length; }$/;"	f	class:superstl::dynarray
size	superstl.h	/^    int size() const { return p - buf; }$/;"	f	class:superstl::stringbuf
size	superstl.h	/^    size_t size() const { return N; }$/;"	f	class:superstl::bitvec
size_t	globals.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t
size_t	xen-types.h	/^typedef unsigned long size_t;$/;"	t
sizelink	mm.cpp	/^    selflistlink sizelink;$/;"	m	struct:ExtentAllocator::FreeExtentBase	file:
sizelink_to_self	mm.cpp	/^    static FreeExtent* sizelink_to_self(selflistlink* link) { return (link) ? (FreeExtent*)(link - 0) : null; } $/;"	f	struct:ExtentAllocator::FreeExtent
sizes	uopimpl.cpp	1323;"	d	file:
sizes	uopimpl.cpp	1510;"	d	file:
sizeshift	dcache-amd-k8.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
sizeshift	dcache.h	/^  W8  sizeshift:2, aligntype:2, sfrused:1, internal:1, signext:1, pad1:1;$/;"	m	struct:LoadStoreInfo
sizeshift	decode.h	/^  W32 sizeshift:3, hibyte:1;$/;"	m	struct:ArchPseudoRegInfo
sizeshift_names	ptlhwdef.h	/^static const char* sizeshift_names[4] = {$/;"	v
skip_atoi	klibc.cpp	/^static int skip_atoi(const char **s)$/;"	f	file:
skipblock	ooocore-amd-k8.h	/^      W64 skipblock;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
skipblock	ooocore.h	/^      W64 skipblock;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
skipblock	seqcore.cpp	/^    } skipblock;$/;"	m	union:SequentialCoreEvent::__anon86	typeref:struct:SequentialCoreEvent::__anon86::__anon90	file:
slab	mm-private.h	/^  W16 slab;$/;"	m	struct:MemoryManagerEvent
slaballoc	mm.cpp	/^SlabAllocator slaballoc[SLAB_ALLOC_SLOT_COUNT];$/;"	v
sldt	cpuid.cpp	/^static inline void sldt(W16& selector) {$/;"	f	file:
sldt	ptlxen.cpp	/^static inline void sldt(W16& selector) {$/;"	f	file:
slice_cumulative	ptlstats.cpp	/^  bool slice_cumulative;$/;"	m	struct:PTLstatsConfig	file:
slices	logic.h	/^  static const int slices = (width + 7) \/ 8;$/;"	m	struct:FullyAssociativeTagsNbitOneHot
slot	superstl.h	/^      int slot;$/;"	m	struct:superstl::GenericChunkList::Iterator
slot	superstl.h	/^      int slot;$/;"	m	struct:superstl::SearchableChunkList16Entry::Iterator
slot	superstl.h	/^      int slot;$/;"	m	struct:superstl::SelfHashtable::Iterator
slotof	ooocore-amd-k8.h	/^    int slotof(int uopid) const {$/;"	f	struct:OutOfOrderModel::IssueQueue
slotof	ooocore.h	/^    int slotof(int uopid) const {$/;"	f	struct:OutOfOrderModel::IssueQueue
slow	mathlib.cpp	/^static double slow(double x) {$/;"	f	namespace:math	file:
slow1	mathlib.cpp	/^static double slow1(double x) {$/;"	f	namespace:math	file:
slow2	mathlib.cpp	/^static double slow2(double x) {$/;"	f	namespace:math	file:
sloww	mathlib.cpp	/^static double sloww(double x,double dx, double orig) {$/;"	f	namespace:math	file:
sloww1	mathlib.cpp	/^static double sloww1(double x, double dx, double orig) {$/;"	f	namespace:math	file:
sloww2	mathlib.cpp	/^static double sloww2(double x, double dx, double orig, int n) {$/;"	f	namespace:math	file:
smallbuf	superstl.h	/^    char smallbuf[stringbuf_smallbufsize];$/;"	m	class:superstl::stringbuf
smc	ooocore-amd-k8.h	/^      W64 smc;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
smc	ooocore.h	/^      W64 smc;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
smc_cleardirty	kernel.h	/^static inline void smc_cleardirty(Waddr mfn) { asp.cleardirty(mfn); }$/;"	f
smc_cleardirty	ptlxen.h	/^static inline void smc_cleardirty(Waddr simmfn) {$/;"	f
smc_cleardirty_host	ptlxen.h	/^static inline void smc_cleardirty_host(Waddr mfn) {$/;"	f
smc_cleartrans	kernel.h	/^static inline void smc_cleartrans(Waddr mfn) { asp.cleartrans(mfn); }$/;"	f
smc_invalidate_pending	ooocore-amd-k8.h	/^    bool smc_invalidate_pending;$/;"	m	struct:OutOfOrderModel::ThreadContext
smc_invalidate_pending	ooocore.h	/^    bool smc_invalidate_pending;$/;"	m	struct:OutOfOrderModel::ThreadContext
smc_invalidate_rvp	ooocore-amd-k8.h	/^    RIPVirtPhys smc_invalidate_rvp;$/;"	m	struct:OutOfOrderModel::ThreadContext
smc_invalidate_rvp	ooocore.h	/^    RIPVirtPhys smc_invalidate_rvp;$/;"	m	struct:OutOfOrderModel::ThreadContext
smc_isdirty	kernel.h	/^static inline bool smc_isdirty(Waddr mfn) { return asp.isdirty(mfn); }$/;"	f
smc_isdirty	ptlxen.h	/^static inline bool smc_isdirty(Waddr simmfn) {$/;"	f
smc_isdirty_host	ptlxen.h	/^static inline bool smc_isdirty_host(Waddr mfn) {$/;"	f
smc_istrans	kernel.h	/^static inline bool smc_istrans(Waddr mfn) { return asp.istrans(mfn); }$/;"	f
smc_setdirty	kernel.h	/^static inline void smc_setdirty(Waddr mfn) { asp.setdirty(mfn); }$/;"	f
smc_setdirty	ptlxen.h	/^static inline void smc_setdirty(Waddr simmfn) {$/;"	f
smc_setdirty_host	ptlxen.h	/^static inline void smc_setdirty_host(Waddr mfn) {$/;"	f
smc_setdirty_internal	ptlxen-memory.cpp	/^void smc_setdirty_internal(Level1PTE& pte, bool dirty) {$/;"	f
smc_setdirty_value	ptlxen.h	/^static inline void smc_setdirty_value(Waddr mfn, bool dirty) {$/;"	f
smc_settrans	kernel.h	/^static inline void smc_settrans(Waddr mfn) { asp.settrans(mfn); }$/;"	f
sn3	mathlib.cpp	/^          sn3 = -1.66666666666664880952546298448555E-01,$/;"	v	file:
sn5	mathlib.cpp	/^          sn5 =  8.33333214285722277379541354343671E-03,$/;"	v	file:
snapshot	ptlstats.cpp	/^  stringbuf snapshot;$/;"	m	struct:PTLstatsConfig	file:
snapshot_cycles	ptlsim.h	/^  W64 snapshot_cycles;$/;"	m	struct:PTLsimConfig
snapshot_name	stats.h	/^  char snapshot_name[64];$/;"	m	struct:PTLsimStats
snapshot_now	ptlsim.h	/^  stringbuf snapshot_now;$/;"	m	struct:PTLsimConfig
snapshot_uuid	stats.h	/^  W64 snapshot_uuid;$/;"	m	struct:PTLsimStats
snprintf	klibc.cpp	/^int snprintf(char * buf, size_t size, const char *fmt, ...)$/;"	f
som	ptlhwdef.h	/^  byte bytes:4, som:1, eom:1, is_sse:1, is_x87:1;$/;"	m	struct:TransOpBase
some_complex_insns	stats.h	/^      W64 some_complex_insns;$/;"	m	struct:PTLsimStats::decoder::bb_decode_type
some_insns_complex	decode.h	/^  bool some_insns_complex;$/;"	m	struct:TraceDecoder
somidx	ooocore-amd-k8.h	/^        W16 somidx;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon52
somidx	ooocore.h	/^        W16 somidx;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon16
sort	superstl.h	/^  void sort(T* p, size_t n, const Comparator& compare = DefaultComparator<T>()) {$/;"	f	namespace:superstl
source	ooocore-amd-k8.h	/^    struct source { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::dispatch
source	ooocore-amd-k8.h	/^    struct source { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::issue
source	ooocore-amd-k8.h	/^    } source;$/;"	m	struct:OutOfOrderCoreStats::dispatch	typeref:struct:OutOfOrderCoreStats::dispatch::source
source	ooocore-amd-k8.h	/^    } source;$/;"	m	struct:OutOfOrderCoreStats::issue	typeref:struct:OutOfOrderCoreStats::issue::source
source	ooocore.h	/^    struct source { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::dispatch
source	ooocore.h	/^    struct source { \/\/ node: summable$/;"	s	struct:OutOfOrderCoreStats::issue
source	ooocore.h	/^    } source;$/;"	m	struct:OutOfOrderCoreStats::dispatch	typeref:struct:OutOfOrderCoreStats::dispatch::source
source	ooocore.h	/^    } source;$/;"	m	struct:OutOfOrderCoreStats::issue	typeref:struct:OutOfOrderCoreStats::issue::source
spat_t	kernel.h	/^  typedef SPATChunk** spat_t;$/;"	t	class:AddressSpace
spat_t	kernel.h	/^  typedef byte* spat_t;$/;"	t	class:AddressSpace
specrrt	ooocore-amd-k8.h	/^    RegisterRenameTable specrrt;$/;"	m	struct:OutOfOrderModel::ThreadContext
specrrt	ooocore.h	/^    RegisterRenameTable specrrt;$/;"	m	struct:OutOfOrderModel::ThreadContext
speculative_store	dcache.cpp	/^W64 CacheHierarchy::speculative_store(const SFR& sfr, int threadid) {$/;"	f	class:CacheHierarchy
splice_into_head	superstl.h	/^    void splice_into_head(int destqid, int srcqid) {$/;"	f	struct:superstl::FixedIntegerQueueSet
splice_into_tail	superstl.h	/^    void splice_into_tail(int destqid, int srcqid) {$/;"	f	struct:superstl::FixedIntegerQueueSet
split	decode-core.cpp	/^void TraceDecoder::split(bool after) {$/;"	f	class:TraceDecoder
split	mathlib.cpp	/^  static const double split =  134217729.0;$/;"	v	file:
split_after	decode.h	/^  void split_after() { split(1); }$/;"	f	struct:TraceDecoder
split_basic_block_at_locks_and_fences	decode.h	/^  bool split_basic_block_at_locks_and_fences;$/;"	m	struct:TraceDecoder
split_before	decode.h	/^  void split_before() { split(0); }$/;"	f	struct:TraceDecoder
split_invalid_basic_blocks	decode.h	/^  bool split_invalid_basic_blocks;$/;"	m	struct:TraceDecoder
split_unaligned	decode-core.cpp	/^void split_unaligned(const TransOp& transop, TransOpBuffer& buf) {$/;"	f
splitat	superstl.h	/^    int splitat;$/;"	m	struct:superstl::bytemaskstring
splitat	superstl.h	/^    int splitat;$/;"	m	struct:superstl::bytestring
sqr	globals.h	175;"	d
sqrt	mathlib.h	/^  inline double sqrt(double a) {$/;"	f	namespace:math
ss	decode-complex.cpp	/^  W64 rip, cs, rflags, rsp, ss;$/;"	m	struct:IRETStackFrame	file:
ss3	mathlib.cpp	/^  static const mynumber ss3 = {{0xE77EE482, 0xBC6553AA}};\/* -9.2490366677784492e-18 *\/$/;"	v	file:
ss32	mathlib.cpp	/^  static void ss32(mp_no *x, mp_no *y, int p) {$/;"	f	namespace:math::mpa	file:
ss5	mathlib.cpp	/^  static const mynumber ss5 = {{0xDA488820, 0xBC21AC06}};\/* -4.7899996586987931e-19 *\/$/;"	v	file:
ss7	mathlib.cpp	/^  static const mynumber ss7 = {{0x6A18BF2A, 0x3BCDCEC9}};\/*  1.2624077757871259e-20 *\/$/;"	v	file:
sscanf	klibc.cpp	/^int sscanf(const char * buf, const char * fmt, ...)$/;"	f
sse	ptlhwdef.h	/^  byte marked:1, mfence:1, x87:1, sse:1, nondeterministic:1, brtype:3;$/;"	m	struct:BasicBlockBase
sse_float_datatype_to_ptl_datatype	decode-sse.cpp	/^static const byte sse_float_datatype_to_ptl_datatype[4] = {DATATYPE_FLOAT, DATATYPE_VEC_FLOAT, DATATYPE_DOUBLE, DATATYPE_VEC_DOUBLE};$/;"	v	file:
sshinfo	ptlxen.h	359;"	d
sshinfo_evtchn_mask	ptlxen.h	361;"	d
sshinfo_evtchn_pending	ptlxen.h	360;"	d
sshinfo_evtchn_pending_sel	ptlxen.h	362;"	d
st	ooocore-amd-k8.h	/^      W64 st[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::dispatch::source
st	ooocore-amd-k8.h	/^      W64 st[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::issue::source
st	ooocore.h	/^      W64 st[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::dispatch::source
st	ooocore.h	/^      W64 st[OutOfOrderModel::MAX_PHYSREG_STATE]; \/\/ label: OutOfOrderModel::physreg_state_names$/;"	m	struct:OutOfOrderCoreStats::issue::source
st	ptlhwdef.h	/^    SFR st;$/;"	m	union:IssueState::__anon114
stack	kernel.h	/^  void* stack;$/;"	m	struct:ThreadState
stack	ptlhwdef.h	/^  X87Reg stack[8];$/;"	m	struct:X87State
stack	superstl.h	/^    stack() { reset(); }$/;"	f	struct:superstl::stack
stack	superstl.h	/^  struct stack {$/;"	s	namespace:superstl
stack_base	kernel.h	/^  Waddr stack_base;$/;"	m	class:AddressSpace
stack_max_addr	kernel.cpp	/^Waddr stack_max_addr;$/;"	v
stack_min_addr	kernel.cpp	/^Waddr stack_min_addr;$/;"	v
stack_recover_idx	ooocore-amd-k8.h	/^    int stack_recover_idx;$/;"	m	struct:OutOfOrderModel::BranchPredictorUpdateInfo
stack_recover_idx	ooocore.h	/^    int stack_recover_idx;$/;"	m	struct:OutOfOrderModel::BranchPredictorUpdateInfo
stack_segment_entry	lowlevel-64bit-xen.S	/^stack_segment_entry:$/;"	l
stack_size	ptlxen.h	/^  W32 stack_size;$/;"	m	struct:PTLsimMonitorInfo
stack_top	ptlxen.h	/^  byte* stack_top;$/;"	m	struct:PTLsimMonitorInfo
stacked	ptlstats.cpp	/^  bool stacked;$/;"	m	struct:LineAttributes	file:
stall_frontend	ooocore-amd-k8.h	/^    bool stall_frontend;$/;"	m	struct:OutOfOrderModel::ThreadContext
stall_frontend	ooocore.h	/^    bool stall_frontend;$/;"	m	struct:OutOfOrderModel::ThreadContext
stalled	ooocore-amd-k8.h	/^      W64 stalled;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
stalled	ooocore.h	/^      W64 stalled;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch::stop
start	kernel.cpp	/^  void* start;$/;"	m	struct:MemoryMapExtent	file:
start	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* start;$/;"	m	struct:OutOfOrderModel::EventLog
start	ooocore.h	/^    OutOfOrderCoreEvent* start;$/;"	m	struct:OutOfOrderModel::EventLog
start	ptlsim.h	/^  byte* start;$/;"	m	struct:AddrPair
start	seqcore.cpp	/^  SequentialCoreEvent* start;$/;"	m	struct:SequentialCoreEventLog	file:
start	superstl.h	/^    inline void start() { W64 t = rdtsc(); if (running) return; iterations++; tstart = t; running = 1; }$/;"	f	class:superstl::CycleTimer
start_at_rip	ptlsim.h	/^  W64 start_at_rip;$/;"	m	struct:PTLsimConfig
start_header_row	ptlstats.cpp	/^  virtual void start_header_row() { }$/;"	f	class:LaTeXTableCreator
start_header_row	ptlstats.cpp	/^  virtual void start_header_row() {$/;"	f	class:TableCreator
start_log_at_iteration	ptlsim.h	/^  W64 start_log_at_iteration;$/;"	m	struct:PTLsimConfig
start_log_at_rip	ptlsim.h	/^  W64 start_log_at_rip;$/;"	m	struct:PTLsimConfig
start_row	ptlstats.cpp	/^  virtual void start_row(int row) {$/;"	f	class:LaTeXTableCreator
start_row	ptlstats.cpp	/^  virtual void start_row(int row) {$/;"	f	class:TableCreator
start_special_row	ptlstats.cpp	/^  virtual void start_special_row(const char* title) {$/;"	f	class:LaTeXTableCreator
start_special_row	ptlstats.cpp	/^  virtual void start_special_row(const char* title) {$/;"	f	class:TableCreator
start_timer	ooocore-amd-k8.h	40;"	d
start_timer	ooocore-amd-k8.h	44;"	d
start_timer	ooocore.h	41;"	d
start_timer	ooocore.h	45;"	d
startaddrlink	mm.cpp	/^    selflistlink startaddrlink;$/;"	m	struct:ExtentAllocator::FreeExtentBase	file:
startaddrlink_to_self	mm.cpp	/^    static FreeExtent* startaddrlink_to_self(selflistlink* link) { return (link) ? (FreeExtent*)(link - 1) : null; }$/;"	f	struct:ExtentAllocator::FreeExtent
startidx	ooocore-amd-k8.h	/^        W16 startidx;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon52
startidx	ooocore.h	/^        W16 startidx;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon16
startpath	ptlstats.cpp	/^  void startpath(float x, float y, const char* name = null) {$/;"	f	class:SVGCreator
starttimer	dcache.cpp	17;"	d	file:
state	dcache-amd-k8.h	/^      W16 state;$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
state	dcache.h	/^      W16 state;$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
state	ooocore-amd-k8.h	/^        IssueState state;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon49
state	ooocore-amd-k8.h	/^        IssueState state;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
state	ooocore-amd-k8.h	/^    W8  state;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
state	ooocore-amd-k8.h	/^    byte state;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
state	ooocore.h	/^        IssueState state;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon13
state	ooocore.h	/^        IssueState state;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
state	ooocore.h	/^    W8  state;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
state	ooocore.h	/^    byte state;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
state	ptlhwdef.h	/^  int state;$/;"	m	struct:RunstateInfo
state	seqcore.cpp	/^      IssueState state;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon87	file:
state_entry_time	ptlhwdef.h	/^  W64 state_entry_time;$/;"	m	struct:RunstateInfo
states	ooocore-amd-k8.h	/^    StateList states[MAX_PHYSREG_STATE];$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
states	ooocore.h	/^    StateList states[MAX_PHYSREG_STATE];$/;"	m	struct:OutOfOrderModel::PhysicalRegisterFile
stats	ptlsim.cpp	/^PTLsimStats stats;$/;"	v
stats_filename	ptlsim.h	/^  stringbuf stats_filename;$/;"	m	struct:PTLsimConfig
statswriter	ptlsim.cpp	/^StatsFileWriter statswriter;$/;"	v
status	ooocore-amd-k8.h	/^    struct status { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::frontend
status	ooocore-amd-k8.h	/^    } status;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend	typeref:struct:PerContextOutOfOrderCoreStats::frontend::status
status	ooocore.h	/^    struct status { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::frontend
status	ooocore.h	/^    } status;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend	typeref:struct:PerContextOutOfOrderCoreStats::frontend::status
stepping	cpuid.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon32	file:
stepping	decode-complex.cpp	/^  struct { W32 stepping:4, model:4, family:4, reserved1:4, extmodel:4, extfamily:8, reserved2:4; } fields;$/;"	m	struct:ProcessorModelInfo::__anon70	file:
sti	ptlxen-events.cpp	/^void sti() {$/;"	f
stop	ooocore-amd-k8.h	/^      W64 stop;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
stop	ooocore-amd-k8.h	/^    struct stop { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::fetch
stop	ooocore-amd-k8.h	/^    } stop;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch	typeref:struct:PerContextOutOfOrderCoreStats::fetch::stop
stop	ooocore.h	/^      W64 stop;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::result
stop	ooocore.h	/^    struct stop { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::fetch
stop	ooocore.h	/^    } stop;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch	typeref:struct:PerContextOutOfOrderCoreStats::fetch::stop
stop	ptlsim.h	/^  bool stop;$/;"	m	struct:PTLsimConfig
stop	superstl.h	/^    inline W64 stop() {$/;"	f	class:superstl::CycleTimer
stop_at_cycle	ptlsim.h	/^  W64 stop_at_cycle;$/;"	m	struct:PTLsimConfig
stop_at_iteration	ptlsim.h	/^  W64 stop_at_iteration;$/;"	m	struct:PTLsimConfig
stop_at_marker	ptlsim.h	/^  W64 stop_at_marker;$/;"	m	struct:PTLsimConfig
stop_at_marker_hits	ptlsim.h	/^  W64 stop_at_marker_hits;$/;"	m	struct:PTLsimConfig
stop_at_next_eom	ooocore-amd-k8.h	/^    bool stop_at_next_eom;$/;"	m	struct:OutOfOrderModel::ThreadContext
stop_at_next_eom	ooocore.h	/^    bool stop_at_next_eom;$/;"	m	struct:OutOfOrderModel::ThreadContext
stop_at_rip	decode.h	/^  W64 stop_at_rip;$/;"	m	struct:TraceDecoder
stop_at_rip	ptlsim.h	/^  W64 stop_at_rip;$/;"	m	struct:PTLsimConfig
stop_at_user_insns	ptlsim.h	/^  W64 stop_at_user_insns;$/;"	m	struct:PTLsimConfig
stop_at_user_insns_relative	ptlsim.h	/^  W64 stop_at_user_insns_relative;$/;"	m	struct:PTLsimConfig
stop_timer	ooocore-amd-k8.h	41;"	d
stop_timer	ooocore-amd-k8.h	45;"	d
stop_timer	ooocore.h	42;"	d
stop_timer	ooocore.h	46;"	d
stopped	ooocore-amd-k8.h	/^    bitvec<MAX_CONTEXTS> stopped;$/;"	m	struct:OutOfOrderModel::OutOfOrderMachine
stopped	ooocore.h	/^    bitvec<MAX_CONTEXTS> stopped;$/;"	m	struct:OutOfOrderModel::OutOfOrderMachine
stoptimer	dcache.cpp	18;"	d	file:
store	dcache-amd-k8.h	/^  struct store {$/;"	s	struct:PerContextDataCacheStats
store	dcache-amd-k8.h	/^  } store;$/;"	m	struct:PerContextDataCacheStats	typeref:struct:PerContextDataCacheStats::store
store	dcache.h	/^  struct store {$/;"	s	struct:PerContextDataCacheStats
store	dcache.h	/^  } store;$/;"	m	struct:PerContextDataCacheStats	typeref:struct:PerContextDataCacheStats::store
store	ooocore-amd-k8.h	/^    W8 store:1, lfence:1, sfence:1, entry_valid:1;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
store	ooocore-amd-k8.h	/^    struct store {$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache
store	ooocore-amd-k8.h	/^    } store;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store
store	ooocore.h	/^    W8 store:1, lfence:1, sfence:1, entry_valid:1;$/;"	m	struct:OutOfOrderModel::LoadStoreQueueEntry
store	ooocore.h	/^    struct store {$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache
store	ooocore.h	/^    } store;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store
store	seqcore.cpp	/^  bool store(W64 addr, W64 data, byte bytemask) {$/;"	f	struct:TransactionalMemory
store_count	seqcore.h	/^  int store_count;$/;"	m	struct:CommitRecord
store_user_physaddr	ptlxen.h	/^void store_user_physaddr(W64 physaddr, T value) {$/;"	f
storecount	ptlhwdef.h	/^  W16 storecount;$/;"	m	struct:BasicBlockBase
storeimpl	seqcore.cpp	/^W64 TransactionalMemory<N, setcount>::storeimpl(W64 physaddr, W64 data, byte bytemask) {$/;"	f	class:TransactionalMemory
storemask	kernel.h	/^static inline W64 storemask(Waddr addr, W64 data, byte bytemask) {$/;"	f
storemask	ptlxen-memory.cpp	/^W64 storemask(Waddr physaddr, W64 data, byte bytemask) {$/;"	f
stores	logic.h	/^  BackupCacheLine stores[maxdirty];$/;"	m	struct:CommitRollbackCache
stores	seqcore.h	/^  SFR stores[MAX_STORES_IN_COMMIT_RECORD];$/;"	m	struct:CommitRecord
stores_in_flight	ooocore-amd-k8.h	/^    int stores_in_flight;$/;"	m	struct:OutOfOrderModel::ThreadContext
stores_in_flight	ooocore.h	/^    int stores_in_flight;$/;"	m	struct:OutOfOrderModel::ThreadContext
storetail	logic.h	/^  BackupCacheLine* storetail;$/;"	m	struct:CommitRollbackCache
stq_address_match	ooocore-amd-k8.h	/^        W64 stq_address_match;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
stq_address_match	ooocore.h	/^        W64 stq_address_match;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
stq_address_not_ready	ooocore-amd-k8.h	/^        W64 stq_address_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
stq_address_not_ready	ooocore.h	/^        W64 stq_address_not_ready;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::dependency
stq_full	ooocore-amd-k8.h	/^      W64 stq_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
stq_full	ooocore.h	/^      W64 stq_full;$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend::status
str	superstl.h	/^    const char* str;$/;"	m	struct:superstl::substring
strcat	klibc.cpp	/^char *strcat(char *dest, const char *src)$/;"	f
strcat	klibc.cpp	/^char* strcat(char * dest,const char * src)$/;"	f
strcat	klibc.cpp	725;"	d	file:
strcat	klibc.cpp	85;"	d	file:
strchr	klibc.cpp	/^char * strchr(const char * s, int c)$/;"	f
strchr	klibc.cpp	/^char *strchr(const char *s, int c)$/;"	f
strcmp	klibc.cpp	/^int strcmp(const char * cs,const char * ct)$/;"	f
strcmp	klibc.cpp	/^int strcmp(const char *cs, const char *ct)$/;"	f
strcmp	klibc.cpp	801;"	d	file:
strcmp	klibc.cpp	86;"	d	file:
strcpy	klibc.cpp	/^char *strcpy(char *dest, const char *src)$/;"	f
strcpy	klibc.cpp	/^char* strcpy(char * dest,const char *src)$/;"	f
strcpy	klibc.cpp	652;"	d	file:
strcpy	klibc.cpp	84;"	d	file:
strcspn	klibc.cpp	/^size_t strcspn(const char *s, const char *reject)$/;"	f
strdup	klibc.cpp	/^char* strdup(const char *s) {$/;"	f
strequal	globals.h	/^inline bool strequal(const char* a, const char* b) {$/;"	f
string	datastore.cpp	/^const char* DataStoreNode::string() const {$/;"	f	class:DataStoreNode
stringbuf	superstl.h	/^    stringbuf() { buf = null; reset(); }$/;"	f	class:superstl::stringbuf
stringbuf	superstl.h	/^    stringbuf(int length) {$/;"	f	class:superstl::stringbuf
stringbuf	superstl.h	/^  class stringbuf {$/;"	c	namespace:superstl
stringbuf_smallbufsize	superstl.h	37;"	d
stringify	globals.h	41;"	d
stringsubst	superstl.cpp	/^  int stringsubst(stringbuf& sb, const char* pattern, const char* find, const char* replace) {$/;"	f	namespace:superstl
stringsubst	superstl.cpp	/^  int stringsubst(stringbuf& sb, const char* pattern, const char* find[], const char* replace[], int substcount) {$/;"	f	namespace:superstl
strlcat	klibc.cpp	/^size_t strlcat(char *dest, const char *src, size_t count)$/;"	f
strlcpy	klibc.cpp	/^size_t strlcpy(char *dest, const char *src, size_t size)$/;"	f
strlen	klibc.cpp	/^size_t strlen(const char * s)$/;"	f
strlen	klibc.cpp	/^size_t strlen(const char *s)$/;"	f
strlen	klibc.cpp	83;"	d	file:
strncat	klibc.cpp	/^char *strncat(char *dest, const char *src, size_t count)$/;"	f
strncat	klibc.cpp	/^char* strncat(char * dest,const char * src,size_t count)$/;"	f
strnchr	klibc.cpp	/^char *strnchr(const char *s, size_t count, int c)$/;"	f
strncmp	klibc.cpp	/^int strncmp(const char * cs,const char * ct,size_t count)$/;"	f
strncmp	klibc.cpp	/^int strncmp(const char *cs, const char *ct, size_t count)$/;"	f
strncpy	klibc.cpp	/^char *strncpy(char *dest, const char *src, size_t count)$/;"	f
strncpy	klibc.cpp	/^char* strncpy(char * dest,const char *src,size_t count)$/;"	f
strndup	klibc.cpp	/^char* strndup(const char *s, size_t n) {$/;"	f
strnicmp	klibc.cpp	/^int strnicmp(const char *s1, const char *s2, size_t len)$/;"	f
strnlen	klibc.cpp	/^size_t strnlen(const char * s, size_t count)$/;"	f
strnlen	klibc.cpp	/^size_t strnlen(const char *s, size_t count)$/;"	f
stroke	ptlstats.cpp	/^  RGBA stroke;$/;"	m	class:SVGCreator	file:
stroke	ptlstats.cpp	/^  RGBAColor stroke;$/;"	m	struct:LineAttributes	file:
strokewidth	ptlstats.cpp	/^  float strokewidth;$/;"	m	class:SVGCreator	file:
strpbrk	klibc.cpp	/^char *strpbrk(const char *cs, const char *ct)$/;"	f
strput	kernel.cpp	1917;"	d	file:
strput	ptlsim.cpp	279;"	d	file:
strput	ptlxen.cpp	1958;"	d	file:
strrchr	klibc.cpp	/^char * strrchr(const char * s, int c)$/;"	f
strrchr	klibc.cpp	/^char *strrchr(const char *s, int c)$/;"	f
strsep	klibc.cpp	/^char *strsep(char **s, const char *ct)$/;"	f
strspn	klibc.cpp	/^size_t strspn(const char *s, const char *accept)$/;"	f
strstr	klibc.cpp	/^char *strstr(const char *s1, const char *s2)$/;"	f
strtod	klibc.cpp	/^extern "C" double strtod(const char* s, char **endp) {$/;"	f
sub_flag_gen_op	uopimpl.cpp	/^template <typename T> struct sub_flag_gen_op { $/;"	s	file:
sub_magnitudes	mathlib.cpp	/^  static void sub_magnitudes(const mp_no *x, const mp_no *y, mp_no *z, int p) {$/;"	f	namespace:math::mpa	file:
subcount	datastore.cpp	/^  W32 subcount;$/;"	m	struct:DataStoreNodeHeader	file:
subcount	datastore.h	/^  W32 subcount; \/\/ number of subnodes in tree$/;"	m	struct:DataStoreNodeTemplateBase
subnodes	datastore.h	/^  dynarray<DataStoreNodeTemplate*> subnodes;$/;"	m	struct:DataStoreNodeTemplate
subnodes	datastore.h	/^  hash_t* subnodes;$/;"	m	struct:DataStoreNode
subset	superstl.h	/^    template <int S> bitvec<S> subset(int i) const {$/;"	f	class:superstl::bitvec
substring	superstl.h	/^    substring() { }$/;"	f	struct:superstl::substring
substring	superstl.h	/^    substring(const char* str, int start, int length) {$/;"	f	struct:superstl::substring
substring	superstl.h	/^  DeclareStringBufToStream(substring);$/;"	v
substring	superstl.h	/^  struct substring {$/;"	s	namespace:superstl
subtract	datastore.cpp	/^void DataStoreNodeTemplate::subtract(W64*& p, W64*& psub) const {$/;"	f	class:DataStoreNodeTemplate
subtract_branch	ptlstats.cpp	/^  stringbuf subtract_branch;$/;"	m	struct:PTLstatsConfig	file:
subtract_structures	superstl.h	/^  void subtract_structures(S& d, const S& a, const S& b) {$/;"	f	namespace:superstl
sum_of_subtrees	datastore.cpp	/^DataStoreNode* DataStoreNode::sum_of_subtrees() const {$/;"	f	class:DataStoreNode
sum_of_subtrees_cache	datastore.h	/^  DataStoreNode* sum_of_subtrees_cache;$/;"	m	struct:DataStoreNode
sum_structure_fields	superstl.h	/^  T sum_structure_fields(const S& a) {$/;"	f	namespace:superstl
summable	datastore.cpp	/^  W16 isarray:1, summable:1, histogramarray:1, identical_subtrees:1, labeled_histogram:1;$/;"	m	struct:DataStoreNodeHeader	file:
summable	datastore.h	/^  W16 summable:1, histogramarray:1, identical_subtrees:1, dynamic:1, labeled_histogram:1;$/;"	m	struct:DataStoreNode
summable	datastore.h	/^  W32 histogramarray:1, labeled_histogram:1, summable:1, identical_subtrees:1;$/;"	m	struct:DataStoreNodeTemplateBase
summary	ooocore-amd-k8.h	/^    W64 summary[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
summary	ooocore.h	/^    W64 summary[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:OutOfOrderCoreStats::branchpred
summary	ooocore.h	/^    W64 summary[2]; \/\/ label: branchpred_outcome_names$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
summary	stats.h	/^  struct summary {$/;"	s	struct:PTLsimStats
summary	stats.h	/^  } summary;$/;"	m	struct:PTLsimStats	typeref:struct:PTLsimStats::summary
superstl	decode.h	/^namespace superstl {$/;"	n
superstl	superstl.cpp	/^namespace superstl {$/;"	n	file:
superstl	superstl.h	/^namespace superstl {$/;"	n
supervisor	ptlhwdef.h	/^  W32 present:1, use64:1, use32:1, supervisor:1, dpl:2;$/;"	m	struct:SegmentDescriptorCache
suppress_total_user_insn_count_updates_in_seqcore	seqcore.cpp	/^W64 suppress_total_user_insn_count_updates_in_seqcore;$/;"	v
svme	ptlhwdef.h	/^  W32 sce:1, pad1:7, lme:1, pad2:1, lma:1, nxe:1, svme:1, pad3:1, ffxsr:1, pad4:17;$/;"	m	struct:EFER
svn_revision	stats.h	/^      W64 svn_revision;$/;"	m	struct:PTLsimStats::simulator::version
svn_timestamp	stats.h	/^      char svn_timestamp[32];$/;"	m	struct:PTLsimStats::simulator::version
sw	ptlhwdef.h	/^  X87StatusWord sw;$/;"	m	struct:FXSAVEStruct
sw	ptlhwdef.h	/^  X87StatusWord sw;$/;"	m	struct:X87State
swap	globals.h	/^template <typename T> void swap(T& a, T& b) { T t = a;  a = b; b = t; }$/;"	f
swap	superstl.h	/^    bitvec<N> swap(size_t i0, size_t i1) {$/;"	f	class:superstl::bitvec
swap_context	ptlmon.cpp	/^  void swap_context(bool target_is_ptlsim) {$/;"	f	struct:XenController
swapgs	ptlxen.cpp	/^void Context::swapgs() {$/;"	f	class:Context
swapgs_base	ptlhwdef.h	/^  W64 swapgs_base;$/;"	m	struct:ContextBase
switch_page_table	ptlxen-memory.cpp	/^void switch_page_table(mfn_t mfn) {$/;"	f
switch_stack_and_jump	injectcode.cpp	/^static inline void switch_stack_and_jump(void* code, void* stack, bool use64) {$/;"	f	file:
switch_stack_and_jump_32_or_64	kernel.cpp	/^void switch_stack_and_jump_32_or_64(void* code, void* stack, bool use64) {$/;"	f
switch_to_end	oooexec.cpp	/^bool IssueQueue<size, operandcount>::switch_to_end(int slot, const tag_t* operands, const tag_t* preready) {$/;"	f	class:IssueQueue
switch_to_native	ptlxen.cpp	/^int switch_to_native(bool pause = false) {$/;"	f
switch_to_native	ptlxen.h	/^    } switch_to_native;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon107
switch_to_native_desc	kernel.cpp	/^FarJumpDescriptor switch_to_native_desc;$/;"	v
switch_to_native_restore_context	kernel.cpp	/^void switch_to_native_restore_context() {$/;"	f
switch_to_native_restore_context_64_to_32	lowlevel-64bit.S	/^switch_to_native_restore_context_64_to_32:$/;"	l
switch_to_native_restore_context_64_to_64	lowlevel-64bit.S	/^switch_to_native_restore_context_64_to_64:$/;"	l
switch_to_native_restore_context_lowlevel	lowlevel-32bit.S	/^switch_to_native_restore_context_lowlevel:$/;"	l
switch_to_native_restore_context_lowlevel	lowlevel-64bit.S	/^switch_to_native_restore_context_lowlevel:$/;"	l
switch_to_native_restore_context_temp_32_to_32	lowlevel-32bit.S	/^switch_to_native_restore_context_temp_32_to_32:$/;"	l
switch_to_native_restore_context_temp_64_or_32_func	lowlevel-64bit.S	/^switch_to_native_restore_context_temp_64_or_32_func: $/;"	l
switch_to_native_restore_context_temp_64_to_32	lowlevel-64bit.S	/^switch_to_native_restore_context_temp_64_to_32:$/;"	l
switch_to_native_restore_context_temp_64_to_64	lowlevel-64bit.S	/^switch_to_native_restore_context_temp_64_to_64:$/;"	l
switch_to_ptlsim	ptlmon.cpp	/^  void switch_to_ptlsim(bool first_time = false) {$/;"	f	struct:XenController
switch_to_sim	kernel.cpp	/^void switch_to_sim() {$/;"	f
switch_to_sim_save_context_indirect	kernel.cpp	/^FarJumpDescriptor switch_to_sim_save_context_indirect;$/;"	v
switch_to_sim_save_context_indirect	kernel.cpp	/^W64 switch_to_sim_save_context_indirect;$/;"	v
switch_to_sim_thunk	kernel.cpp	/^  SwitchToSimThunkCode switch_to_sim_thunk;$/;"	m	struct:PTLsimThunkPagePrivate	file:
synchronous_host_call	ptlxen.cpp	/^W64s synchronous_host_call(const PTLsimHostCall& call, bool spin, bool ignorerc) {$/;"	f
synth_uops_for_bb	uopimpl.cpp	/^void synth_uops_for_bb(BasicBlock& bb) {$/;"	f
synthop	ooocore-amd-k8.h	/^    uopimpl_func_t synthop;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
synthop	ooocore.h	/^    uopimpl_func_t synthop;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
synthops	ptlhwdef.h	/^  uopimpl_func_t* synthops;$/;"	m	struct:BasicBlockBase
synthops	ptlsim.h	/^  uopimpl_func_t synthops[MAX_TRANSOP_BUFFER_SIZE];$/;"	m	struct:TransOpBuffer
sys_errno	kernel.h	/^  long sys_errno;$/;"	m	class:AddressSpace
sys_gettimeofday	ptlxen.cpp	/^asmlinkage int sys_gettimeofday(struct timeval* tv, struct timezone* tz) {$/;"	f
sys_madvise	ptlmon.cpp	/^int sys_madvise(void* start, W64 length, int action) {$/;"	f
sys_mmap	ptlmon.cpp	/^void* sys_mmap(void* start, W64 length, int prot, int flags, int fd, off_t offset) {$/;"	f
sys_mmap	ptlxen.cpp	/^void* sys_mmap(void* start, size_t length, int prot, int flags, int fd, W64 offset) {$/;"	f
sys_mmap	syscalls.cpp	/^void* sys_mmap(void* start, size_t length, int prot, int flags, int fd, W64 offset) {$/;"	f
sys_mprotect	ptlmon.cpp	/^int sys_mprotect(void* start, W64 length, int prot) {$/;"	f
sys_munlock	ptlcalls.h	25;"	d
sys_munmap	ptlmon.cpp	/^int sys_munmap(void* start, W64 length) {$/;"	f
sys_nanosleep	ptlxen.cpp	/^W64 sys_nanosleep(W64 nsec) {$/;"	f
sys_nanosleep	syscalls.cpp	/^W64 sys_nanosleep(W64 nsec) {$/;"	f
sys_open	ptlxen.cpp	/^asmlinkage int sys_open(const char* pathname, int flags, int mode) {$/;"	f
sys_read	ptlxen.cpp	/^asmlinkage ssize_t sys_read(int fd, void* buf, size_t count) {$/;"	f
sys_readlink	ptlxen.cpp	/^asmlinkage int sys_readlink(const char *path, char *buf, size_t bufsiz) {$/;"	f
sys_rename	ptlxen.cpp	/^asmlinkage int sys_rename(const char* oldpath, const char* newpath) {$/;"	f
sys_seek	syscalls.cpp	/^W64 sys_seek(int fd, W64 offset, unsigned int origin) {$/;"	f
sys_time	ptlxen.cpp	/^asmlinkage time_t sys_time(time_t* t) {$/;"	f
sys_time_cycles_to_nsec_coeff	ptlhwdef.h	/^  double sys_time_cycles_to_nsec_coeff;$/;"	m	struct:ContextBase
sys_uname	ptlxen.cpp	/^asmlinkage int sys_uname(struct utsname* buf) {$/;"	f
sys_unlink	ptlxen.cpp	/^asmlinkage int sys_unlink(const char* pathname) {$/;"	f
sys_write	ptlxen.cpp	/^asmlinkage ssize_t sys_write(int fd, const void* buf, size_t count) {$/;"	f
syscall	ptlxen.h	/^    } syscall;$/;"	m	union:PTLsimHostCall::__anon99	typeref:struct:PTLsimHostCall::__anon99::__anon101
syscall_cs	ptlxen.cpp	/^  W64 syscall_target_32bit:32, syscall_cs:16, sysret_cs:16;$/;"	m	struct:STARmsr	file:
syscall_disables_events	ptlhwdef.h	/^  byte syscall_disables_events;$/;"	m	struct:ContextBase
syscall_mmap	injectcode.cpp	/^void* syscall_mmap(void* start, size_t length, int prot, int flags, int fd, unsigned long offset) {$/;"	f
syscall_names_32bit	kernel.cpp	/^const char* syscall_names_32bit[] = {"restart_syscall", "exit", "fork", "read", "write", "open", "close", "waitpid", "creat", "link", "unlink", "execve", "chdir", "time", "mknod", "chmod", "lchown", "break", "oldstat", "lseek", "getpid", "mount", "umount", "setuid", "getuid", "stime", "ptrace", "alarm", "oldfstat", "pause", "utime", "stty", "gtty", "access", "nice", "ftime", "sync", "kill", "rename", "mkdir", "rmdir", "dup", "pipe", "times", "prof", "brk", "setgid", "getgid", "signal", "geteuid", "getegid", "acct", "umount2", "lock", "ioctl", "fcntl", "mpx", "setpgid", "ulimit", "oldolduname", "umask", "chroot", "ustat", "dup2", "getppid", "getpgrp", "setsid", "sigaction", "sgetmask", "ssetmask", "setreuid", "setregid", "sigsuspend", "sigpending", "sethostname", "setrlimit", "getrlimit", "getrusage", "gettimeofday", "settimeofday", "getgroups", "setgroups", "select", "symlink", "oldlstat", "readlink", "uselib", "swapon", "reboot", "readdir", "mmap", "munmap", "truncate", "ftruncate", "fchmod", "fchown", "getpriority", "setpriority", "profil", "statfs", "fstatfs", "ioperm", "socketcall", "syslog", "setitimer", "getitimer", "stat", "lstat", "fstat", "olduname", "iopl", "vhangup", "idle", "vm86old", "wait4", "swapoff", "sysinfo", "ipc", "fsync", "sigreturn", "clone", "setdomainname", "uname", "modify_ldt", "adjtimex", "mprotect", "sigprocmask", "create_module", "init_module", "delete_module", "get_kernel_syms", "quotactl", "getpgid", "fchdir", "bdflush", "sysfs", "personality", "afs_syscall", "setfsuid", "setfsgid", "_llseek", "getdents", "_newselect", "flock", "msync", "readv", "writev", "getsid", "fdatasync", "_sysctl", "mlock", "munlock", "mlockall", "munlockall", "sched_setparam", "sched_getparam", "sched_setscheduler", "sched_getscheduler", "sched_yield", "sched_get_priority_max", "sched_get_priority_min", "sched_rr_get_interval", "nanosleep", "mremap", "setresuid", "getresuid", "vm86", "query_module", "poll", "nfsservctl", "setresgid", "getresgid", "prctl", "rt_sigreturn", "rt_sigaction", "rt_sigprocmask", "rt_sigpending", "rt_sigtimedwait", "rt_sigqueueinfo", "rt_sigsuspend", "pread64", "pwrite64", "chown", "getcwd", "capget", "capset", "sigaltstack", "sendfile", "getpmsg", "putpmsg", "vfork", "ugetrlimit", "mmap2", "truncate64", "ftruncate64", "stat64", "lstat64", "fstat64", "lchown32", "getuid32", "getgid32", "geteuid32", "getegid32", "setreuid32", "setregid32", "getgroups32", "setgroups32", "fchown32", "setresuid32", "getresuid32", "setresgid32", "getresgid32", "chown32", "setuid32", "setgid32", "setfsuid32", "setfsgid32", "pivot_root", "mincore", "madvise", "madvise1", "getdents64", "fcntl64", "<unused>", "<unused>", "gettid", "readahead", "setxattr", "lsetxattr", "fsetxattr", "getxattr", "lgetxattr", "fgetxattr", "listxattr", "llistxattr", "flistxattr", "removexattr", "lremovexattr", "fremovexattr", "tkill", "sendfile64", "futex", "sched_setaffinity", "sched_getaffinity", "set_thread_area", "get_thread_area", "io_setup", "io_destroy", "io_getevents", "io_submit", "io_cancel", "fadvise64", "<unused>", "exit_group", "lookup_dcookie", "epoll_create", "epoll_ctl", "epoll_wait", "remap_file_pages", "set_tid_address", "timer_create", "statfs64", "fstatfs64", "tgkill", "utimes", "fadvise64_64", "vserver", "mbind", "get_mempolicy", "set_mempolicy", "mq_open", "sys_kexec_load", "waitid"};$/;"	v
syscall_names_64bit	kernel.cpp	/^const char* syscall_names_64bit[] = {$/;"	v
syscall_rip	ptlhwdef.h	/^  Waddr syscall_rip;$/;"	m	struct:ContextBase
syscall_target_32bit	ptlxen.cpp	/^  W64 syscall_target_32bit:32, syscall_cs:16, sysret_cs:16;$/;"	m	struct:STARmsr	file:
syscallid	ptlxen.h	/^      W64 syscallid;$/;"	m	struct:PTLsimHostCall::__anon99::__anon101
sysenter_retaddr	kernel.cpp	/^W32 sysenter_retaddr = 0;$/;"	v
syslinkage	syscalls.h	78;"	d
syslinkage	syscalls.h	80;"	d
sysret_cs	ptlxen.cpp	/^  W64 syscall_target_32bit:32, syscall_cs:16, sysret_cs:16;$/;"	m	struct:STARmsr	file:
t0	ptlhwdef.h	/^      t0:2, s0:2, t1:2, s1:2, t2:2, s2:2, t3:2, s3:2;$/;"	m	struct:DebugReg
t1	ptlhwdef.h	/^      t0:2, s0:2, t1:2, s1:2, t2:2, s2:2, t3:2, s3:2;$/;"	m	struct:DebugReg
t2	ptlhwdef.h	/^      t0:2, s0:2, t1:2, s1:2, t2:2, s2:2, t3:2, s3:2;$/;"	m	struct:DebugReg
t3	ptlhwdef.h	/^      t0:2, s0:2, t1:2, s1:2, t2:2, s2:2, t3:2, s3:2;$/;"	m	struct:DebugReg
t576	mathlib.cpp	/^  static const mynumber  t576 = {{0x00000000, 0x63f00000}};  \/* 2 ^ 576  *\/$/;"	v	file:
table	branchpred.cpp	/^  array<byte, SIZE> table;$/;"	m	struct:BimodalPredictor	file:
table_col_names	ptlstats.cpp	/^  stringbuf table_col_names;$/;"	m	struct:PTLstatsConfig	file:
table_mark_highest_col	ptlstats.cpp	/^  W64 table_mark_highest_col;$/;"	m	struct:PTLstatsConfig	file:
table_row_col_pattern	ptlstats.cpp	/^  stringbuf table_row_col_pattern;$/;"	m	struct:PTLstatsConfig	file:
table_row_names	ptlstats.cpp	/^  stringbuf table_row_names;$/;"	m	struct:PTLstatsConfig	file:
table_scale_rel_to_col	ptlstats.cpp	/^  W64 table_scale_rel_to_col;$/;"	m	struct:PTLstatsConfig	file:
table_type_name	ptlstats.cpp	/^  stringbuf table_type_name;$/;"	m	struct:PTLstatsConfig	file:
tag	ptlhwdef.h	/^  W64 addrvalid:1, invalid:1, datavalid:1, physaddr:45, bytemask:8, tag:8;$/;"	m	struct:SFR
tag_t	ooocore-amd-k8.h	/^    typedef issueq_tag_t tag_t;$/;"	t	struct:OutOfOrderModel::IssueQueue
tag_t	ooocore.h	/^    typedef issueq_tag_t tag_t;$/;"	t	struct:OutOfOrderModel::IssueQueue
tagcount	ptlhwdef.h	/^  W16 tagcount;$/;"	m	struct:BasicBlockBase
tagof	dcache-amd-k8.h	/^    static W64 tagof(W64 addr, W64 threadid) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
tagof	dcache.h	/^    static W64 tagof(W64 addr, W64 threadid) {$/;"	f	struct:CacheSubsystem::TranslationLookasideBuffer
tagof	logic.h	/^  T tagof(V* line) {$/;"	f	struct:FullyAssociativeArray
tagof	logic.h	/^  T tagof(V* line) {$/;"	f	struct:LockableFullyAssociativeArray
tagof	logic.h	/^  static T tagof(T addr) {$/;"	f	struct:AssociativeArray
tagof	logic.h	/^  static T tagof(T addr) {$/;"	f	struct:LockableAssociativeArray
tagof	logic.h	/^  static T tagof(T addr) {$/;"	f	struct:LockableCommitRollbackAssociativeArray
tags	logic.h	/^    FullyAssociativeTagsNbitOneHot<size, width, padsize>& tags;$/;"	m	class:FullyAssociativeTagsNbitOneHot::ref
tags	logic.h	/^  FullyAssociativeTags<T, ways> tags;$/;"	m	struct:FullyAssociativeArray
tags	logic.h	/^  LockableFullyAssociativeTags<T, ways> tags;$/;"	m	struct:LockableFullyAssociativeArray
tags	logic.h	/^  T tags[ways];$/;"	m	struct:FullyAssociativeTags
tags	logic.h	/^  T tags[ways];$/;"	m	struct:LockableFullyAssociativeTags
tags	ooocore-amd-k8.h	/^    assoc_t tags[operandcount];$/;"	m	struct:OutOfOrderModel::IssueQueue
tags	ooocore.h	/^    assoc_t tags[operandcount];$/;"	m	struct:OutOfOrderModel::IssueQueue
tags	superstl.h	/^    vec16b tags;$/;"	m	struct:superstl::SearchableChunkList16Entry
tagsmirror	logic.h	/^  base_t tagsmirror[size]; \/\/ for fast scalar access$/;"	m	struct:FullyAssociativeTagsNbitOneHot
tail	logic.h	/^  int tail; \/\/ used for deallocation$/;"	m	struct:FixedQueue
tail	ooocore-amd-k8.h	/^    OutOfOrderCoreEvent* tail;$/;"	m	struct:OutOfOrderModel::EventLog
tail	ooocore.h	/^    OutOfOrderCoreEvent* tail;$/;"	m	struct:OutOfOrderModel::EventLog
tail	seqcore.cpp	/^  SequentialCoreEvent* tail;$/;"	m	struct:SequentialCoreEventLog	file:
tail	superstl.h	/^    T* tail() const {$/;"	f	class:superstl::queue
tail	superstl.h	/^    int tail;$/;"	m	class:superstl::idstream
tail	superstl.h	/^    int tail;$/;"	m	class:superstl::odstream
tail	superstl.h	/^    queuelink<T>* tail() const {$/;"	f	class:superstl::queuelink
tail	superstl.h	/^    selfqueuelink* tail() const {$/;"	f	class:superstl::selfqueuelink
tails	superstl.h	/^    T tails[Q];$/;"	m	struct:superstl::FixedIntegerQueueSet
taken	ooocore-amd-k8.h	/^        byte taken:1, predtaken:1, ld_st_truly_unaligned:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
taken	ooocore.h	/^        byte taken:1, predtaken:1, ld_st_truly_unaligned:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
tally_broadcast_matches	oooexec.cpp	/^void IssueQueue<size, operandcount>::tally_broadcast_matches(IssueQueue<size, operandcount>::tag_t sourceid, const bitvec<size>& mask, int operand) const {$/;"	f	class:IssueQueue
tan	mathlib.cpp	/^  double tan(double x) {$/;"	f	namespace:math
tan	mathlib.cpp	/^  double tan(double x) {$/;"	f	namespace:math::mpa
tanMp	mathlib.cpp	/^  static double tanMp(double x)$/;"	f	namespace:math::mpa	file:
target	branchpred.cpp	/^  W64 target;		\/\/ last destination of branch when taken$/;"	m	struct:BTBEntry	file:
target_all_operands_ready	ooocore-amd-k8.h	/^        W8  target_all_operands_ready;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_all_operands_ready	ooocore.h	/^        W8  target_all_operands_ready;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
target_cluster	ooocore-amd-k8.h	/^        W8  target_cluster;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_cluster	ooocore.h	/^        W8  target_cluster;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
target_lsq	ooocore-amd-k8.h	/^        W16 target_lsq;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_lsq	ooocore.h	/^        W16 target_lsq;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
target_operands_ready	ooocore-amd-k8.h	/^        W8  target_operands_ready;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_operands_ready	ooocore.h	/^        W8  target_operands_ready;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
target_physreg	ooocore-amd-k8.h	/^        W16 target_physreg;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_physreg	ooocore.h	/^        W16 target_physreg;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
target_rfid	ooocore-amd-k8.h	/^        W8  target_rfid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_rfid	ooocore.h	/^        W8  target_rfid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
target_rip	ooocore-amd-k8.h	/^        W64 target_rip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
target_rip	ooocore.h	/^        W64 target_rip;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
target_rob	ooocore-amd-k8.h	/^        W16 target_rob;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_rob	ooocore.h	/^        W16 target_rob;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
target_st	ooocore-amd-k8.h	/^        W8  target_st;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_st	ooocore.h	/^        W8  target_st;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
target_uuid	ooocore-amd-k8.h	/^        W64 target_uuid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon54
target_uuid	ooocore.h	/^        W64 target_uuid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon18
template_offset	datastore.h	/^  W64 template_offset;$/;"	m	struct:StatsFileHeader
template_size	datastore.h	/^  W64 template_size;$/;"	m	struct:StatsFileHeader
tempsysid	kernel.cpp	/^static W32 tempsysid;$/;"	v	file:
test	superstl.h	/^    bool test(size_t index) const {$/;"	f	class:superstl::bitvec
testclear	superstl.h	/^      bool testclear() { return x86_test_btr(*wp, bpos); }$/;"	f	class:superstl::bitvec::reference
testinv	superstl.h	/^      bool testinv() { return x86_test_btc(*wp, bpos); }$/;"	f	class:superstl::bitvec::reference
testset	superstl.h	/^      bool testset() { return x86_test_bts(*wp, bpos); }$/;"	f	class:superstl::bitvec::reference
text	cpuid.cpp	/^  char text[13];$/;"	m	union:CPUVendorID	file:
text	ptlstats.cpp	/^  void text(const char* string, float x, float y) {$/;"	f	class:SVGCreator
text	ptlxen.h	/^  char text[13];$/;"	m	union:CPUVendorID
threadcount	ooocore-amd-k8.h	/^    int threadcount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
threadcount	ooocore.h	/^    int threadcount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
threadid	dcache-amd-k8.h	/^      W8 threadid;$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
threadid	dcache-amd-k8.h	/^  W8  threadid;$/;"	m	struct:LoadStoreInfo
threadid	dcache.h	/^      W8 threadid;$/;"	m	struct:CacheSubsystem::MissBuffer::Entry
threadid	dcache.h	/^  W8  threadid;$/;"	m	struct:LoadStoreInfo
threadid	ooocore-amd-k8.h	/^        W8 threadid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
threadid	ooocore-amd-k8.h	/^    W8   threadid;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
threadid	ooocore-amd-k8.h	/^    W8 threadid;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
threadid	ooocore-amd-k8.h	/^    W8 threadid;$/;"	m	struct:OutOfOrderModel::MemoryInterlockEntry
threadid	ooocore-amd-k8.h	/^    W8 threadid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
threadid	ooocore-amd-k8.h	/^    W8 threadid;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
threadid	ooocore-amd-k8.h	/^    int threadid;$/;"	m	struct:OutOfOrderModel::ThreadContext
threadid	ooocore.h	/^        W8 threadid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
threadid	ooocore.h	/^    W8   threadid;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
threadid	ooocore.h	/^    W8 threadid;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
threadid	ooocore.h	/^    W8 threadid;$/;"	m	struct:OutOfOrderModel::MemoryInterlockEntry
threadid	ooocore.h	/^    W8 threadid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
threadid	ooocore.h	/^    W8 threadid;$/;"	m	struct:OutOfOrderModel::PhysicalRegister
threadid	ooocore.h	/^    int threadid;$/;"	m	struct:OutOfOrderModel::ThreadContext
threadid	seqcore.cpp	/^  byte threadid;$/;"	m	struct:SequentialCoreEvent	file:
threads	ooocore-amd-k8.h	/^    ThreadContext* threads[MAX_THREADS_PER_CORE];$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
threads	ooocore.h	/^    ThreadContext* threads[MAX_THREADS_PER_CORE];$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
threshold_lt_or_eq	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
throughput	stats.h	/^    struct throughput {$/;"	s	struct:PTLsimStats::decoder
throughput	stats.h	/^    } throughput;$/;"	m	struct:PTLsimStats::decoder	typeref:struct:PTLsimStats::decoder::throughput
thunk_ptr_valid	ptlmon.cpp	/^static inline bool thunk_ptr_valid(Waddr w) {$/;"	f	file:
ticks_per_update	ptlsim.cpp	/^W64 ticks_per_update;$/;"	v
ticks_to_seconds	globals.h	/^static inline double ticks_to_seconds(W64 ticks) {$/;"	f
time	ptlhwdef.h	/^  W64 time[4];$/;"	m	struct:RunstateInfo
time_and_virq_resume	ptlxen-events.cpp	/^void time_and_virq_resume() {$/;"	f
time_this_scope	ooocore-amd-k8.h	39;"	d
time_this_scope	ooocore-amd-k8.h	43;"	d
time_this_scope	ooocore.h	40;"	d
time_this_scope	ooocore.h	44;"	d
timer_cycle	ptlhwdef.h	/^  W64  timer_cycle;$/;"	m	struct:ContextBase
timer_interrupt_freq_hz	ptlsim.h	/^  W64 timer_interrupt_freq_hz;$/;"	m	struct:PTLsimConfig
timer_interrupt_last_sent_at_cycle	ptlxen-events.cpp	/^W64 timer_interrupt_last_sent_at_cycle = 0;$/;"	v
timer_interrupt_period_in_cycles	ptlxen-events.cpp	/^W64 timer_interrupt_period_in_cycles = infinity;$/;"	v
timestamp	stats.h	/^      W64 timestamp;$/;"	m	struct:PTLsimStats::simulator::run
tiny	mathlib.cpp	/^  static const double tiny = 1.0e-300;$/;"	v	file:
title	superstl.h	/^    const char* title;$/;"	m	class:superstl::CycleTimer
tlb_walk_level	ooocore-amd-k8.h	/^        W8 tlb_walk_level;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
tlb_walk_level	ooocore-amd-k8.h	/^    byte tlb_walk_level;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
tlb_walk_level	ooocore.h	/^        W8 tlb_walk_level;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
tlb_walk_level	ooocore.h	/^    byte tlb_walk_level;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
tlbwalk	dcache-amd-k8.h	/^    struct tlbwalk { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::fetch
tlbwalk	dcache-amd-k8.h	/^    struct tlbwalk { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::load
tlbwalk	dcache-amd-k8.h	/^    } tlbwalk;$/;"	m	struct:PerContextDataCacheStats::fetch	typeref:struct:PerContextDataCacheStats::fetch::tlbwalk
tlbwalk	dcache-amd-k8.h	/^    } tlbwalk;$/;"	m	struct:PerContextDataCacheStats::load	typeref:struct:PerContextDataCacheStats::load::tlbwalk
tlbwalk	dcache.h	/^    struct tlbwalk { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::fetch
tlbwalk	dcache.h	/^    struct tlbwalk { \/\/ node: summable$/;"	s	struct:PerContextDataCacheStats::load
tlbwalk	dcache.h	/^    } tlbwalk;$/;"	m	struct:PerContextDataCacheStats::fetch	typeref:struct:PerContextDataCacheStats::fetch::tlbwalk
tlbwalk	dcache.h	/^    } tlbwalk;$/;"	m	struct:PerContextDataCacheStats::load	typeref:struct:PerContextDataCacheStats::load::tlbwalk
tlbwalk	oooexec.cpp	/^void ReorderBufferEntry::tlbwalk() {$/;"	f	class:ReorderBufferEntry
tlbwalk	oooexec.cpp	/^void ThreadContext::tlbwalk() {$/;"	f	class:ThreadContext
tm24	mathlib.cpp	/^  static const mynumber  tm24 = {{0x00000000, 0x3e700000}};  \/* 2 ^- 24  *\/$/;"	v	file:
tm600	mathlib.cpp	/^  static const mynumber tm600 = {{0x00000000, 0x1a700000}};  \/* 2 ^- 600 *\/$/;"	v	file:
toascii	klibc.cpp	/^  inline int toascii(int c) { return (((unsigned char)(c))&0x7f); }$/;"	f
toint	mathlib.cpp	/^  static const mynumber toint = {{0x00000000, 0x43380000 }};\/*  6755399441055744        *\/$/;"	v	file:
toint	mathlib.cpp	/^  static const number toint = {{0x00000000, 0x43380000}}; \/*  6755399441055744       *\/$/;"	v	file:
tokenize	superstl.cpp	/^  char* dynarray<char*>::tokenize(char* string, const char* seplist) {$/;"	f	class:superstl::dynarray
tokenize	superstl.h	/^    char* tokenize(char* string, const char* seplist) { abort(); }$/;"	f	class:superstl::dynarray
tolower	klibc.cpp	/^  inline int tolower(int c) { if (isupper(c)) c -= 'A'-'a'; return c; }$/;"	f
top_of_stack	kernel.h	/^  Waddr top_of_stack;$/;"	m	class:AddressSpace
toplevel_page_table	ptlmon.cpp	/^  Level4PTE* toplevel_page_table;$/;"	m	struct:XenController	file:
toplevel_page_table	ptlxen.h	/^  Level4PTE* toplevel_page_table;$/;"	m	struct:PTLsimMonitorInfo
toplevel_page_table_mfn	ptlxen.h	/^  mfn_t toplevel_page_table_mfn;$/;"	m	struct:PTLsimMonitorInfo
tos	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
total	datastore.cpp	/^double DataStoreNode::total() const {$/;"	f	class:DataStoreNode
total	dcache-amd-k8.h	/^  PerContextDataCacheStats total;$/;"	m	struct:DataCacheStats
total	dcache.h	/^  PerContextDataCacheStats total;$/;"	m	struct:DataCacheStats
total	ooocore-amd-k8.h	/^  PerContextOutOfOrderCoreStats total;$/;"	m	struct:OutOfOrderCoreStats
total	ooocore.h	/^  PerContextOutOfOrderCoreStats total;$/;"	m	struct:OutOfOrderCoreStats
total	superstl.h	/^    W64 total;$/;"	m	class:superstl::CycleTimer
total_basic_blocks_committed	ptlsim.cpp	/^W64 total_basic_blocks_committed = 0;$/;"	v
total_free_bytes	mm.cpp	/^  size_t total_free_bytes() const {$/;"	f	struct:ExtentAllocator
total_free_bytes	mm.cpp	/^  size_t total_free_bytes() const {$/;"	f	struct:SlabAllocator
total_insns_committed	ooocore-amd-k8.h	/^    W64 total_insns_committed;$/;"	m	struct:OutOfOrderModel::ThreadContext
total_insns_committed	ooocore.h	/^    W64 total_insns_committed;$/;"	m	struct:OutOfOrderModel::ThreadContext
total_latency	dcache-amd-k8.h	/^    W64 total_latency;$/;"	m	struct:DataCacheStats::lfrq
total_latency	dcache.h	/^    W64 total_latency;$/;"	m	struct:DataCacheStats::lfrq
total_machine_pages	ptlmon.cpp	/^  W64 total_machine_pages;$/;"	m	struct:XenController	file:
total_machine_pages	ptlxen.h	/^  W64 total_machine_pages;$/;"	m	struct:PTLsimMonitorInfo
total_sum_cache	datastore.h	/^  double total_sum_cache;$/;"	m	struct:DataStoreNode
total_time	ooocore-amd-k8.h	/^    double total_time;$/;"	m	struct:OutOfOrderCoreStats::simulator
total_time	ooocore.h	/^    double total_time;$/;"	m	struct:OutOfOrderCoreStats::simulator
total_uops_committed	ooocore-amd-k8.h	/^    W64 total_uops_committed;$/;"	m	struct:OutOfOrderModel::ThreadContext
total_uops_committed	ooocore.h	/^    W64 total_uops_committed;$/;"	m	struct:OutOfOrderModel::ThreadContext
total_uops_committed	ptlsim.cpp	/^W64 total_uops_committed = 0;$/;"	v
total_uops_executed	ptlsim.cpp	/^W64 total_uops_executed = 0;$/;"	v
total_user_insns_committed	ooocore-amd-k8.h	/^        W64 total_user_insns_committed;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon56
total_user_insns_committed	ooocore.h	/^        W64 total_user_insns_committed;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon20
total_user_insns_committed	ptlsim.cpp	/^W64 total_user_insns_committed = 0;$/;"	v
toupper	klibc.cpp	/^  inline int toupper(int c) { if (islower(c)) c -= 'a'-'A'; return c; }$/;"	f
toverp	mathlib.cpp	/^  static const double toverp[75] = { \/*  2\/ PI base 24*\/$/;"	v	file:
toverp	mathlib.cpp	/^  static const double toverp[75] = {$/;"	v	file:
transactmem	seqcore.cpp	/^  TransactionalMemory<MAX_STORES_IN_COMMIT_RECORD, 16> transactmem;$/;"	m	struct:SequentialCore	file:
transbuf	decode.h	/^  TransOp transbuf[MAX_TRANSOPS_PER_USER_INSN];$/;"	m	struct:TraceDecoder
transbufcount	decode.h	/^  int transbufcount;$/;"	m	struct:TraceDecoder
transfer	dcache-amd-k8.h	/^    struct transfer { \/\/ node: summable$/;"	s	struct:DataCacheStats::load
transfer	dcache-amd-k8.h	/^    } transfer;$/;"	m	struct:DataCacheStats::load	typeref:struct:DataCacheStats::load::transfer
transfer	dcache.h	/^    struct transfer { \/\/ node: summable$/;"	s	struct:DataCacheStats::load
transfer	dcache.h	/^    } transfer;$/;"	m	struct:DataCacheStats::load	typeref:struct:DataCacheStats::load::transfer
transfer	ooocore-amd-k8.h	/^      double transfer;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
transfer	ooocore.h	/^      double transfer;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
transfer	ooopipe.cpp	/^int ThreadContext::transfer(int cluster) {$/;"	f	class:ThreadContext
transient	ooocore-amd-k8.h	/^        byte transient:1, all_consumers_sourced_from_bypass:1, no_branches_between_renamings:1, dest_renamed_before_writeback:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon55
transient	ooocore-amd-k8.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
transient	ooocore.h	/^        byte transient:1, all_consumers_sourced_from_bypass:1, no_branches_between_renamings:1, dest_renamed_before_writeback:1;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon19
transient	ooocore.h	/^    byte entry_valid:1, load_store_second_phase:1, all_consumers_off_bypass:1, dest_renamed_before_writeback:1, no_branches_between_renamings:1, transient:1, lock_acquired:1, issued:1;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
translate	decode-core.cpp	/^BasicBlock* BasicBlockCache::translate(Context& ctx, const RIPVirtPhys& rvp) {$/;"	f	class:BasicBlockCache
translate	decode-core.cpp	/^bool TraceDecoder::translate() {$/;"	f	class:TraceDecoder
translate_and_clone	decode-core.cpp	/^BasicBlock* BasicBlockCache::translate_and_clone(Context& ctx, Waddr rip) {$/;"	f	class:BasicBlockCache
translate_fcmpcc_to_x87	decode-x87.cpp	/^static const byte translate_fcmpcc_to_x87[128] = {$/;"	v	file:
translate_in_place	decode-core.cpp	/^void BasicBlockCache::translate_in_place(BasicBlock& targetbb, Context& ctx, Waddr rip) {$/;"	f	class:BasicBlockCache
transmap	kernel.h	/^  spat_t transmap;$/;"	m	class:AddressSpace
transop_histogram	decode-core.cpp	/^static int transop_histogram[MAX_TRANSOPS_PER_USER_INSN+1];$/;"	v	file:
transops	ptlhwdef.h	/^  TransOp transops[MAX_BB_UOPS*2];$/;"	m	struct:BasicBlock
trap_table	ptlxen.cpp	/^static trap_info_t trap_table[] = {$/;"	v	file:
traps	stats.h	/^    W64 traps[256]; \/\/ label: x86_exception_names$/;"	m	struct:PTLsimStats::external
trigger_mode	ptlsim.h	/^  bool trigger_mode;$/;"	m	struct:PTLsimConfig
trigger_uops	ooocore-amd-k8.h	/^      W64 trigger_uops;$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
trigger_uops	ooocore.h	/^      W64 trigger_uops;$/;"	m	struct:PerContextOutOfOrderCoreStats::dispatch::redispatch
trunc	globals.h	/^template <typename T, typename A> static inline T trunc(T x, A a) { return (T)(((T)x) & ~((T)(a-1))); }$/;"	f
trunc	mathlib.cpp	/^  double trunc(double x) {$/;"	f	namespace:math
try_acquire	superstl.h	/^    bool try_acquire() {$/;"	f	struct:superstl::Spinlock
ts	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
tsc_start	perfctrs.cpp	/^W64 tsc_start;$/;"	v
tsc_stop	perfctrs.cpp	/^W64 tsc_stop;$/;"	v
tsd	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
tstart	superstl.h	/^    W64 tstart;$/;"	m	class:superstl::CycleTimer
tw	ptlhwdef.h	/^  W16 tw;$/;"	m	struct:FXSAVEStruct
tw	ptlhwdef.h	/^  W16 tw;$/;"	m	struct:X87State
two	mathlib.cpp	/^  static const number two            = {{0x00000000, 0x40000000}}; \/*  2     *\/$/;"	v	file:
two10	mathlib.cpp	/^  static const number two10          = {{0x00000000, 0x40900000}}; \/* 2**10  *\/$/;"	v	file:
two18	mathlib.cpp	/^  static const number two18          = {{0x00000000, 0x41100000}}; \/* 2**18  *\/$/;"	v	file:
two19	mathlib.cpp	/^  static const number two19          = {{0x00000000, 0x41200000}}; \/* 2**19  *\/$/;"	v	file:
two23	mathlib.cpp	/^  static const number two23          = {{0x00000000, 0x41600000}}; \/* 2**23  *\/$/;"	v	file:
two5	mathlib.cpp	/^  static const number two5           = {{0x00000000, 0x40400000}}; \/* 2**5   *\/$/;"	v	file:
two52	mathlib.cpp	/^  static const number two52          = {{0x00000000, 0x43300000}}; \/* 2**52  *\/$/;"	v	file:
two57	mathlib.cpp	/^  static const number two57          = {{0x00000000, 0x43800000}}; \/* 2**57  *\/$/;"	v	file:
two71	mathlib.cpp	/^  static const number two71          = {{0x00000000, 0x44600000}}; \/* 2**71  *\/$/;"	v	file:
twobyte_has_modrm	decode-core.cpp	/^static const byte twobyte_has_modrm[256] = {$/;"	v	file:
twobyte_uses_SSE_prefix	decode-core.cpp	/^static const byte twobyte_uses_SSE_prefix[256] = {$/;"	v	file:
twolevel	branchpred.cpp	/^  TwoLevelPredictor<L1SIZE, L2SIZE, SHIFTWIDTH, HISTORYXOR> twolevel;$/;"	m	struct:CombinedPredictor	file:
twolevel	branchpred.h	/^  W32 ctxid:8, flags:8, bimodal:1, twolevel:1, meta:1, ras_push:1;$/;"	m	struct:PredictorUpdate
twom1032	mathlib.cpp	/^  static const number twom1032       = {{0x00000000, 0x00000400}}; \/* 2**-1032 *\/$/;"	v	file:
type	config.h	/^  int type;$/;"	m	struct:ConfigurationOption
type	datastore.cpp	/^  byte type;$/;"	m	struct:DataStoreNodeHeader	file:
type	datastore.h	/^  W16 type; \/\/ node type$/;"	m	struct:DataStoreNodeTemplateBase
type	datastore.h	/^  W16 type;$/;"	m	struct:DataStoreNode
type	decode.h	/^  int type;$/;"	m	struct:DecodedOperand
type	ooocore-amd-k8.h	/^      struct type { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load
type	ooocore-amd-k8.h	/^      struct type { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::store
type	ooocore-amd-k8.h	/^      } type;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::type
type	ooocore-amd-k8.h	/^      } type;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store::type
type	ooocore-amd-k8.h	/^    W16 type;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
type	ooocore.h	/^      struct type { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::load
type	ooocore.h	/^      struct type { \/\/ node: summable$/;"	s	struct:PerContextOutOfOrderCoreStats::dcache::store
type	ooocore.h	/^      } type;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load	typeref:struct:PerContextOutOfOrderCoreStats::dcache::load::type
type	ooocore.h	/^      } type;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store	typeref:struct:PerContextOutOfOrderCoreStats::dcache::store::type
type	ooocore.h	/^    W16 type;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
type	ptlhwdef.h	/^	W16 base1:8, type:4, s:1, dpl:2, p:1;$/;"	m	struct:SegmentDescriptor
type	ptlhwdef.h	/^  byte type:4, repblock:1, invalidblock:1, call:1, ret:1;$/;"	m	struct:BasicBlockBase
type	ptlxen.h	/^  Waddr mfn:28, type:3, pin:1;$/;"	m	struct:PageFrameType
type	seqcore.cpp	/^  byte type;$/;"	m	struct:SequentialCoreEvent	file:
typeof	globals.h	602;"	d
u16	xen-types.h	/^typedef unsigned short u16;$/;"	t
u32	xen-types.h	/^typedef unsigned int u32;$/;"	t
u64	xen-types.h	/^typedef unsigned long long u64;$/;"	t
u64	xen-types.h	/^typedef unsigned long u64;$/;"	t
u8	xen-types.h	/^typedef unsigned char u8;$/;"	t
u_char	xen-types.h	/^typedef unsigned char           u_char;$/;"	t
u_int	xen-types.h	/^typedef unsigned int            u_int;$/;"	t
u_int16_t	xen-types.h	/^typedef         __u16           u_int16_t;$/;"	t
u_int32_t	xen-types.h	/^typedef         __u32           u_int32_t;$/;"	t
u_int64_t	xen-types.h	/^typedef         __u64           u_int64_t;$/;"	t
u_int8_t	xen-types.h	/^typedef         __u8            u_int8_t;$/;"	t
u_long	xen-types.h	/^typedef unsigned long           u_long;$/;"	t
u_short	xen-types.h	/^typedef unsigned short          u_short;$/;"	t
ue	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
ue	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
uint	xen-types.h	/^typedef unsigned int            uint;$/;"	t
uint16_t	xen-types.h	/^typedef         __u16           uint16_t;$/;"	t
uint32_t	xen-types.h	/^typedef         __u32           uint32_t;$/;"	t
uint64_t	xen-types.h	/^typedef         __u64           uint64_t;$/;"	t
uint8_t	xen-types.h	/^typedef         __u8            uint8_t;$/;"	t
uipc	ooocore-amd-k8.h	/^    double uipc;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
uipc	ooocore-amd-k8.h	/^    double uipc;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue
uipc	ooocore.h	/^    double uipc;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
uipc	ooocore.h	/^    double uipc;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue
ulong	xen-types.h	/^typedef unsigned long           ulong;$/;"	t
um	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
um	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
unaligned	ooocore-amd-k8.h	/^        W64 unaligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
unaligned	ooocore-amd-k8.h	/^        W64 unaligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::type
unaligned	ooocore-amd-k8.h	/^        W64 unaligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
unaligned	ooocore-amd-k8.h	/^        W64 unaligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::type
unaligned	ooocore.h	/^        W64 unaligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::issue
unaligned	ooocore.h	/^        W64 unaligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::load::type
unaligned	ooocore.h	/^        W64 unaligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::issue
unaligned	ooocore.h	/^        W64 unaligned;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::type
unaligned	ptlhwdef.h	/^  byte size:2, extshift:2, unaligned:1;$/;"	m	struct:TransOpBase
unaligned_ldst_buf	ooocore-amd-k8.h	/^    TransOpBuffer unaligned_ldst_buf;$/;"	m	struct:OutOfOrderModel::ThreadContext
unaligned_ldst_buf	ooocore.h	/^    TransOpBuffer unaligned_ldst_buf;$/;"	m	struct:OutOfOrderModel::ThreadContext
unaligned_predictor	ooocore-amd-k8.h	/^    bitvec<UNALIGNED_PREDICTOR_SIZE> unaligned_predictor;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
unaligned_predictor	ooocore.h	/^    bitvec<UNALIGNED_PREDICTOR_SIZE> unaligned_predictor;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
unchar	xen-types.h	/^typedef unsigned char           unchar;$/;"	t
uncommitref	ooocore-amd-k8.h	/^    void uncommitref(int archreg, W8 threadid) { unref();  }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
uncommitref	ooocore.h	/^    void uncommitref(int archreg, W8 threadid) { unref();  }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
underflows	ooocore-amd-k8.h	/^      W64 underflows;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
underflows	ooocore.h	/^      W64 underflows;$/;"	m	struct:OutOfOrderCoreStats::branchpred::ras
underflows	ooocore.h	/^      W64 underflows;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred::ras
undo	logic.h	/^  void undo() {$/;"	f	struct:HistoryBuffer
unhalted_cycle_count	ptlsim.cpp	/^W64 unhalted_cycle_count = 0;$/;"	v
uniform_arch_reg_names	decode-core.cpp	/^const char* uniform_arch_reg_names[APR_COUNT] = {$/;"	v
unitmask	perfctrs.cpp	/^  W32 unitmask;$/;"	m	struct:CounterConfig	file:
unitmask	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
unlikely	globals.h	48;"	d
unlink	superstl.h	/^    T& unlink() {$/;"	f	class:superstl::queuelink
unlink	superstl.h	/^    selflistlink* unlink() {$/;"	f	class:superstl::selflistlink
unlink	superstl.h	/^    selfqueuelink& unlink() {$/;"	f	class:superstl::selfqueuelink
unlinked	superstl.h	/^    bool unlinked() const {$/;"	f	class:superstl::queuelink
unlinked	superstl.h	/^    bool unlinked() const {$/;"	f	class:superstl::selflistlink
unlinked	superstl.h	/^    bool unlinked() const {$/;"	f	class:superstl::selfqueuelink
unlock	logic.h	/^  int unlock(T tag) {$/;"	f	struct:LockableFullyAssociativeArray
unlock	logic.h	/^  void unlock(int way) { unlockedmap[way] = 1; }$/;"	f	struct:LockableFullyAssociativeTags
unlock_all	logic.h	/^  void unlock_all() {$/;"	f	struct:LockableCommitRollbackAssociativeArray
unlock_all_and_invalidate	logic.h	/^  void unlock_all_and_invalidate() {$/;"	f	struct:LockableCommitRollbackAssociativeArray
unlock_line	logic.h	/^  void unlock_line(V* line) {$/;"	f	struct:LockableFullyAssociativeArray
unlock_way	logic.h	/^  void unlock_way(int way) {$/;"	f	struct:LockableFullyAssociativeArray
unlocked	dcache-amd-k8.h	/^    static void unlocked(V& slot, W64 tag, int way) { }$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
unlocked	dcache.h	/^    static void unlocked(V& slot, W64 tag, int way) { }$/;"	f	struct:CacheSubsystem::HistogramAssociativeArrayStatisticsCollector
unlocked	logic.h	/^  static void unlocked(V& slot, T tag, int way) { }$/;"	f	struct:NullAssociativeArrayStatisticsCollector
unlockedmap	logic.h	/^  bitvec<ways> unlockedmap;$/;"	m	struct:LockableFullyAssociativeTags
unmap_address_space	ptlxen-memory.cpp	/^void unmap_address_space() {$/;"	f
unmap_level1_page_tree	ptlxen-memory.cpp	/^inline void unmap_level1_page_tree(mfn_t mfn) {$/;"	f
unmap_level2_page_tree	ptlxen-memory.cpp	/^inline void unmap_level2_page_tree(mfn_t mfn) {$/;"	f
unmap_level3_page_tree	ptlxen-memory.cpp	/^void unmap_level3_page_tree(mfn_t mfn) {$/;"	f
unmap_level4_page_tree	ptlxen-memory.cpp	/^void unmap_level4_page_tree(mfn_t mfn) {$/;"	f
unmap_page	ptlmon.cpp	/^  void unmap_page(void* virt) {$/;"	f	struct:XenController
unmap_pages	ptlmon.cpp	/^  void unmap_pages(void* virt, int count) {$/;"	f	struct:XenController
unmap_phys_page	ptlxen-memory.cpp	/^void unmap_phys_page(mfn_t mfn) {$/;"	f
unmap_phys_page_tree	ptlxen-memory.cpp	/^void unmap_phys_page_tree(mfn_t root) {$/;"	f
unmask_evtchn	ptlxen-events.cpp	/^void unmask_evtchn(int port) {$/;"	f
unpause	ptlmon.cpp	/^  int unpause() {$/;"	f	struct:XenController
unread	superstl.cpp	/^  int idstream::unread(int bytes) {$/;"	f	class:superstl::idstream
unref	ooocore-amd-k8.h	/^    void unref() {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
unref	ooocore-amd-k8.h	/^    void unref(const ReorderBufferEntry& rob, W8 threadid) { unref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
unref	ooocore.h	/^    void unref() {$/;"	f	struct:OutOfOrderModel::PhysicalRegister
unref	ooocore.h	/^    void unref(const ReorderBufferEntry& rob, W8 threadid) { unref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
unspecref	ooocore-amd-k8.h	/^    void unspecref(int archreg, W8 threadid) { unref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
unspecref	ooocore.h	/^    void unspecref(int archreg, W8 threadid) { unref(); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
uop	ooocore-amd-k8.h	/^    FetchBufferEntry uop;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
uop	ooocore-amd-k8.h	/^    TransOpBase uop;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
uop	ooocore.h	/^    FetchBufferEntry uop;$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
uop	ooocore.h	/^    TransOpBase uop;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
uop	seqcore.cpp	/^  TransOp uop;$/;"	m	struct:SequentialCoreEvent	file:
uop_executable_on_cluster	ooocore.cpp	/^  byte uop_executable_on_cluster[OP_MAX_OPCODE];$/;"	v
uop_impl_alu_and_condbranch	uopimpl.cpp	/^inline void uop_impl_alu_and_condbranch(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_andcc	uopimpl.cpp	/^void uop_impl_andcc(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_brp	uopimpl.cpp	/^void uop_impl_brp(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_bru	uopimpl.cpp	/^void uop_impl_bru(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_chk	uopimpl.cpp	/^inline void uop_impl_chk(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_chk_and	uopimpl.cpp	/^inline void uop_impl_chk_and(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_chk_sub	uopimpl.cpp	/^inline void uop_impl_chk_sub(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_collcc	uopimpl.cpp	/^void uop_impl_collcc(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_condbranch	uopimpl.cpp	/^inline void uop_impl_condbranch(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_fcmpcc	uopimpl.cpp	/^void uop_impl_fcmpcc(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_jmp	uopimpl.cpp	/^void uop_impl_jmp(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_jmp_ex	uopimpl.cpp	/^void uop_impl_jmp_ex(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_min_max	uopimpl.cpp	/^void uop_impl_min_max(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_movccr	uopimpl.cpp	/^void uop_impl_movccr(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_movrcc	uopimpl.cpp	/^void uop_impl_movrcc(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_mulhl	uopimpl.cpp	/^inline void uop_impl_mulhl(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_nop	uopimpl.cpp	/^void uop_impl_nop(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_orcc	uopimpl.cpp	/^void uop_impl_orcc(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_ornotcc	uopimpl.cpp	/^void uop_impl_ornotcc(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_permb	uopimpl.cpp	/^void uop_impl_permb(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_sel	uopimpl.cpp	/^inline void uop_impl_sel(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_sel_cmp	uopimpl.cpp	/^inline void uop_impl_sel_cmp(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_set	uopimpl.cpp	/^inline void uop_impl_set(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_set_and	uopimpl.cpp	/^inline void uop_impl_set_and(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_set_sub	uopimpl.cpp	/^inline void uop_impl_set_sub(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_vbt	uopimpl.cpp	/^void uop_impl_vbt(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_vcmp	uopimpl.cpp	/^void uop_impl_vcmp(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uop_impl_xorcc	uopimpl.cpp	/^void uop_impl_xorcc(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
uopid	seqcore.cpp	/^  byte uopid;$/;"	m	struct:SequentialCoreEvent	file:
uopids	ooocore-amd-k8.h	/^    assoc_t uopids;$/;"	m	struct:OutOfOrderModel::IssueQueue
uopids	ooocore.h	/^    assoc_t uopids;$/;"	m	struct:OutOfOrderModel::IssueQueue
uopimpl_func_t	ptlhwdef.h	/^typedef void (*uopimpl_func_t)(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags);$/;"	t
uopimpl_func_t	uopimpl.cpp	/^typedef void (*uopimpl_func_t)(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags);$/;"	t	file:
uopindex	seqcore.cpp	/^      int uopindex;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon89	file:
uopof	ooocore-amd-k8.h	/^    int uopof(int slot) const {$/;"	f	struct:OutOfOrderModel::IssueQueue
uopof	ooocore.h	/^    int uopof(int slot) const {$/;"	f	struct:OutOfOrderModel::IssueQueue
uops	ooocore-amd-k8.h	/^    W64 uops;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
uops	ooocore-amd-k8.h	/^    W64 uops;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
uops	ooocore-amd-k8.h	/^    W64 uops;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue
uops	ooocore.h	/^    W64 uops;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit
uops	ooocore.h	/^    W64 uops;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
uops	ooocore.h	/^    W64 uops;$/;"	m	struct:PerContextOutOfOrderCoreStats::issue
uops	ptlsim.h	/^  TransOp uops[MAX_TRANSOP_BUFFER_SIZE];$/;"	m	struct:TransOpBuffer
uops	stats.h	/^      W64 uops;$/;"	m	struct:PTLsimStats::decoder::throughput
uops	stats.h	/^    W64 uops;$/;"	m	struct:PTLsimStats::summary
uops_in_mode	stats.h	/^    EventsInMode uops_in_mode;$/;"	m	struct:PTLsimStats::external
upcall_port	ptlxen.h	/^  W16 upcall_port;$/;"	m	struct:PTLsimMonitorInfo
update	branchpred.cpp	/^  void update(PredictorUpdate& update, W64 branchaddr, W64 target) {$/;"	f	struct:CombinedPredictor
update	branchpred.cpp	/^void BranchPredictorInterface::update(PredictorUpdate& update, W64 branchaddr, W64 target) {$/;"	f	class:BranchPredictorInterface
update	kernel.h	/^inline RIPVirtPhys& RIPVirtPhys::update(Context& ctx, int bytes) {$/;"	f	class:RIPVirtPhys
update	logic.h	/^  void update(int index, base_t tag) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
update	ptlxen-memory.cpp	/^RIPVirtPhys& RIPVirtPhys::update(Context& ctx, int bytes) {$/;"	f	class:RIPVirtPhys
update	seqcore.cpp	/^  int update(CommitRecord& cmtrec) {$/;"	f	struct:TransactionalMemory
update	superstl.h	/^    inline W32 update(byte value) {$/;"	f	struct:superstl::CRC32
update	superstl.h	/^    inline W32 update(byte* data, int count) {$/;"	f	struct:superstl::CRC32
update_assist_stats	decode-core.cpp	/^void update_assist_stats(assist_func_t assist) {$/;"	f
update_highest_count	superstl.h	/^    int update_highest_count() {$/;"	f	struct:superstl::BitmapAllocator3Level
update_phys_pte	ptlxen-memory.cpp	/^int update_phys_pte(Waddr dest, const T& src) {$/;"	f
update_phys_pte_mfn_and_slot	ptlxen.h	/^static inline int update_phys_pte_mfn_and_slot(mfn_t mfn, int slot, const T& src) {$/;"	f
update_pre_run_stats	ptlxen.cpp	/^void update_pre_run_stats() {$/;"	f
update_progress	ptlsim.cpp	/^void update_progress() {$/;"	f
update_pte_acc_dirty	ptlhwdef.h	/^  void update_pte_acc_dirty(W64 rawvirt, const PTEUpdate& update) { }$/;"	f	struct:Context
update_pte_acc_dirty	ptlhwdef.h	/^  void update_pte_acc_dirty(W64 rawvirt, const PTEUpdate& update) {$/;"	f	struct:Context
update_ptl_pte	ptlxen.h	/^static inline int update_ptl_pte(T& dest, const T& src) {$/;"	f
update_ptl_virt	ptlxen-memory.cpp	/^int update_ptl_virt(void* ptr, const Level1PTE& pte) {$/;"	f
update_shadow_segment_descriptors	kernel.cpp	/^void Context::update_shadow_segment_descriptors() {$/;"	f	class:Context
update_stats	ooocore.cpp	/^void OutOfOrderMachine::update_stats(PTLsimStats& stats) {$/;"	f	class:OutOfOrderMachine
update_stats	ptlsim.cpp	/^void PTLsimMachine::update_stats(PTLsimStats& stats) { return; }$/;"	f	class:PTLsimMachine
update_stats	seqcore.cpp	/^  virtual void update_stats(PTLsimStats& stats) {$/;"	f	struct:SequentialMachine
update_time	ptlxen-events.cpp	/^void update_time() {$/;"	f
updateras	branchpred.cpp	/^  void updateras(PredictorUpdate& predinfo, W64 rip) {$/;"	f	struct:CombinedPredictor
updateras	branchpred.cpp	/^void BranchPredictorInterface::updateras(PredictorUpdate& predinfo, W64 branchaddr) {$/;"	f	class:BranchPredictorInterface
updates	ooocore-amd-k8.h	/^    W64 updates;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
updates	ooocore.h	/^    W64 updates;$/;"	m	struct:OutOfOrderCoreStats::branchpred
updates	ooocore.h	/^    W64 updates;$/;"	m	struct:PerContextOutOfOrderCoreStats::branchpred
us	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, pat:1, g:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level1PTE
us	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, d:1, psz:1, mbz:1, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level2PTE
us	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level3PTE
us	ptlhwdef.h	/^  W64 p:1, rw:1, us:1, pwt:1, pcd:1, a:1, ign:1, mbz:2, avl:3, mfn:40, avlhi:11, nx:1;$/;"	m	struct:Level4PTE
us	ptlhwdef.h	/^  byte p:1, rw:1, us:1, rsv:1, nx:1, pad:3;$/;"	m	struct:PageFaultErrorCode
use	logic.h	/^  void use(int way) {$/;"	f	struct:FullyAssociativeTags
use	logic.h	/^  void use(int way) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
use	logic.h	/^  void use(int way) {$/;"	f	struct:LockableFullyAssociativeTags
use	ptlhwdef.h	/^  void use(W64 counter) { lastused = counter; };$/;"	f	struct:BasicBlock
use32	ptlhwdef.h	/^    } use32;$/;"	m	union:FXSAVEStruct::__anon120	typeref:struct:FXSAVEStruct::__anon120::__anon121
use32	ptlhwdef.h	/^  W32 present:1, use64:1, use32:1, supervisor:1, dpl:2;$/;"	m	struct:SegmentDescriptorCache
use32	ptlhwdef.h	/^  byte use32; \/\/ depends on active CS descriptor$/;"	m	struct:ContextBase
use64	decode.h	/^  byte use64;$/;"	m	struct:TraceDecoder
use64	ptlhwdef.h	/^    } use64;$/;"	m	union:FXSAVEStruct::__anon120	typeref:struct:FXSAVEStruct::__anon120::__anon122
use64	ptlhwdef.h	/^  W32 present:1, use64:1, use32:1, supervisor:1, dpl:2;$/;"	m	struct:SegmentDescriptorCache
use64	ptlhwdef.h	/^  W64 mfnlo:28, use64:1, kernel:1, padlo:2, mfnhi:28, df:1, padhi:3;$/;"	m	struct:RIPVirtPhysBase
use64	ptlhwdef.h	/^  byte use64; \/\/ depends on active CS descriptor$/;"	m	struct:ContextBase
use_percents	ptlstats.cpp	/^  bool use_percents;$/;"	m	struct:PTLstatsConfig	file:
useable	kernel.cpp	/^  W32 useable:1;$/;"	m	struct:user_desc_32bit	file:
used_microcode_assist	decode.h	/^  bool used_microcode_assist;$/;"	m	struct:TraceDecoder
usedregs	ptlhwdef.h	/^  W64 usedregs;$/;"	m	struct:BasicBlockBase
user	ptlxen.h	/^  W32 event:8, unitmask:8, user:1, kernel:1, edge:1, pinctl:1, interrupt:1, dummy0:1, enabled:1, threshold_lt_or_eq:1, events_per_cycle_threshold:8;$/;"	m	struct:PerfEvtSelMSR
user32	stats.h	/^  W64 user32;$/;"	m	struct:EventsInMode
user64	stats.h	/^  W64 user64;$/;"	m	struct:EventsInMode
user_commits_per_sec	stats.h	/^        double user_commits_per_sec;$/;"	m	struct:PTLsimStats::simulator::performance::rate
user_desc_32bit	kernel.cpp	/^struct user_desc_32bit {$/;"	s	file:
user_insn_count	decode.h	/^  W64 user_insn_count;$/;"	m	struct:TraceDecoder
user_insn_count	ptlhwdef.h	/^  W16 user_insn_count;$/;"	m	struct:BasicBlockBase
user_insns	ooocore-amd-k8.h	/^    W64 user_insns;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
user_insns	ooocore.h	/^    W64 user_insns;$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
user_process_terminated	kernel.cpp	/^void user_process_terminated(int rc) {$/;"	f
user_ptbase_mfn	ptlhwdef.h	/^  Waddr kernel_ptbase_mfn, user_ptbase_mfn;$/;"	m	struct:ContextBase
user_runstate	ptlhwdef.h	/^  RunstateInfo* user_runstate;$/;"	m	struct:ContextBase
ushort	xen-types.h	/^typedef unsigned short          ushort;$/;"	t
uuid	branchpred.h	/^  W32 uuid;$/;"	m	struct:ReturnAddressStackEntry
uuid	branchpred.h	/^  W64 uuid;$/;"	m	struct:PredictorUpdate
uuid	datastore.h	/^  W64 uuid;$/;"	m	struct:StatsIndexRecordLink
uuid	ooocore-amd-k8.h	/^    W32 uuid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
uuid	ooocore-amd-k8.h	/^    W32 uuid;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
uuid	ooocore-amd-k8.h	/^    W64 uuid;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
uuid	ooocore-amd-k8.h	/^    W64 uuid;$/;"	m	struct:OutOfOrderModel::MemoryInterlockEntry
uuid	ooocore.h	/^    W32 uuid;$/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent
uuid	ooocore.h	/^    W32 uuid;$/;"	m	struct:OutOfOrderModel::PhysicalRegisterOperandInfo
uuid	ooocore.h	/^    W64 uuid;$/;"	m	struct:OutOfOrderModel::FetchBufferEntry
uuid	ooocore.h	/^    W64 uuid;$/;"	m	struct:OutOfOrderModel::MemoryInterlockEntry
uuid	ptlmon.cpp	/^  W64 uuid;$/;"	m	struct:PendingRequest	file:
uuid	ptlxen.h	/^      W64 uuid;$/;"	m	struct:PTLsimHostCall::__anon99::__anon103
uuid	seqcore.cpp	/^  W32 uuid;$/;"	m	struct:SequentialCoreEvent	file:
uuid_limit	ptlxen.h	/^      W64 uuid_limit;$/;"	m	struct:PTLsimHostCall::__anon99::__anon105
uuid_of_name	datastore.cpp	/^W64s StatsFileReader::uuid_of_name(const char* name) {$/;"	f	class:StatsFileReader
v	superstl.h	/^    const T* v;$/;"	m	struct:superstl::SortPrecomputedIndexListComparator
v16qi	globals.h	/^typedef byte v16qi __attribute__ ((vector_size(16)));$/;"	t
v2df	globals.h	/^typedef float v2df __attribute__ ((vector_size(16)));$/;"	t
v4sf	globals.h	/^typedef float v4sf __attribute__ ((vector_size(16)));$/;"	t
v4si	globals.h	/^typedef W32 v4si __attribute__ ((vector_size(16)));$/;"	t
v8hi	globals.h	/^typedef W16 v8hi __attribute__ ((vector_size(16)));$/;"	t
v_mode	decode.h	/^enum { b_mode, v_mode, w_mode, d_mode, q_mode, x_mode, dq_mode };$/;"	e	enum:__anon140
valid	dcache-amd-k8.h	/^    bitvec<linesize> valid;$/;"	m	struct:CacheSubsystem::CacheLineWithValidMask
valid	dcache.h	/^    bitvec<linesize> valid;$/;"	m	struct:CacheSubsystem::CacheLineWithValidMask
valid	logic.h	/^  bitvec<size> valid;$/;"	m	struct:FullyAssociativeTags16bit
valid	logic.h	/^  bitvec<size> valid;$/;"	m	struct:FullyAssociativeTags8bit
valid	logic.h	/^  bitvec<size> valid;$/;"	m	struct:FullyAssociativeTagsNbitOneHot
valid	ooocore-amd-k8.h	/^    bitvec<size> valid;$/;"	m	struct:OutOfOrderModel::IssueQueue
valid	ooocore-amd-k8.h	/^    bool valid() const { return ((flags & FLAG_INV) == 0); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
valid	ooocore.h	/^    bitvec<size> valid;$/;"	m	struct:OutOfOrderModel::IssueQueue
valid	ooocore.h	/^    bool valid() const { return ((flags & FLAG_INV) == 0); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
valid	superstl.h	/^    W16 valid;$/;"	m	struct:superstl::SearchableChunkList16Entry
valid_byte_count	decode.h	/^  int valid_byte_count;$/;"	m	struct:TraceDecoder
validate	branchpred.h	/^  void validate() { }$/;"	f	struct:ReturnAddressStackEntry
validate	dcache-amd-k8.h	/^    L1CacheLine* validate(W64 addr, const bitvec<L1_LINE_SIZE>& valid) {$/;"	f	struct:CacheSubsystem::L1Cache
validate	dcache-amd-k8.h	/^    L1ICacheLine* validate(W64 addr, const bitvec<L1I_LINE_SIZE>& valid) {$/;"	f	struct:CacheSubsystem::L1ICache
validate	dcache-amd-k8.h	/^    L3CacheLine* validate(W64 addr) {$/;"	f	struct:CacheSubsystem::L3Cache
validate	dcache-amd-k8.h	/^    void validate(W64 addr) {$/;"	f	struct:CacheSubsystem::L2Cache
validate	dcache.h	/^    L1CacheLine* validate(W64 addr, const bitvec<L1_LINE_SIZE>& valid) {$/;"	f	struct:CacheSubsystem::L1Cache
validate	dcache.h	/^    L1ICacheLine* validate(W64 addr, const bitvec<L1I_LINE_SIZE>& valid) {$/;"	f	struct:CacheSubsystem::L1ICache
validate	dcache.h	/^    L3CacheLine* validate(W64 addr) {$/;"	f	struct:CacheSubsystem::L3Cache
validate	dcache.h	/^    void validate(W64 addr) {$/;"	f	struct:CacheSubsystem::L2Cache
validate	mm.cpp	/^    bool validate() {$/;"	f	struct:SlabAllocator::PageHeader
validate	mm.cpp	/^  bool validate() {$/;"	f	struct:SlabAllocator
validate	ooocore-amd-k8.h	/^    void validate() { entry_valid = 1; }$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
validate	ooocore-amd-k8.h	/^    void validate() { entry_valid = true; }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
validate	ooocore-amd-k8.h	/^    void validate() { }$/;"	f	struct:OutOfOrderModel::FetchBufferEntry
validate	ooocore.h	/^    void validate() { entry_valid = 1; }$/;"	f	struct:OutOfOrderModel::LoadStoreQueueEntry
validate	ooocore.h	/^    void validate() { entry_valid = true; }$/;"	f	struct:OutOfOrderModel::ReorderBufferEntry
validate	ooocore.h	/^    void validate() { }$/;"	f	struct:OutOfOrderModel::FetchBufferEntry
validateslot	logic.h	/^  void validateslot(int index) {$/;"	f	struct:FullyAssociativeTagsNbitOneHot
validation_start_cycle	ptlsim.h	/^  W64 validation_start_cycle;$/;"	m	struct:PTLsimConfig
value	datastore.h	/^    DataType value;$/;"	m	union:DataStoreNode::__anon152
value	globals.h	/^  static const W64 value =$/;"	m	struct:constbits
value	globals.h	/^template <> struct lg10<0> { static const int value = 0; };$/;"	m	struct:lg10
value	globals.h	/^template <> struct lg10<1> { static const int value = 0; };$/;"	m	struct:lg10
value	globals.h	/^template <> struct lg<1> { static const int value = 0; };$/;"	m	struct:lg
value	globals.h	/^template <int n> struct lg { static const int value = 1 + lg<n\/2>::value; };$/;"	m	struct:lg
value	globals.h	/^template <int n> struct lg10 { static const int value = 1 + lg10<n\/10>::value; };$/;"	m	struct:lg10
value	mathlib.cpp	/^  double value;$/;"	m	union:math::__anon78	file:
value	ptlxen.h	/^      W64 value;$/;"	m	struct:PTLsimHostCall::__anon99::__anon106
value	superstl.h	/^    T value;$/;"	m	struct:superstl::KeyValuePair
value	superstl.h	/^    W64 value;$/;"	m	struct:superstl::hexstring
value	superstl.h	/^    W64s value;$/;"	m	struct:superstl::intstring
value	superstl.h	/^    const char* value;$/;"	m	struct:superstl::padstring
value	superstl.h	/^    double value;$/;"	m	struct:superstl::floatstring
values	datastore.h	/^    DataType* values;$/;"	m	union:DataStoreNode::__anon152
varreg	decode-core.cpp	/^bool DecodedOperand::varreg(TraceDecoder& state, int regcode, bool def64) {$/;"	f	class:DecodedOperand
varreg_def32	decode-core.cpp	/^bool DecodedOperand::varreg_def32(TraceDecoder& state, int regcode) {$/;"	f	class:DecodedOperand
varreg_def64	decode-core.cpp	/^bool DecodedOperand::varreg_def64(TraceDecoder& state, int regcode) {$/;"	f	class:DecodedOperand
vcpu0	dcache-amd-k8.h	/^  PerContextDataCacheStats vcpu0;$/;"	m	struct:DataCacheStats
vcpu0	dcache.h	/^  PerContextDataCacheStats vcpu0;$/;"	m	struct:DataCacheStats
vcpu0	ooocore-amd-k8.h	/^  PerContextOutOfOrderCoreStats vcpu0;$/;"	m	struct:OutOfOrderCoreStats
vcpu0	ooocore.h	/^  PerContextOutOfOrderCoreStats vcpu0;$/;"	m	struct:OutOfOrderCoreStats
vcpu1	dcache-amd-k8.h	/^  PerContextDataCacheStats vcpu1;$/;"	m	struct:DataCacheStats
vcpu1	dcache.h	/^  PerContextDataCacheStats vcpu1;$/;"	m	struct:DataCacheStats
vcpu1	ooocore-amd-k8.h	/^  PerContextOutOfOrderCoreStats vcpu1;$/;"	m	struct:OutOfOrderCoreStats
vcpu1	ooocore.h	/^  PerContextOutOfOrderCoreStats vcpu1;$/;"	m	struct:OutOfOrderCoreStats
vcpu10	dcache.h	/^  PerContextDataCacheStats vcpu10;$/;"	m	struct:DataCacheStats
vcpu11	dcache.h	/^  PerContextDataCacheStats vcpu11;$/;"	m	struct:DataCacheStats
vcpu12	dcache.h	/^  PerContextDataCacheStats vcpu12;$/;"	m	struct:DataCacheStats
vcpu13	dcache.h	/^  PerContextDataCacheStats vcpu13;$/;"	m	struct:DataCacheStats
vcpu14	dcache.h	/^  PerContextDataCacheStats vcpu14;$/;"	m	struct:DataCacheStats
vcpu15	dcache.h	/^  PerContextDataCacheStats vcpu15;$/;"	m	struct:DataCacheStats
vcpu16	dcache.h	/^  PerContextDataCacheStats vcpu16;$/;"	m	struct:DataCacheStats
vcpu17	dcache.h	/^  PerContextDataCacheStats vcpu17;$/;"	m	struct:DataCacheStats
vcpu18	dcache.h	/^  PerContextDataCacheStats vcpu18;$/;"	m	struct:DataCacheStats
vcpu19	dcache.h	/^  PerContextDataCacheStats vcpu19;$/;"	m	struct:DataCacheStats
vcpu2	dcache-amd-k8.h	/^  PerContextDataCacheStats vcpu2;$/;"	m	struct:DataCacheStats
vcpu2	dcache.h	/^  PerContextDataCacheStats vcpu2;$/;"	m	struct:DataCacheStats
vcpu2	ooocore-amd-k8.h	/^  PerContextOutOfOrderCoreStats vcpu2;$/;"	m	struct:OutOfOrderCoreStats
vcpu2	ooocore.h	/^  PerContextOutOfOrderCoreStats vcpu2;$/;"	m	struct:OutOfOrderCoreStats
vcpu20	dcache.h	/^  PerContextDataCacheStats vcpu20;$/;"	m	struct:DataCacheStats
vcpu21	dcache.h	/^  PerContextDataCacheStats vcpu21;$/;"	m	struct:DataCacheStats
vcpu22	dcache.h	/^  PerContextDataCacheStats vcpu22;$/;"	m	struct:DataCacheStats
vcpu23	dcache.h	/^  PerContextDataCacheStats vcpu23;$/;"	m	struct:DataCacheStats
vcpu24	dcache.h	/^  PerContextDataCacheStats vcpu24;$/;"	m	struct:DataCacheStats
vcpu25	dcache.h	/^  PerContextDataCacheStats vcpu25;$/;"	m	struct:DataCacheStats
vcpu26	dcache.h	/^  PerContextDataCacheStats vcpu26;$/;"	m	struct:DataCacheStats
vcpu27	dcache.h	/^  PerContextDataCacheStats vcpu27;$/;"	m	struct:DataCacheStats
vcpu28	dcache.h	/^  PerContextDataCacheStats vcpu28;$/;"	m	struct:DataCacheStats
vcpu29	dcache.h	/^  PerContextDataCacheStats vcpu29;$/;"	m	struct:DataCacheStats
vcpu3	dcache-amd-k8.h	/^  PerContextDataCacheStats vcpu3;$/;"	m	struct:DataCacheStats
vcpu3	dcache.h	/^  PerContextDataCacheStats vcpu3;$/;"	m	struct:DataCacheStats
vcpu3	ooocore-amd-k8.h	/^  PerContextOutOfOrderCoreStats vcpu3;$/;"	m	struct:OutOfOrderCoreStats
vcpu3	ooocore.h	/^  PerContextOutOfOrderCoreStats vcpu3;$/;"	m	struct:OutOfOrderCoreStats
vcpu30	dcache.h	/^  PerContextDataCacheStats vcpu30;$/;"	m	struct:DataCacheStats
vcpu31	dcache.h	/^  PerContextDataCacheStats vcpu31;$/;"	m	struct:DataCacheStats
vcpu4	dcache.h	/^  PerContextDataCacheStats vcpu4;$/;"	m	struct:DataCacheStats
vcpu5	dcache.h	/^  PerContextDataCacheStats vcpu5;$/;"	m	struct:DataCacheStats
vcpu6	dcache.h	/^  PerContextDataCacheStats vcpu6;$/;"	m	struct:DataCacheStats
vcpu7	dcache.h	/^  PerContextDataCacheStats vcpu7;$/;"	m	struct:DataCacheStats
vcpu8	dcache.h	/^  PerContextDataCacheStats vcpu8;$/;"	m	struct:DataCacheStats
vcpu9	dcache.h	/^  PerContextDataCacheStats vcpu9;$/;"	m	struct:DataCacheStats
vcpu_count	ptlmon.cpp	/^  int vcpu_count;$/;"	m	struct:XenController	file:
vcpu_count	ptlxen.h	/^  byte vcpu_count;$/;"	m	struct:PTLsimMonitorInfo
vcpu_ctx_initialized	ptlxen.h	/^  W64  vcpu_ctx_initialized;$/;"	m	struct:PTLsimMonitorInfo
vcpu_online_count	ptlmon.cpp	/^  int vcpu_online_count;$/;"	m	struct:XenController	file:
vcpu_online_map_changed	ptlxen-events.cpp	/^bool vcpu_online_map_changed = 0;$/;"	v
vcpu_startup_complete_bitmap	ptlxen.cpp	/^W64 vcpu_startup_complete_bitmap = 1;$/;"	v
vcpu_startup_signal_bitmap	ptlxen.cpp	/^W64 vcpu_startup_signal_bitmap = 1;$/;"	v
vcpuid	ooocore-amd-k8.h	/^    byte vcpuid;$/;"	m	struct:OutOfOrderModel::MemoryInterlockEntry
vcpuid	ooocore.h	/^    byte vcpuid;$/;"	m	struct:OutOfOrderModel::MemoryInterlockEntry
vcpuid	ptlhwdef.h	/^  int vcpuid;$/;"	m	struct:ContextBase
vec16b	globals.h	/^typedef v16qi vec16b;$/;"	t
vec2d	globals.h	/^typedef v2df vec2d;$/;"	t
vec4f	globals.h	/^typedef v4sf vec4f;$/;"	t
vec4i	globals.h	/^typedef v4si vec4i;$/;"	t
vec8w	globals.h	/^typedef v8hi vec8w;$/;"	t
vec_make_sorting_permute_map	superstl.h	/^  static inline void vec_make_sorting_permute_map(I* permute, T* list) {$/;"	f	namespace:superstl
vec_min_index	superstl.h	/^  static inline T vec_min_index(T* list, const bitvec<size>& include) {$/;"	f	namespace:superstl
vec_t	logic.h	/^  typedef vec16b vec_t;$/;"	t	struct:FullyAssociativeTags8bit
vec_t	logic.h	/^  typedef vec16b vec_t;$/;"	t	struct:FullyAssociativeTagsNbitOneHot
vec_t	logic.h	/^  typedef vec8w vec_t;$/;"	t	struct:FullyAssociativeTags16bit
vec_t	ooocore-amd-k8.h	/^    typedef vec8w vec_t;$/;"	t	struct:OutOfOrderModel::IssueQueue
vec_t	ooocore.h	/^    typedef vec8w vec_t;$/;"	t	struct:OutOfOrderModel::IssueQueue
version	stats.h	/^    struct version {$/;"	s	struct:PTLsimStats::simulator
version	stats.h	/^    } version;$/;"	m	struct:PTLsimStats::simulator	typeref:struct:PTLsimStats::simulator::version
virq_to_port	ptlhwdef.h	/^  W16s virq_to_port[32];$/;"	m	struct:ContextBase
virt_addr_mask	ptlhwdef.h	/^  Waddr virt_addr_mask;$/;"	m	struct:ContextBase
virt_is_inside_physmap	ptlxen.h	47;"	d
virt_is_inside_ptlsim	ptlxen.h	46;"	d
virt_to_host_pte	ptlxen-memory.cpp	/^Level1PTE Context::virt_to_host_pte(W64 rawvirt) {$/;"	f	class:Context
virt_to_pfn	ptlmon.cpp	622;"	d	file:
virt_to_pte	ptlxen-memory.cpp	/^Level1PTE Context::virt_to_pte(W64 rawvirt) {$/;"	f	class:Context
virt_to_pte_phys_addr	ptlxen-memory.cpp	/^Waddr Context::virt_to_pte_phys_addr(W64 rawvirt, int level) {$/;"	f	class:Context
virt_to_pte_phys_addr	ptlxen-memory.cpp	/^Waddr virt_to_pte_phys_addr(W64 toplevel_mfn, W64 rawvirt, int level = 0) {$/;"	f
virt_to_pte_span	ptlxen-memory.cpp	/^int Context::virt_to_pte_span(Level1PTE* destptes, W64 virtaddr, int pagecount) {$/;"	f	class:Context
virtaddr	cpuid.cpp	/^  W64 virtaddr;$/;"	m	struct:DescriptorTablePointer	file:
virtaddr	ooocore-amd-k8.h	/^        W64 virtaddr; $/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon51
virtaddr	ooocore.h	/^        W64 virtaddr; $/;"	m	struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon15
virtaddr	ptlxen.cpp	/^  W64 virtaddr;$/;"	m	struct:DescriptorTablePointer	file:
virtaddr	seqcore.cpp	/^      W64 virtaddr;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon88	file:
virtaddr	seqcore.cpp	/^      W64 virtaddr;$/;"	m	struct:SequentialCoreEvent::__anon86::__anon91	file:
virtpage	ooocore-amd-k8.h	/^    Waddr virtpage; \/\/ virtual page number actually accessed by the load or store$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
virtpage	ooocore.h	/^    Waddr virtpage; \/\/ virtual page number actually accessed by the load or store$/;"	m	struct:OutOfOrderModel::ReorderBufferEntry
virtualize_time_for_native_mode	ptlxen-events.cpp	/^void virtualize_time_for_native_mode() {$/;"	f
vm_assist	ptlhwdef.h	/^  Waddr vm_assist;$/;"	m	struct:ContextBase
vme	ptlhwdef.h	/^  W64 vme:1, pvi:1, tsd:1, de:1, pse:1, pae:1, mce:1, pge:1, pce:1, osfxsr:1, osxmmexcpt:1, res11:53;$/;"	m	struct:CR4
vscnprintf	klibc.cpp	/^int vscnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
vsnprintf	klibc.cpp	/^int vsnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
vsscanf	klibc.cpp	/^int vsscanf(const char * buf, const char * fmt, va_list args)$/;"	f
w	datastore.h	/^    W64s w;$/;"	m	union:DataStoreNode::DataType
w	globals.h	/^  W64 w;$/;"	m	union:W64orDouble
w	globals.h	/^union W32orFloat { W32 w; float f; };$/;"	m	union:W32orFloat
w	superstl.h	/^    T w;$/;"	m	struct:superstl::bitvecbase
w	superstl.h	/^    T w[N];$/;"	m	struct:superstl::bitvecbase
w32	ptlhwdef.h	/^  struct { W32 lo, hi; } w32;$/;"	m	union:SSEType	typeref:struct:SSEType::__anon119
w64	ptlhwdef.h	/^  W64 w64;$/;"	m	union:SSEType
w_mode	decode.h	/^enum { b_mode, v_mode, w_mode, d_mode, q_mode, x_mode, dq_mode };$/;"	e	enum:__anon140
wait_for_secondary_vcpus	ptlxen.cpp	/^void wait_for_secondary_vcpus() {$/;"	f
waiting	dcache-amd-k8.h	/^    bitvec<size> waiting;                    \/\/ Waiting for the line to arrive in the L1$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
waiting	dcache.h	/^    bitvec<size> waiting;                    \/\/ Waiting for the line to arrive in the L1$/;"	m	struct:CacheSubsystem::LoadFillReqQueue
waiting_for_icache_fill	ooocore-amd-k8.h	/^    bool waiting_for_icache_fill;$/;"	m	struct:OutOfOrderModel::ThreadContext
waiting_for_icache_fill	ooocore.h	/^    bool waiting_for_icache_fill;$/;"	m	struct:OutOfOrderModel::ThreadContext
waiting_for_icache_fill_physaddr	ooocore.h	/^    Waddr waiting_for_icache_fill_physaddr;$/;"	m	struct:OutOfOrderModel::ThreadContext
wakeup	dcache.cpp	/^void LoadFillReqQueue<size>::wakeup(W64 address, const bitvec<LFRQ_SIZE>& lfrqmask) {$/;"	f	class:LoadFillReqQueue
wakeup_ptlsim	ptlmon.cpp	/^  void wakeup_ptlsim() {$/;"	f	struct:XenController
wakeups	dcache-amd-k8.h	/^    W64 wakeups;$/;"	m	struct:DataCacheStats::lfrq
wakeups	dcache.h	/^    W64 wakeups;$/;"	m	struct:DataCacheStats::lfrq
warned_about_x87	decode-x87.cpp	/^W64 warned_about_x87 = 0;$/;"	v
way	logic.h	/^    W16 way;$/;"	m	struct:LockableCommitRollbackAssociativeArray::ClearList
wayof	logic.h	/^  int wayof(const V* line) const {$/;"	f	struct:FullyAssociativeArray
wayof	logic.h	/^  int wayof(const V* line) const {$/;"	f	struct:LockableFullyAssociativeArray
ways	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:4, ways:4, size:16; } fields;$/;"	m	struct:L2CacheInfo::__anon36	file:
ways	cpuid.cpp	/^  struct { W32 linesize:8, linespertag:8, ways:8, size:8; } fields;$/;"	m	struct:CacheInfo::__anon35	file:
wc_nsec	ptlxen-events.cpp	/^  W64 wc_nsec;$/;"	m	struct:RealTimeInfo	file:
wc_sec	ptlxen-events.cpp	/^  W64 wc_sec;$/;"	m	struct:RealTimeInfo	file:
where	superstl.cpp	/^  W64 idstream::where() const {$/;"	f	class:superstl::idstream
where	superstl.cpp	/^  W64 odstream::where() const {$/;"	f	class:superstl::odstream
width	dcache-amd-k8.h	/^    W64 width[CacheSubsystem::MAX_WAKEUPS_PER_CYCLE+1]; \/\/ histo: 0, CacheSubsystem::MAX_WAKEUPS_PER_CYCLE+1, 1$/;"	m	struct:DataCacheStats::lfrq
width	dcache.h	/^    W64 width[CacheSubsystem::MAX_WAKEUPS_PER_CYCLE+1]; \/\/ histo: 0, CacheSubsystem::MAX_WAKEUPS_PER_CYCLE+1, 1$/;"	m	struct:DataCacheStats::lfrq
width	ooocore-amd-k8.h	/^    W64 width[OutOfOrderModel::COMMIT_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::COMMIT_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::commit
width	ooocore-amd-k8.h	/^    W64 width[OutOfOrderModel::DISPATCH_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::DISPATCH_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::dispatch
width	ooocore-amd-k8.h	/^    W64 width[OutOfOrderModel::FETCH_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::FETCH_WIDTH, 1$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
width	ooocore-amd-k8.h	/^    W64 width[OutOfOrderModel::FRONTEND_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::FRONTEND_WIDTH, 1$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend
width	ooocore-amd-k8.h	/^    struct width {$/;"	s	struct:OutOfOrderCoreStats::issue
width	ooocore-amd-k8.h	/^    struct width {$/;"	s	struct:OutOfOrderCoreStats::writeback
width	ooocore-amd-k8.h	/^    } width;$/;"	m	struct:OutOfOrderCoreStats::issue	typeref:struct:OutOfOrderCoreStats::issue::width
width	ooocore-amd-k8.h	/^    } width;$/;"	m	struct:OutOfOrderCoreStats::writeback	typeref:struct:OutOfOrderCoreStats::writeback::width
width	ooocore.h	/^    W64 width[OutOfOrderModel::COMMIT_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::COMMIT_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::commit
width	ooocore.h	/^    W64 width[OutOfOrderModel::DISPATCH_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::DISPATCH_WIDTH, 1$/;"	m	struct:OutOfOrderCoreStats::dispatch
width	ooocore.h	/^    W64 width[OutOfOrderModel::FETCH_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::FETCH_WIDTH, 1$/;"	m	struct:PerContextOutOfOrderCoreStats::fetch
width	ooocore.h	/^    W64 width[OutOfOrderModel::FRONTEND_WIDTH+1]; \/\/ histo: 0, OutOfOrderModel::FRONTEND_WIDTH, 1$/;"	m	struct:PerContextOutOfOrderCoreStats::frontend
width	ooocore.h	/^    struct width {$/;"	s	struct:OutOfOrderCoreStats::issue
width	ooocore.h	/^    struct width {$/;"	s	struct:OutOfOrderCoreStats::writeback
width	ooocore.h	/^    } width;$/;"	m	struct:OutOfOrderCoreStats::issue	typeref:struct:OutOfOrderCoreStats::issue::width
width	ooocore.h	/^    } width;$/;"	m	struct:OutOfOrderCoreStats::writeback	typeref:struct:OutOfOrderCoreStats::writeback::width
width	ptlstats.cpp	/^  float width;$/;"	m	struct:LineAttributes	file:
width	superstl.h	/^    int width;$/;"	m	struct:superstl::floatstring
width	superstl.h	/^    int width;$/;"	m	struct:superstl::intstring
width	superstl.h	/^    int width;$/;"	m	struct:superstl::padstring
width	superstl.h	/^    int width;$/;"	m	struct:superstl::percentstring
within_page	stats.h	/^      W64 within_page;$/;"	m	struct:PTLsimStats::decoder::page_crossings
wordof	superstl.h	/^    static size_t wordof(size_t index) { return index \/ BITS_PER_WORD; }$/;"	f	struct:superstl::bitvecbase
wp	ptlhwdef.h	/^  W64 pe:1, mp:1, em:1, ts:1, et:1, ne:1, res6:10, wp:1, res17:1, am:1, res19:10, nw:1, cd:1, pg:1, res32:32;$/;"	m	struct:CR0
wp	superstl.h	/^      T *wp;$/;"	m	class:superstl::bitvec::reference
write	datastore.cpp	/^odstream& DataStoreNode::write(odstream& os) const {$/;"	f	class:DataStoreNode
write	datastore.cpp	/^odstream& DataStoreNodeTemplate::write(odstream& os) const {$/;"	f	class:DataStoreNodeTemplate
write	datastore.cpp	/^void StatsFileWriter::write(const void* record, const char* name) {$/;"	f	class:StatsFileWriter
write	superstl.cpp	/^  int odstream::write(const void* data, int count) {$/;"	f	class:superstl::odstream
write_process_memory_W32	kernel.cpp	/^void write_process_memory_W32(int pid, W64 target, W32 data) {$/;"	f
write_process_memory_W32	kernel.cpp	/^void write_process_memory_W32(int pid, Waddr target, W32 data) {$/;"	f
write_process_memory_W64	kernel.cpp	/^void write_process_memory_W64(int pid, W64 target, W64 data) {$/;"	f
write_segreg	kernel.cpp	/^int Context::write_segreg(unsigned int segid, W16 selector) {$/;"	f	class:Context
write_segreg	ptlxen.cpp	/^int Context::write_segreg(unsigned int segid, W16 selector) {$/;"	f	class:Context
writeback	ooocore-amd-k8.h	/^      double writeback;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
writeback	ooocore-amd-k8.h	/^      } writeback;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon43	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon43::__anon55
writeback	ooocore-amd-k8.h	/^    void writeback() { changestate(PHYSREG_WRITTEN); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
writeback	ooocore-amd-k8.h	/^  struct writeback {$/;"	s	struct:OutOfOrderCoreStats
writeback	ooocore-amd-k8.h	/^  struct writeback {$/;"	s	struct:PerContextOutOfOrderCoreStats
writeback	ooocore-amd-k8.h	/^  } writeback;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::writeback
writeback	ooocore-amd-k8.h	/^  } writeback;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::writeback
writeback	ooocore.h	/^      double writeback;$/;"	m	struct:OutOfOrderCoreStats::simulator::cputime
writeback	ooocore.h	/^      } writeback;$/;"	m	union:OutOfOrderModel::OutOfOrderCoreEvent::__anon7	typeref:struct:OutOfOrderModel::OutOfOrderCoreEvent::__anon7::__anon19
writeback	ooocore.h	/^    void writeback() { changestate(PHYSREG_WRITTEN); }$/;"	f	struct:OutOfOrderModel::PhysicalRegister
writeback	ooocore.h	/^  struct writeback {$/;"	s	struct:OutOfOrderCoreStats
writeback	ooocore.h	/^  struct writeback {$/;"	s	struct:PerContextOutOfOrderCoreStats
writeback	ooocore.h	/^  } writeback;$/;"	m	struct:OutOfOrderCoreStats	typeref:struct:OutOfOrderCoreStats::writeback
writeback	ooocore.h	/^  } writeback;$/;"	m	struct:PerContextOutOfOrderCoreStats	typeref:struct:PerContextOutOfOrderCoreStats::writeback
writeback	ooopipe.cpp	/^int ThreadContext::writeback(int cluster) {$/;"	f	class:ThreadContext
writebacks	ooocore-amd-k8.h	/^    W64 writebacks[OutOfOrderModel::PHYS_REG_FILE_COUNT]; \/\/ label: OutOfOrderModel::phys_reg_file_names$/;"	m	struct:PerContextOutOfOrderCoreStats::writeback
writebacks	ooocore.h	/^    W64 writebacks[OutOfOrderModel::PHYS_REG_FILE_COUNT]; \/\/ label: OutOfOrderModel::phys_reg_file_names$/;"	m	struct:PerContextOutOfOrderCoreStats::writeback
writecount	ooocore-amd-k8.h	/^    int writecount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
writecount	ooocore.h	/^    int writecount;$/;"	m	struct:OutOfOrderModel::OutOfOrderCore
writemap	kernel.h	/^  spat_t writemap;$/;"	m	class:AddressSpace
wrmsr	ptlmon.cpp	/^static int wrmsr(int xc, int cpu, W32 index, W64 value) {$/;"	f	file:
x	mathlib.cpp	/^    double x;$/;"	m	union:math::__anon76	file:
x	mathlib.cpp	/^static const union { int4 i[880]; double x[440]; } sincos = { {$/;"	m	union:math::__anon77	file:
x86	ptlhwdef.h	/^  struct { W32 offset:12, level1:10, level2:10; } x86;$/;"	m	union:VirtAddr	typeref:struct:VirtAddr::__anon127
x86_bsf32	globals.h	/^inline W32 x86_bsf32(W32 b) { W32 r = 0; asm("bsf %[b],%[r]" : [r] "+r" (r) : [b] "r" (b)); return r; }$/;"	f
x86_bsf64	globals.h	/^inline W64 x86_bsf64(W64 b) { W64 r = 0; asm("bsf %[b],%[r]" : [r] "+r" (r) : [b] "r" (b)); return r; }$/;"	f
x86_bsr32	globals.h	/^inline W32 x86_bsr32(W32 b) { W32 r = 0; asm("bsr %[b],%[r]" : [r] "+r" (r) : [b] "r" (b)); return r; }$/;"	f
x86_bsr64	globals.h	/^inline W64 x86_bsr64(W64 b) { W64 r = 0; asm("bsr %[b],%[r]" : [r] "+r" (r) : [b] "r" (b)); return r; }$/;"	f
x86_bswap	uopimpl.cpp	/^template <typename T> inline W64 x86_bswap(T v) { asm("bswap %[v]" : [v] "+r" (v)); return v; }$/;"	f
x86_bt	globals.h	/^template <typename T> inline bool x86_bt(T r, T b) { byte c; asm("bt %[b],%[r]; setc %[c]" : [c] "=r" (c) : [r] "r" (r), [b] "r" (b)); return c; }$/;"	f
x86_btc	globals.h	/^template <typename T> inline W64 x86_btc(T r, T b) { asm("btc %[b],%[r]" : [r] "+r" (r) : [b] "r" (b)); return r; }$/;"	f
x86_btn	globals.h	/^template <typename T> inline bool x86_btn(T r, T b) { byte c; asm("bt %[b],%[r]; setnc %[c]" : [c] "=r" (c) : [r] "r" (r), [b] "r" (b)); return c; }$/;"	f
x86_btr	globals.h	/^template <typename T> inline W64 x86_btr(T r, T b) { asm("btr %[b],%[r]" : [r] "+r" (r) : [b] "r" (b)); return r; }$/;"	f
x86_bts	globals.h	/^template <typename T> inline W64 x86_bts(T r, T b) { asm("bts %[b],%[r]" : [r] "+r" (r) : [b] "r" (b)); return r; }$/;"	f
x86_cap_flags	cpuid.cpp	/^static const char* x86_cap_flags[] = {$/;"	v	file:
x86_decode_type	stats.h	/^    W64 x86_decode_type[DECODE_TYPE_COUNT]; \/\/ label: decode_type_names$/;"	m	struct:PTLsimStats::decoder
x86_div	uopimpl.cpp	/^void x86_div(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
x86_divs	uopimpl.cpp	/^void x86_divs(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
x86_exception	ptlhwdef.h	/^  Waddr x86_exception;$/;"	m	struct:ContextBase
x86_exception_names	ptlhwdef.cpp	/^const char* x86_exception_names[256] = {$/;"	v
x86_ext_cap_flags	cpuid.cpp	/^static const char* x86_ext_cap_flags[] = {$/;"	v	file:
x86_flag_names	ptlhwdef.cpp	/^const char* x86_flag_names[32] = {$/;"	v
x86_genflags	uopimpl.cpp	/^byte x86_genflags<W64>(W64 r) {$/;"	f
x86_genflags	uopimpl.cpp	/^inline byte x86_genflags(T r) {$/;"	f
x86_genflags_separate	uopimpl.cpp	/^inline byte x86_genflags_separate(T sr, T zr, T pr) {$/;"	f
x86_get_mxcsr	globals.h	/^inline W32 x86_get_mxcsr() { W32 value; asm volatile("stmxcsr %[value]" : [value] "=m" (value)); return value; }$/;"	f
x86_insns	stats.h	/^      W64 x86_insns;$/;"	m	struct:PTLsimStats::decoder::throughput
x86_locked_btc	globals.h	/^template <typename T> inline bool x86_locked_btc(T& r, T b) { byte c; asm volatile("lock btc %[b],%[r]; setc %[c]" : [c] "=r" (c), [r] "+m" (r) : [b] "r" (b) : "memory"); return c; }$/;"	f
x86_locked_btr	globals.h	/^template <typename T> inline bool x86_locked_btr(T& r, T b) { byte c; asm volatile("lock btr %[b],%[r]; setc %[c]" : [c] "=r" (c), [r] "+m" (r) : [b] "r" (b) : "memory"); return c; }$/;"	f
x86_locked_bts	globals.h	/^template <typename T> inline bool x86_locked_bts(T& r, T b) { byte c; asm volatile("lock bts %[b],%[r]; setc %[c]" : [c] "=r" (c), [r] "+m" (r) : [b] "r" (b) : "memory"); return c; }$/;"	f
x86_merge	decode-complex.cpp	/^static inline W64 x86_merge(W64 rd, W64 ra, int sizeshift) {$/;"	f	file:
x86_merge	uopimpl.cpp	/^inline W64 x86_merge(W64 rd, W64 ra) {$/;"	f
x86_op_fmadd	uopimpl.cpp	/^void x86_op_fmadd(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
x86_op_fmsub	uopimpl.cpp	/^void x86_op_fmsub(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
x86_op_fmsubr	uopimpl.cpp	/^void x86_op_fmsubr(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
x86_op_mulh	uopimpl.cpp	/^struct x86_op_mulh<W64, genflags> { W64 operator ()(W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags, byte& cf, byte& of) { asm("int3"); return 0; } };$/;"	s	file:
x86_op_mulhl	uopimpl.cpp	/^struct x86_op_mulhl {$/;"	s	file:
x86_op_mulhu	uopimpl.cpp	/^struct x86_op_mulhu<W64, genflags> { W64 operator ()(W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags, byte& cf, byte& of) { asm("int3"); return 0; } };$/;"	s	file:
x86_op_mull	uopimpl.cpp	/^struct x86_op_mull<W64, genflags> { W64 operator ()(W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags, byte& cf, byte& of) { asm("int3"); return 0; } };$/;"	s	file:
x86_op_nop	uopimpl.cpp	/^void x86_op_nop(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
x86_rem	uopimpl.cpp	/^void x86_rem(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
x86_rems	uopimpl.cpp	/^void x86_rems(IssueState& state, W64 ra, W64 rb, W64 rc, W16 raflags, W16 rbflags, W16 rcflags) {$/;"	f
x86_rol	globals.h	/^static inline T x86_rol(T r, int n) { asm("rol %%cl,%[r]" : [r] "+q" (r) : [n] "c" ((byte)n)); return r; }$/;"	f
x86_ror	globals.h	/^static inline T x86_ror(T r, int n) { asm("ror %%cl,%[r]" : [r] "+q" (r) : [n] "c" ((byte)n)); return r; }$/;"	f
x86_ror	globals.h	/^static inline W64 x86_ror(W64 r, int n) {$/;"	f
x86_set_mxcsr	globals.h	/^inline void x86_set_mxcsr(W32 value) { asm volatile("ldmxcsr %[value]" : : [value] "m" (value)); }$/;"	f
x86_sse_dupb	globals.h	/^inline vec16b x86_sse_dupb(const byte b) {$/;"	f
x86_sse_dupw	globals.h	/^inline vec8w x86_sse_dupw(const W16 b) {$/;"	f
x86_sse_ldvbu	globals.h	/^inline vec16b x86_sse_ldvbu(const vec16b* m) { vec16b rd; asm("movdqu %[m],%[rd]" : [rd] "=x" (rd) : [m] "xm" (*m)); return rd; }$/;"	f
x86_sse_ldvwu	globals.h	/^inline vec8w x86_sse_ldvwu(const vec8w* m) { vec8w rd; asm("movdqu %[m],%[rd]" : [rd] "=x" (rd) : [m] "xm" (*m)); return rd; }$/;"	f
x86_sse_maskeqb	globals.h	/^static inline W16 x86_sse_maskeqb(const vec16b v, byte target) { return x86_sse_pmovmskb(x86_sse_pcmpeqb(v, x86_sse_dupb(target))); }$/;"	f
x86_sse_onesb	globals.h	/^inline vec16b x86_sse_onesb() { vec16b rd; asm("pcmpeqb %[rd],%[rd]" : [rd] "+x" (rd)); return rd; }$/;"	f
x86_sse_onesw	globals.h	/^inline vec8w x86_sse_onesw() { vec8w rd; asm("pcmpeqw %[rd],%[rd]" : [rd] "+x" (rd)); return rd; }$/;"	f
x86_sse_packsswb	globals.h	/^inline vec16b x86_sse_packsswb(vec8w a, vec8w b) { asm("packsswb %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return (vec16b)a; }$/;"	f
x86_sse_paddusb	globals.h	/^inline vec16b x86_sse_paddusb(vec16b a, vec16b b) { asm("paddusb %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_paddusw	globals.h	/^inline vec8w x86_sse_paddusw(vec8w a, vec8w b) { asm("paddsub %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_pandb	globals.h	/^inline vec16b x86_sse_pandb(vec16b a, vec16b b) { asm("pand %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_pandw	globals.h	/^inline vec8w x86_sse_pandw(vec8w a, vec8w b) { asm("pand %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_pcmpeqb	globals.h	/^inline vec16b x86_sse_pcmpeqb(vec16b a, vec16b b) { asm("pcmpeqb %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_pcmpeqd	globals.h	/^inline vec4i x86_sse_pcmpeqd(vec4i a, vec4i b) { asm("pcmpeqd %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_pcmpeqw	globals.h	/^inline vec8w x86_sse_pcmpeqw(vec8w a, vec8w b) { asm("pcmpeqw %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_pextrw	globals.h	/^template <int i> inline W16 x86_sse_pextrw(vec16b a) { W32 rd; asm("pextrw %[i],%[a],%[rd]" : [rd] "=r" (rd) : [a] "x" (a), [i] "N" (i)); return rd; }$/;"	f
x86_sse_pmovmskb	globals.h	/^inline W32 x86_sse_pmovmskb(vec16b vec) { W32 mask; asm("pmovmskb %[vec],%[mask]" : [mask] "=r" (mask) : [vec] "x" (vec)); return mask; }$/;"	f
x86_sse_pmovmskw	globals.h	/^inline W32 x86_sse_pmovmskw(vec8w vec) { return x86_sse_pmovmskb(x86_sse_packsswb(vec, vec)) & 0xff; }$/;"	f
x86_sse_psadbw	globals.h	/^inline vec16b x86_sse_psadbw(vec16b a, vec16b b) { asm("psadbw %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_psubusb	globals.h	/^inline vec16b x86_sse_psubusb(vec16b a, vec16b b) { asm("psubusb %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_psubusw	globals.h	/^inline vec8w x86_sse_psubusw(vec8w a, vec8w b) { asm("psubusb %[b],%[a]" : [a] "+x" (a) : [b] "xg" (b)); return a; }$/;"	f
x86_sse_stvbu	globals.h	/^inline void x86_sse_stvbu(vec16b* m, const vec16b ra) { asm("movdqu %[ra],%[m]" : [m] "=xm" (*m) : [ra] "x" (ra) : "memory"); }$/;"	f
x86_sse_stvwu	globals.h	/^inline void x86_sse_stvwu(vec8w* m, const vec8w ra) { asm("movdqu %[ra],%[m]" : [m] "=xm" (*m) : [ra] "x" (ra) : "memory"); }$/;"	f
x86_sse_zerob	globals.h	/^inline vec16b x86_sse_zerob() { vec16b rd; asm("pxor %[rd],%[rd]" : [rd] "+x" (rd)); return rd; }$/;"	f
x86_sse_zerow	globals.h	/^inline vec8w x86_sse_zerow() { vec8w rd; asm("pxor %[rd],%[rd]" : [rd] "+x" (rd)); return rd; }$/;"	f
x86_test_btc	globals.h	/^template <typename T> inline bool x86_test_btc(T& r, T b) { byte c; asm("btc %[b],%[r]; setc %[c]" : [c] "=r" (c), [r] "+r" (r) : [b] "r" (b)); return c; }$/;"	f
x86_test_btr	globals.h	/^template <typename T> inline bool x86_test_btr(T& r, T b) { byte c; asm("btr %[b],%[r]; setc %[c]" : [c] "=r" (c), [r] "+r" (r) : [b] "r" (b)); return c; }$/;"	f
x86_test_bts	globals.h	/^template <typename T> inline bool x86_test_bts(T& r, T b) { byte c; asm("bts %[b],%[r]; setc %[c]" : [c] "=r" (c), [r] "+r" (r) : [b] "r" (b)); return c; }$/;"	f
x87	ptlhwdef.h	/^  byte marked:1, mfence:1, x87:1, sse:1, nondeterministic:1, brtype:3;$/;"	m	struct:BasicBlockBase
x87_fp_64bit_to_80bit	ptlhwdef.h	/^inline void x87_fp_64bit_to_80bit(X87Reg* x87reg, W64 reg64) {$/;"	f
x87_fp_80bit_to_64bit	ptlhwdef.h	/^inline W64 x87_fp_80bit_to_64bit(const X87Reg* x87reg) {$/;"	f
x87_fpatan	decode-x87.cpp	/^double x87_fpatan(double st1, double st0) {$/;"	f
x87_fyl2x	decode-x87.cpp	/^double x87_fyl2x(double st1, double st0) {$/;"	f
x87_fyl2xp1	decode-x87.cpp	/^double x87_fyl2xp1(double st1, double st0) {$/;"	f
x87_load_stack	decode-x87.cpp	355;"	d	file:
x87_pop_stack	decode-x87.cpp	359;"	d	file:
x87_store_stack	decode-x87.cpp	356;"	d	file:
x87state	kernel.cpp	/^FXSAVEStruct x87state;$/;"	v
x_mode	decode.h	/^enum { b_mode, v_mode, w_mode, d_mode, q_mode, x_mode, dq_mode };$/;"	e	enum:__anon140
xadd	globals.h	/^static inline T xadd(T& v, T incr) {$/;"	f
xc	ptlmon.cpp	/^  int xc;$/;"	m	struct:XenController	file:
xc_alloc_unbound	ptlmon.cpp	/^static int xc_alloc_unbound(int xc, int domfrom, int domto) {$/;"	f	file:
xc_bind_interdomain	ptlmon.cpp	/^static int xc_bind_interdomain(int xc, int remotedom, int remoteport) {$/;"	f	file:
xc_evtchn_unmask	ptlmon.cpp	/^static int xc_evtchn_unmask(int xc, int localport) {$/;"	f	file:
xc_get_domain_from_name	ptlmon.cpp	/^int xc_get_domain_from_name(const char* name) {$/;"	f
xc_send	ptlmon.cpp	/^static int xc_send(int xc, int localport) {$/;"	f	file:
xchg	globals.h	/^static inline T xchg(T& v, T newv) {$/;"	f
xen_event_callback	ptlxen-events.cpp	/^asmlinkage void xen_event_callback(W64* regs) {$/;"	f
xen_event_callback_entry	lowlevel-64bit-xen.S	/^xen_event_callback_entry:$/;"	l
xen_hypervisor_start_va	ptlmon.cpp	/^  W64 xen_hypervisor_start_va;$/;"	m	struct:XenController	file:
xen_m2p_map_end	ptlxen-memory.cpp	/^Waddr xen_m2p_map_end;$/;"	v
xen_pfn_t	xen-types.h	/^typedef unsigned long xen_pfn_t;$/;"	t
xen_sched_block	ptlxen.cpp	/^int xen_sched_block() {$/;"	f
xen_sched_poll	ptlxen.cpp	/^int xen_sched_poll(int port, u64 nsecs) {$/;"	f
xen_sched_timer	ptlxen.cpp	/^int xen_sched_timer(u64 nsecs) {$/;"	f
xen_sched_yield	ptlxen.cpp	/^int xen_sched_yield() {$/;"	f
xen_shutdown_domain	ptlxen.cpp	/^int xen_shutdown_domain(int reason) {$/;"	f
xferpage	ptlxen.h	353;"	d
xmmreg_to_uniform_reg	decode-core.cpp	/^const byte xmmreg_to_uniform_reg[16] = { APR_xmm0, APR_xmm1, APR_xmm2, APR_xmm3, APR_xmm4, APR_xmm5, APR_xmm6, APR_xmm7, APR_xmm8, APR_xmm9, APR_xmm10, APR_xmm11, APR_xmm12, APR_xmm13, APR_xmm14, APR_xmm15 };$/;"	v
xmmregs	ptlhwdef.h	/^  XMMReg xmmregs[16];$/;"	m	struct:FXSAVEStruct
xoffs	ptlstats.cpp	/^  float xoffs;$/;"	m	class:SVGCreator	file:
xorop	superstl.h	/^    void xorop(const bitvecbase<0>&) { }$/;"	f	struct:superstl::bitvecbase
xorop	superstl.h	/^    void xorop(const bitvecbase<1>& x) { w ^= x.w; }$/;"	f	struct:superstl::bitvecbase
xorop	superstl.h	/^    void xorop(const bitvecbase<N>& x) {$/;"	f	struct:superstl::bitvecbase
y	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
yes	ooocore-amd-k8.h	/^      W64 yes;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::setflags
yes	ooocore.h	/^      W64 yes;$/;"	m	struct:PerContextOutOfOrderCoreStats::commit::setflags
yoffs	ptlstats.cpp	/^  float yoffs;$/;"	m	class:SVGCreator	file:
ze	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
ze	ptlhwdef.h	/^  W16 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, sf:1, es:1, c0:1, c1:1, c2:1, tos:3, c3:1, b:1;$/;"	m	struct:X87StatusWord
zero	datastore.h	/^  DataStoreNode* zero() const { return map(ZeroOperator()); }$/;"	f	struct:DataStoreNode
zero	mathlib.cpp	/^  static const number zero           = {{0x00000000, 0x00000000}}; \/*  0     *\/$/;"	v	file:
zero	ooocore-amd-k8.h	/^        W64 zero;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::forward
zero	ooocore.h	/^        W64 zero;$/;"	m	struct:PerContextOutOfOrderCoreStats::dcache::store::forward
zeropage	ptlxen-memory.cpp	/^void* zeropage;$/;"	v
zm	globals.h	/^  struct { W32 ie:1, de:1, ze:1, oe:1, ue:1, pe:1, daz:1, im:1, dm:1, zm:1, om:1, um:1, pm:1, rc:2, fz:1; } fields;$/;"	m	struct:MXCSR::__anon30
zm	ptlhwdef.h	/^  W16 im:1, dm:1, zm:1, om:1, um:1, pm:1, res1:2, pc:2, rc:2, y:1, res2:3;$/;"	m	struct:X87ControlWord
~AddressSpace	kernel.cpp	/^AddressSpace::~AddressSpace() { }$/;"	f	class:AddressSpace
~ChunkList	superstl.h	/^    ~ChunkList() {$/;"	f	struct:superstl::ChunkList
~CycleTimerScope	superstl.h	/^    ~CycleTimerScope() { ct.stop(); }$/;"	f	struct:superstl::CycleTimerScope
~DataStoreNode	datastore.cpp	/^DataStoreNode::~DataStoreNode() {$/;"	f	class:DataStoreNode
~DataStoreNodeTemplate	datastore.cpp	/^DataStoreNodeTemplate::~DataStoreNodeTemplate() {$/;"	f	class:DataStoreNodeTemplate
~ObjectHashtableEntry	superstl.h	/^    ~ObjectHashtableEntry() {$/;"	f	struct:superstl::ObjectHashtableEntry
~OutOfOrderCore	ooocore-amd-k8.h	/^    ~OutOfOrderCore(){};$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
~OutOfOrderCore	ooocore.h	/^    ~OutOfOrderCore(){};$/;"	f	struct:OutOfOrderModel::OutOfOrderCore
~SVGCreator	ptlstats.cpp	/^  ~SVGCreator() {$/;"	f	class:SVGCreator
~ScopedLock	superstl.h	/^    ~ScopedLock() { lock.release(); }$/;"	f	struct:superstl::ScopedLock
~XenController	ptlmon.cpp	/^  ~XenController() {$/;"	f	struct:XenController
~dynarray	superstl.h	/^    ~dynarray() {$/;"	f	class:superstl::dynarray
~idstream	superstl.h	/^    ~idstream() {$/;"	f	class:superstl::idstream
~odstream	superstl.cpp	/^  odstream::~odstream() {$/;"	f	class:superstl::odstream
~ref	logic.h	/^    inline ~ref() { }$/;"	f	class:FullyAssociativeTagsNbitOneHot::ref
~reference	superstl.h	/^      ~reference() { }$/;"	f	class:superstl::bitvec::reference
~stringbuf	superstl.cpp	/^  stringbuf::~stringbuf() {$/;"	f	class:superstl::stringbuf
