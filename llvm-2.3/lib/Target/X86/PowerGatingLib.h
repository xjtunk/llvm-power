
#define RETURN_ON      return (gatingmask_t)1 << 
#define RETURN_ON_ALL  return (gatingmask_t)0 - 1

	case PHI:
	case INLINEASM:
	case LABEL:
	case DECLARE:
	case EXTRACT_SUBREG:
	case INSERT_SUBREG:
	case IMPLICIT_DEF:
	case SUBREG_TO_REG:
	case ABS_F:
	case ABS_Fp32:
	case ABS_Fp64:
	case ABS_Fp80:
	case ADC32mi:
	case ADC32mi8:
	case ADC32mr:
	case ADC32ri:
	case ADC32ri8:
	case ADC32rm:
	case ADC32rr:
	case ADC64mi32:
	case ADC64mi8:
	case ADC64mr:
	case ADC64ri32:
	case ADC64ri8:
	case ADC64rm:
	case ADC64rr:
		RETURN_ON_ALL;
		break;

	case ADD16mi:
	case ADD16mi8:
	case ADD16mr:
	case ADD16ri:
	case ADD16ri8:
	case ADD16rm:
	case ADD16rr:
	case ADD32mi:
	case ADD32mi8:
	case ADD32mr:
	case ADD32ri:
	case ADD32ri8:
	case ADD32rm:
	case ADD32rr:
	case ADD64mi32:
	case ADD64mi8:
	case ADD64mr:
	case ADD64ri32:
	case ADD64ri8:
	case ADD64rm:
	case ADD64rr:
	case ADD8mi:
	case ADD8mr:
	case ADD8ri:
	case ADD8rm:
	case ADD8rr:
	case ADDPDrm:
	case ADDPDrr:
	case ADDPSrm:
	case ADDPSrr:
	case ADDSDrm:
	case ADDSDrm_Int:
	case ADDSDrr:
	case ADDSDrr_Int:
	case ADDSSrm:
	case ADDSSrm_Int:
	case ADDSSrr:
	case ADDSSrr_Int:
	case ADDSUBPDrm:
	case ADDSUBPDrr:
	case ADDSUBPSrm:
	case ADDSUBPSrr:
		RETURN_ON FUT_INT_ADDER;
		break;

	case ADD_F32m:
	case ADD_F64m:
	case ADD_FI16m:
	case ADD_FI32m:
	case ADD_FPrST0:
	case ADD_FST0r:
	case ADD_Fp32:
	case ADD_Fp32m:
	case ADD_Fp64:
	case ADD_Fp64m:
	case ADD_Fp64m32:
	case ADD_Fp80:
	case ADD_Fp80m32:
	case ADD_Fp80m64:
	case ADD_FpI16m32:
	case ADD_FpI16m64:
	case ADD_FpI16m80:
	case ADD_FpI32m32:
	case ADD_FpI32m64:
	case ADD_FpI32m80:
	case ADD_FrST0:
		RETURN_ON FUT_FP_ADDER;
		break;

	case ADJCALLSTACKDOWN:
	case ADJCALLSTACKUP:
		RETURN_ON_ALL;
		break;

	case AND16mi:
	case AND16mi8:
	case AND16mr:
	case AND16ri:
	case AND16ri8:
	case AND16rm:
	case AND16rr:
	case AND32mi:
	case AND32mi8:
	case AND32mr:
	case AND32ri:
	case AND32ri8:
	case AND32rm:
	case AND32rr:
	case AND64mi32:
	case AND64mi8:
	case AND64mr:
	case AND64ri32:
	case AND64ri8:
	case AND64rm:
	case AND64rr:
	case AND8mi:
	case AND8mr:
	case AND8ri:
	case AND8rm:
	case AND8rr:
	case ANDNPDrm:
	case ANDNPDrr:
	case ANDNPSrm:
	case ANDNPSrr:
	case ANDPDrm:
	case ANDPDrr:
	case ANDPSrm:
	case ANDPSrr:
		RETURN_ON FUT_INT_ADDER;
		break;

	case ATOMAND32:
	case ATOMMAX32:
	case ATOMMIN32:
	case ATOMOR32:
	case ATOMUMAX32:
	case ATOMUMIN32:
	case ATOMXOR32:
	case BLENDPDrmi:
	case BLENDPDrri:
	case BLENDPSrmi:
	case BLENDPSrri:
	case BLENDVPDrm0:
	case BLENDVPDrr0:
	case BLENDVPSrm0:
	case BLENDVPSrr0:
	case BSF16rm:
	case BSF16rr:
	case BSF32rm:
	case BSF32rr:
	case BSF64rm:
	case BSF64rr:
	case BSR16rm:
	case BSR16rr:
	case BSR32rm:
	case BSR32rr:
	case BSR64rm:
	case BSR64rr:
	case BSWAP32r:
	case BSWAP64r:
		RETURN_ON_ALL;
		break;

	case CALL32m:
	case CALL32r:
	case CALL64m:
	case CALL64pcrel32:
	case CALL64r:
	case CALLpcrel32:
		RETURN_ON FUT_INT_AGU;
		break;

	case CBW:
	case CDQ:
	case CDQE:
	case CHS_F:
	case CHS_Fp32:
	case CHS_Fp64:
	case CHS_Fp80:
	case CLFLUSH:
	case CMOVA16rm:
	case CMOVA16rr:
	case CMOVA32rm:
	case CMOVA32rr:
	case CMOVA64rm:
	case CMOVA64rr:
	case CMOVAE16rm:
	case CMOVAE16rr:
	case CMOVAE32rm:
	case CMOVAE32rr:
	case CMOVAE64rm:
	case CMOVAE64rr:
	case CMOVB16rm:
	case CMOVB16rr:
	case CMOVB32rm:
	case CMOVB32rr:
	case CMOVB64rm:
	case CMOVB64rr:
	case CMOVBE16rm:
	case CMOVBE16rr:
	case CMOVBE32rm:
	case CMOVBE32rr:
	case CMOVBE64rm:
	case CMOVBE64rr:
	case CMOVBE_F:
	case CMOVBE_Fp32:
	case CMOVBE_Fp64:
	case CMOVBE_Fp80:
	case CMOVB_F:
	case CMOVB_Fp32:
	case CMOVB_Fp64:
	case CMOVB_Fp80:
	case CMOVE16rm:
	case CMOVE16rr:
	case CMOVE32rm:
	case CMOVE32rr:
	case CMOVE64rm:
	case CMOVE64rr:
	case CMOVE_F:
	case CMOVE_Fp32:
	case CMOVE_Fp64:
	case CMOVE_Fp80:
	case CMOVG16rm:
	case CMOVG16rr:
	case CMOVG32rm:
	case CMOVG32rr:
	case CMOVG64rm:
	case CMOVG64rr:
	case CMOVGE16rm:
	case CMOVGE16rr:
	case CMOVGE32rm:
	case CMOVGE32rr:
	case CMOVGE64rm:
	case CMOVGE64rr:
	case CMOVL16rm:
	case CMOVL16rr:
	case CMOVL32rm:
	case CMOVL32rr:
	case CMOVL64rm:
	case CMOVL64rr:
	case CMOVLE16rm:
	case CMOVLE16rr:
	case CMOVLE32rm:
	case CMOVLE32rr:
	case CMOVLE64rm:
	case CMOVLE64rr:
	case CMOVNBE_F:
	case CMOVNBE_Fp32:
	case CMOVNBE_Fp64:
	case CMOVNBE_Fp80:
	case CMOVNB_F:
	case CMOVNB_Fp32:
	case CMOVNB_Fp64:
	case CMOVNB_Fp80:
	case CMOVNE16rm:
	case CMOVNE16rr:
	case CMOVNE32rm:
	case CMOVNE32rr:
	case CMOVNE64rm:
	case CMOVNE64rr:
	case CMOVNE_F:
	case CMOVNE_Fp32:
	case CMOVNE_Fp64:
	case CMOVNE_Fp80:
	case CMOVNP16rm:
	case CMOVNP16rr:
	case CMOVNP32rm:
	case CMOVNP32rr:
	case CMOVNP64rm:
	case CMOVNP64rr:
	case CMOVNP_F:
	case CMOVNP_Fp32:
	case CMOVNP_Fp64:
	case CMOVNP_Fp80:
	case CMOVNS16rm:
	case CMOVNS16rr:
	case CMOVNS32rm:
	case CMOVNS32rr:
	case CMOVNS64rm:
	case CMOVNS64rr:
	case CMOVP16rm:
	case CMOVP16rr:
	case CMOVP32rm:
	case CMOVP32rr:
	case CMOVP64rm:
	case CMOVP64rr:
	case CMOVP_F:
	case CMOVP_Fp32:
	case CMOVP_Fp64:
	case CMOVP_Fp80:
	case CMOVS16rm:
	case CMOVS16rr:
	case CMOVS32rm:
	case CMOVS32rr:
	case CMOVS64rm:
	case CMOVS64rr:
	case CMOV_FR32:
	case CMOV_FR64:
	case CMOV_V2F64:
	case CMOV_V2I64:
	case CMOV_V4F32:
		RETURN_ON_ALL;
		break;

	case CMP16mi:
	case CMP16mi8:
	case CMP16mr:
	case CMP16ri:
	case CMP16ri8:
	case CMP16rm:
	case CMP16rr:
	case CMP32mi:
	case CMP32mi8:
	case CMP32mr:
	case CMP32ri:
	case CMP32ri8:
	case CMP32rm:
	case CMP32rr:
	case CMP64mi32:
	case CMP64mi8:
	case CMP64mr:
	case CMP64ri32:
	case CMP64ri8:
	case CMP64rm:
	case CMP64rr:
	case CMP8mi:
	case CMP8mr:
	case CMP8ri:
	case CMP8rm:
	case CMP8rr:
	case CMPPDrmi:
	case CMPPDrri:
	case CMPPSrmi:
	case CMPPSrri:
	case CMPSDrm:
	case CMPSDrr:
	case CMPSSrm:
	case CMPSSrr:
		RETURN_ON_ALL;
		break;

	case COS_F:
	case COS_Fp32:
	case COS_Fp64:
	case COS_Fp80:
	case CQO:
	case CVTSD2SSrm:
	case CVTSD2SSrr:
	case CVTSI2SD64rm:
	case CVTSI2SD64rr:
	case CVTSI2SDrm:
	case CVTSI2SDrr:
	case CVTSI2SS64rm:
	case CVTSI2SS64rr:
	case CVTSI2SSrm:
	case CVTSI2SSrr:
	case CVTSS2SDrm:
	case CVTSS2SDrr:
	case CVTTSD2SI64rm:
	case CVTTSD2SI64rr:
	case CVTTSD2SIrm:
	case CVTTSD2SIrr:
	case CVTTSS2SI64rm:
	case CVTTSS2SI64rr:
	case CVTTSS2SIrm:
	case CVTTSS2SIrr:
	case CWD:
	case CWDE:
	case DEC16m:
	case DEC16r:
	case DEC32m:
	case DEC32r:
	case DEC64_16m:
	case DEC64_16r:
	case DEC64_32m:
	case DEC64_32r:
	case DEC64m:
	case DEC64r:
	case DEC8m:
	case DEC8r:
	case DIV16m:
	case DIV16r:
	case DIV32m:
	case DIV32r:
	case DIV64m:
	case DIV64r:
	case DIV8m:
	case DIV8r:
	case DIVPDrm:
	case DIVPDrr:
	case DIVPSrm:
	case DIVPSrr:
	case DIVR_F32m:
	case DIVR_F64m:
	case DIVR_FI16m:
	case DIVR_FI32m:
	case DIVR_FPrST0:
	case DIVR_FST0r:
	case DIVR_Fp32m:
	case DIVR_Fp64m:
	case DIVR_Fp64m32:
	case DIVR_Fp80m32:
	case DIVR_Fp80m64:
	case DIVR_FpI16m32:
	case DIVR_FpI16m64:
	case DIVR_FpI16m80:
	case DIVR_FpI32m32:
	case DIVR_FpI32m64:
	case DIVR_FpI32m80:
	case DIVR_FrST0:
	case DIVSDrm:
	case DIVSDrm_Int:
	case DIVSDrr:
	case DIVSDrr_Int:
	case DIVSSrm:
	case DIVSSrm_Int:
	case DIVSSrr:
	case DIVSSrr_Int:
	case DIV_F32m:
	case DIV_F64m:
	case DIV_FI16m:
	case DIV_FI32m:
	case DIV_FPrST0:
	case DIV_FST0r:
	case DIV_Fp32:
	case DIV_Fp32m:
	case DIV_Fp64:
	case DIV_Fp64m:
	case DIV_Fp64m32:
	case DIV_Fp80:
	case DIV_Fp80m32:
	case DIV_Fp80m64:
	case DIV_FpI16m32:
	case DIV_FpI16m64:
	case DIV_FpI16m80:
	case DIV_FpI32m32:
	case DIV_FpI32m64:
	case DIV_FpI32m80:
	case DIV_FrST0:
	case DPPDrmi:
	case DPPDrri:
	case DPPSrmi:
	case DPPSrri:
	case DWARF_LOC:
	case EH_RETURN:
	case EXTRACTPSmr:
	case EXTRACTPSrr:
	case FLDCW16m:
	case FNSTCW16m:
	case FNSTSW8r:
	case FP32_TO_INT16_IN_MEM:
	case FP32_TO_INT32_IN_MEM:
	case FP32_TO_INT64_IN_MEM:
	case FP64_TO_INT16_IN_MEM:
	case FP64_TO_INT32_IN_MEM:
	case FP64_TO_INT64_IN_MEM:
	case FP80_TO_INT16_IN_MEM:
	case FP80_TO_INT32_IN_MEM:
	case FP80_TO_INT64_IN_MEM:
	case FP_REG_KILL:
	case FpGET_ST0_32:
	case FpGET_ST0_64:
	case FpGET_ST0_80:
	case FpGET_ST1_32:
	case FpGET_ST1_64:
	case FpGET_ST1_80:
	case FpSET_ST0_32:
	case FpSET_ST0_64:
	case FpSET_ST0_80:
	case FsANDNPDrm:
	case FsANDNPDrr:
	case FsANDNPSrm:
	case FsANDNPSrr:
	case FsANDPDrm:
	case FsANDPDrr:
	case FsANDPSrm:
	case FsANDPSrr:
	case FsFLD0SD:
	case FsFLD0SS:
	case FsMOVAPDrm:
	case FsMOVAPDrr:
	case FsMOVAPSrm:
	case FsMOVAPSrr:
	case FsORPDrm:
	case FsORPDrr:
	case FsORPSrm:
	case FsORPSrr:
	case FsXORPDrm:
	case FsXORPDrr:
	case FsXORPSrm:
	case FsXORPSrr:
	case HADDPDrm:
	case HADDPDrr:
	case HADDPSrm:
	case HADDPSrr:
	case HSUBPDrm:
	case HSUBPDrr:
	case HSUBPSrm:
	case HSUBPSrr:
	case IDIV16m:
	case IDIV16r:
	case IDIV32m:
	case IDIV32r:
	case IDIV64m:
	case IDIV64r:
	case IDIV8m:
	case IDIV8r:
	case ILD_F16m:
	case ILD_F32m:
	case ILD_F64m:
	case ILD_Fp16m32:
	case ILD_Fp16m64:
	case ILD_Fp16m80:
	case ILD_Fp32m32:
	case ILD_Fp32m64:
	case ILD_Fp32m80:
	case ILD_Fp64m32:
	case ILD_Fp64m64:
	case ILD_Fp64m80:
	case IMUL16m:
	case IMUL16r:
	case IMUL16rm:
	case IMUL16rmi:
	case IMUL16rmi8:
	case IMUL16rr:
	case IMUL16rri:
	case IMUL16rri8:
	case IMUL32m:
	case IMUL32r:
	case IMUL32rm:
	case IMUL32rmi:
	case IMUL32rmi8:
	case IMUL32rr:
	case IMUL32rri:
	case IMUL32rri8:
	case IMUL64m:
	case IMUL64r:
	case IMUL64rm:
	case IMUL64rmi32:
	case IMUL64rmi8:
	case IMUL64rr:
	case IMUL64rri32:
	case IMUL64rri8:
	case IMUL8m:
	case IMUL8r:
	case IN16ri:
	case IN16rr:
	case IN32ri:
	case IN32rr:
	case IN8ri:
	case IN8rr:
	case INC16m:
	case INC16r:
	case INC32m:
	case INC32r:
	case INC64_16m:
	case INC64_16r:
	case INC64_32m:
	case INC64_32r:
	case INC64m:
	case INC64r:
	case INC8m:
	case INC8r:
	case INSERTPSrm:
	case INSERTPSrr:
	case ISTT_FP16m:
	case ISTT_FP32m:
	case ISTT_FP64m:
	case ISTT_Fp16m32:
	case ISTT_Fp16m64:
	case ISTT_Fp16m80:
	case ISTT_Fp32m32:
	case ISTT_Fp32m64:
	case ISTT_Fp32m80:
	case ISTT_Fp64m32:
	case ISTT_Fp64m64:
	case ISTT_Fp64m80:
	case IST_F16m:
	case IST_F32m:
	case IST_FP16m:
	case IST_FP32m:
	case IST_FP64m:
	case IST_Fp16m32:
	case IST_Fp16m64:
	case IST_Fp16m80:
	case IST_Fp32m32:
	case IST_Fp32m64:
	case IST_Fp32m80:
	case IST_Fp64m32:
	case IST_Fp64m64:
	case IST_Fp64m80:
	case Int_CMPSDrm:
	case Int_CMPSDrr:
	case Int_CMPSSrm:
	case Int_CMPSSrr:
	case Int_COMISDrm:
	case Int_COMISDrr:
	case Int_COMISSrm:
	case Int_COMISSrr:
	case Int_CVTDQ2PDrm:
	case Int_CVTDQ2PDrr:
	case Int_CVTDQ2PSrm:
	case Int_CVTDQ2PSrr:
	case Int_CVTPD2DQrm:
	case Int_CVTPD2DQrr:
	case Int_CVTPD2PIrm:
	case Int_CVTPD2PIrr:
	case Int_CVTPD2PSrm:
	case Int_CVTPD2PSrr:
	case Int_CVTPI2PDrm:
	case Int_CVTPI2PDrr:
	case Int_CVTPI2PSrm:
	case Int_CVTPI2PSrr:
	case Int_CVTPS2DQrm:
	case Int_CVTPS2DQrr:
	case Int_CVTPS2PDrm:
	case Int_CVTPS2PDrr:
	case Int_CVTPS2PIrm:
	case Int_CVTPS2PIrr:
	case Int_CVTSD2SI64rm:
	case Int_CVTSD2SI64rr:
	case Int_CVTSD2SIrm:
	case Int_CVTSD2SIrr:
	case Int_CVTSD2SSrm:
	case Int_CVTSD2SSrr:
	case Int_CVTSI2SD64rm:
	case Int_CVTSI2SD64rr:
	case Int_CVTSI2SDrm:
	case Int_CVTSI2SDrr:
	case Int_CVTSI2SS64rm:
	case Int_CVTSI2SS64rr:
	case Int_CVTSI2SSrm:
	case Int_CVTSI2SSrr:
	case Int_CVTSS2SDrm:
	case Int_CVTSS2SDrr:
	case Int_CVTSS2SI64rm:
	case Int_CVTSS2SI64rr:
	case Int_CVTSS2SIrm:
	case Int_CVTSS2SIrr:
	case Int_CVTTPD2DQrm:
	case Int_CVTTPD2DQrr:
	case Int_CVTTPD2PIrm:
	case Int_CVTTPD2PIrr:
	case Int_CVTTPS2DQrm:
	case Int_CVTTPS2DQrr:
	case Int_CVTTPS2PIrm:
	case Int_CVTTPS2PIrr:
	case Int_CVTTSD2SI64rm:
	case Int_CVTTSD2SI64rr:
	case Int_CVTTSD2SIrm:
	case Int_CVTTSD2SIrr:
	case Int_CVTTSS2SI64rm:
	case Int_CVTTSS2SI64rr:
	case Int_CVTTSS2SIrm:
	case Int_CVTTSS2SIrr:
	case Int_UCOMISDrm:
	case Int_UCOMISDrr:
	case Int_UCOMISSrm:
	case Int_UCOMISSrr:
		RETURN_ON_ALL;
		break;

	case TAILCALL:
	case TAILJMPd:
	case TAILJMPm:
	case TAILJMPr:
	case TAILJMPr64:
	case JA:
	case JAE:
	case JB:
	case JBE:
	case JE:
	case JG:
	case JGE:
	case JL:
	case JLE:
	case JMP:
	case JMP32m:
	case JMP32r:
	case JMP64m:
	case JMP64r:
	case JNE:
	case JNO:
	case JNP:
	case JNS:
	case JO:
	case JP:
	case JS:
		RETURN_ON FUT_BRANCH;
		break;

	case LAHF:
	case LCMPXCHG16:
	case LCMPXCHG32:
	case LCMPXCHG64:
	case LCMPXCHG8:
	case LCMPXCHG8B:
	case LDDQUrm:
	case LDMXCSR:
	case LD_F0:
	case LD_F1:
	case LD_F32m:
	case LD_F64m:
	case LD_F80m:
	case LD_Fp032:
	case LD_Fp064:
	case LD_Fp080:
	case LD_Fp132:
	case LD_Fp164:
	case LD_Fp180:
	case LD_Fp32m:
	case LD_Fp32m64:
	case LD_Fp32m80:
	case LD_Fp64m:
	case LD_Fp64m80:
	case LD_Fp80m:
	case LD_Frr:
	case LEA16r:
	case LEA32r:
	case LEA64_32r:
	case LEA64r:
	case LEAVE:
	case LEAVE64:
	case LFENCE:
	case LXADD16:
	case LXADD32:
	case LXADD64:
	case LXADD8:
	case MASKMOVDQU:
	case MAXPDrm:
	case MAXPDrm_Int:
	case MAXPDrr:
	case MAXPDrr_Int:
	case MAXPSrm:
	case MAXPSrm_Int:
	case MAXPSrr:
	case MAXPSrr_Int:
	case MAXSDrm:
	case MAXSDrm_Int:
	case MAXSDrr:
	case MAXSDrr_Int:
	case MAXSSrm:
	case MAXSSrm_Int:
	case MAXSSrr:
	case MAXSSrr_Int:
	case MFENCE:
	case MINPDrm:
	case MINPDrm_Int:
	case MINPDrr:
	case MINPDrr_Int:
	case MINPSrm:
	case MINPSrm_Int:
	case MINPSrr:
	case MINPSrr_Int:
	case MINSDrm:
	case MINSDrm_Int:
	case MINSDrr:
	case MINSDrr_Int:
	case MINSSrm:
	case MINSSrm_Int:
	case MINSSrr:
	case MINSSrr_Int:
	case MMX_CVTPD2PIrm:
	case MMX_CVTPD2PIrr:
	case MMX_CVTPI2PDrm:
	case MMX_CVTPI2PDrr:
	case MMX_CVTPI2PSrm:
	case MMX_CVTPI2PSrr:
	case MMX_CVTPS2PIrm:
	case MMX_CVTPS2PIrr:
	case MMX_CVTTPD2PIrm:
	case MMX_CVTTPD2PIrr:
	case MMX_CVTTPS2PIrm:
	case MMX_CVTTPS2PIrr:
	case MMX_EMMS:
	case MMX_FEMMS:
	case MMX_MASKMOVQ:
	case MMX_MOVD64from64rr:
	case MMX_MOVD64mr:
	case MMX_MOVD64rm:
	case MMX_MOVD64rr:
	case MMX_MOVD64to64rr:
	case MMX_MOVDQ2Qrr:
	case MMX_MOVNTQmr:
	case MMX_MOVQ2DQrr:
	case MMX_MOVQ64mr:
	case MMX_MOVQ64rm:
	case MMX_MOVQ64rr:
	case MMX_MOVZDI2PDIrm:
	case MMX_MOVZDI2PDIrr:
	case MMX_PACKSSDWrm:
	case MMX_PACKSSDWrr:
	case MMX_PACKSSWBrm:
	case MMX_PACKSSWBrr:
	case MMX_PACKUSWBrm:
	case MMX_PACKUSWBrr:
	case MMX_PADDBrm:
	case MMX_PADDBrr:
	case MMX_PADDDrm:
	case MMX_PADDDrr:
	case MMX_PADDQrm:
	case MMX_PADDQrr:
	case MMX_PADDSBrm:
	case MMX_PADDSBrr:
	case MMX_PADDSWrm:
	case MMX_PADDSWrr:
	case MMX_PADDUSBrm:
	case MMX_PADDUSBrr:
	case MMX_PADDUSWrm:
	case MMX_PADDUSWrr:
	case MMX_PADDWrm:
	case MMX_PADDWrr:
	case MMX_PANDNrm:
	case MMX_PANDNrr:
	case MMX_PANDrm:
	case MMX_PANDrr:
	case MMX_PAVGBrm:
	case MMX_PAVGBrr:
	case MMX_PAVGWrm:
	case MMX_PAVGWrr:
	case MMX_PCMPEQBrm:
	case MMX_PCMPEQBrr:
	case MMX_PCMPEQDrm:
	case MMX_PCMPEQDrr:
	case MMX_PCMPEQWrm:
	case MMX_PCMPEQWrr:
	case MMX_PCMPGTBrm:
	case MMX_PCMPGTBrr:
	case MMX_PCMPGTDrm:
	case MMX_PCMPGTDrr:
	case MMX_PCMPGTWrm:
	case MMX_PCMPGTWrr:
	case MMX_PEXTRWri:
	case MMX_PINSRWrmi:
	case MMX_PINSRWrri:
	case MMX_PMADDWDrm:
	case MMX_PMADDWDrr:
	case MMX_PMAXSWrm:
	case MMX_PMAXSWrr:
	case MMX_PMAXUBrm:
	case MMX_PMAXUBrr:
	case MMX_PMINSWrm:
	case MMX_PMINSWrr:
	case MMX_PMINUBrm:
	case MMX_PMINUBrr:
	case MMX_PMOVMSKBrr:
	case MMX_PMULHUWrm:
	case MMX_PMULHUWrr:
	case MMX_PMULHWrm:
	case MMX_PMULHWrr:
	case MMX_PMULLWrm:
	case MMX_PMULLWrr:
	case MMX_PMULUDQrm:
	case MMX_PMULUDQrr:
	case MMX_PORrm:
	case MMX_PORrr:
	case MMX_PSADBWrm:
	case MMX_PSADBWrr:
	case MMX_PSHUFWmi:
	case MMX_PSHUFWri:
	case MMX_PSLLDri:
	case MMX_PSLLDrm:
	case MMX_PSLLDrr:
	case MMX_PSLLQri:
	case MMX_PSLLQrm:
	case MMX_PSLLQrr:
	case MMX_PSLLWri:
	case MMX_PSLLWrm:
	case MMX_PSLLWrr:
	case MMX_PSRADri:
	case MMX_PSRADrm:
	case MMX_PSRADrr:
	case MMX_PSRAWri:
	case MMX_PSRAWrm:
	case MMX_PSRAWrr:
	case MMX_PSRLDri:
	case MMX_PSRLDrm:
	case MMX_PSRLDrr:
	case MMX_PSRLQri:
	case MMX_PSRLQrm:
	case MMX_PSRLQrr:
	case MMX_PSRLWri:
	case MMX_PSRLWrm:
	case MMX_PSRLWrr:
	case MMX_PSUBBrm:
	case MMX_PSUBBrr:
	case MMX_PSUBDrm:
	case MMX_PSUBDrr:
	case MMX_PSUBQrm:
	case MMX_PSUBQrr:
	case MMX_PSUBSBrm:
	case MMX_PSUBSBrr:
	case MMX_PSUBSWrm:
	case MMX_PSUBSWrr:
	case MMX_PSUBUSBrm:
	case MMX_PSUBUSBrr:
	case MMX_PSUBUSWrm:
	case MMX_PSUBUSWrr:
	case MMX_PSUBWrm:
	case MMX_PSUBWrr:
	case MMX_PUNPCKHBWrm:
	case MMX_PUNPCKHBWrr:
	case MMX_PUNPCKHDQrm:
	case MMX_PUNPCKHDQrr:
	case MMX_PUNPCKHWDrm:
	case MMX_PUNPCKHWDrr:
	case MMX_PUNPCKLBWrm:
	case MMX_PUNPCKLBWrr:
	case MMX_PUNPCKLDQrm:
	case MMX_PUNPCKLDQrr:
	case MMX_PUNPCKLWDrm:
	case MMX_PUNPCKLWDrr:
	case MMX_PXORrm:
	case MMX_PXORrr:
	case MMX_V_SET0:
	case MMX_V_SETALLONES:
	case MONITOR:
		RETURN_ON_ALL;
		break;

	case MOV16_mr:
	case MOV16_rm:
	case MOV16_rr:
	case MOV16mi:
	case MOV16mr:
	case MOV16r0:
	case MOV16ri:
	case MOV16rm:
	case MOV16rr:
	case MOV16to16_:
	case MOV32_mr:
	case MOV32_rm:
	case MOV32_rr:
	case MOV32mi:
	case MOV32mr:
	case MOV32r0:
	case MOV32ri:
	case MOV32rm:
	case MOV32rr:
	case MOV32to32_:
	case MOV64mi32:
	case MOV64mr:
	case MOV64r0:
	case MOV64ri:
	case MOV64ri32:
	case MOV64ri64i32:
	case MOV64rm:
	case MOV64rr:
	case MOV64toPQIrr:
	case MOV64toSDrm:
	case MOV64toSDrr:
	case MOV8mi:
	case MOV8mr:
	case MOV8r0:
	case MOV8ri:
	case MOV8rm:
	case MOV8rr:
	case MOVAPDmr:
	case MOVAPDrm:
	case MOVAPDrr:
	case MOVAPSmr:
	case MOVAPSrm:
	case MOVAPSrr:
	case MOVDDUPrm:
	case MOVDDUPrr:
	case MOVDI2PDIrm:
	case MOVDI2PDIrr:
	case MOVDI2SSrm:
	case MOVDI2SSrr:
	case MOVDQAmr:
	case MOVDQArm:
	case MOVDQArr:
	case MOVDQUmr:
	case MOVDQUmr_Int:
	case MOVDQUrm:
	case MOVDQUrm_Int:
	case MOVHLPSrr:
	case MOVHPDmr:
	case MOVHPDrm:
	case MOVHPSmr:
	case MOVHPSrm:
	case MOVLHPSrr:
	case MOVLPDmr:
	case MOVLPDrm:
	case MOVLPDrr:
	case MOVLPSmr:
	case MOVLPSrm:
	case MOVLPSrr:
	case MOVLQ128mr:
	case MOVLSD2PDrr:
	case MOVLSS2PSrr:
	case MOVMSKPDrr:
	case MOVMSKPSrr:
	case MOVNTDQArm:
	case MOVNTDQmr:
	case MOVNTImr:
	case MOVNTPDmr:
	case MOVNTPSmr:
	case MOVPC32r:
	case MOVPD2SDmr:
	case MOVPD2SDrr:
	case MOVPDI2DImr:
	case MOVPDI2DIrr:
	case MOVPQI2QImr:
	case MOVPQIto64rr:
	case MOVPS2SSmr:
	case MOVPS2SSrr:
	case MOVQI2PQIrm:
	case MOVSD2PDrm:
	case MOVSD2PDrr:
	case MOVSDmr:
	case MOVSDrm:
	case MOVSDrr:
	case MOVSDto64mr:
	case MOVSDto64rr:
	case MOVSHDUPrm:
	case MOVSHDUPrr:
	case MOVSLDUPrm:
	case MOVSLDUPrr:
	case MOVSS2DImr:
	case MOVSS2DIrr:
	case MOVSS2PSrm:
	case MOVSS2PSrr:
	case MOVSSmr:
	case MOVSSrm:
	case MOVSSrr:
	case MOVSX16rm8:
	case MOVSX16rr8:
	case MOVSX32rm16:
	case MOVSX32rm8:
	case MOVSX32rr16:
	case MOVSX32rr8:
	case MOVSX64rm16:
	case MOVSX64rm32:
	case MOVSX64rm8:
	case MOVSX64rr16:
	case MOVSX64rr32:
	case MOVSX64rr8:
	case MOVUPDmr:
	case MOVUPDmr_Int:
	case MOVUPDrm:
	case MOVUPDrm_Int:
	case MOVUPDrr:
	case MOVUPSmr:
	case MOVUPSmr_Int:
	case MOVUPSrm:
	case MOVUPSrm_Int:
	case MOVUPSrr:
	case MOVZDI2PDIrm:
	case MOVZDI2PDIrr:
	case MOVZPQILo2PQIrm:
	case MOVZPQILo2PQIrr:
	case MOVZQI2PQIrm:
	case MOVZQI2PQIrr:
	case MOVZSD2PDrm:
	case MOVZSS2PSrm:
	case MOVZX16rm8:
	case MOVZX16rr8:
	case MOVZX32rm16:
	case MOVZX32rm8:
	case MOVZX32rr16:
	case MOVZX32rr8:
	case MOVZX64rm16:
	case MOVZX64rm8:
	case MOVZX64rr16:
	case MOVZX64rr8:
	case MOV_Fp3232:
	case MOV_Fp3264:
	case MOV_Fp3280:
	case MOV_Fp6432:
	case MOV_Fp6464:
	case MOV_Fp6480:
	case MOV_Fp8032:
	case MOV_Fp8064:
	case MOV_Fp8080:
		RETURN_ON_ALL;
		break;

	case MPSADBWrmi:
	case MPSADBWrri:
	case MUL16m:
	case MUL16r:
	case MUL32m:
	case MUL32r:
	case MUL64m:
	case MUL64r:
	case MUL8m:
	case MUL8r:
	case MULPDrm:
	case MULPDrr:
	case MULPSrm:
	case MULPSrr:
	case MULSDrm:
	case MULSDrm_Int:
	case MULSDrr:
	case MULSDrr_Int:
	case MULSSrm:
	case MULSSrm_Int:
	case MULSSrr:
	case MULSSrr_Int:
	case MUL_F32m:
	case MUL_F64m:
	case MUL_FI16m:
	case MUL_FI32m:
	case MUL_FPrST0:
	case MUL_FST0r:
	case MUL_Fp32:
	case MUL_Fp32m:
	case MUL_Fp64:
	case MUL_Fp64m:
	case MUL_Fp64m32:
	case MUL_Fp80:
	case MUL_Fp80m32:
	case MUL_Fp80m64:
	case MUL_FpI16m32:
	case MUL_FpI16m64:
	case MUL_FpI16m80:
	case MUL_FpI32m32:
	case MUL_FpI32m64:
	case MUL_FpI32m80:
	case MUL_FrST0:
	case MWAIT:
	case NEG16m:
	case NEG16r:
	case NEG32m:
	case NEG32r:
	case NEG64m:
	case NEG64r:
	case NEG8m:
	case NEG8r:
	case NOOP:
	case NOT16m:
	case NOT16r:
	case NOT32m:
	case NOT32r:
	case NOT64m:
	case NOT64r:
	case NOT8m:
	case NOT8r:
	case OR16mi:
	case OR16mi8:
	case OR16mr:
	case OR16ri:
	case OR16ri8:
	case OR16rm:
	case OR16rr:
	case OR32mi:
	case OR32mi8:
	case OR32mr:
	case OR32ri:
	case OR32ri8:
	case OR32rm:
	case OR32rr:
	case OR64mi32:
	case OR64mi8:
	case OR64mr:
	case OR64ri32:
	case OR64ri8:
	case OR64rm:
	case OR64rr:
	case OR8mi:
	case OR8mr:
	case OR8ri:
	case OR8rm:
	case OR8rr:
	case ORPDrm:
	case ORPDrr:
	case ORPSrm:
	case ORPSrr:
	case OUT16ir:
	case OUT16rr:
	case OUT32ir:
	case OUT32rr:
	case OUT8ir:
	case OUT8rr:
	case PABSBrm128:
	case PABSBrm64:
	case PABSBrr128:
	case PABSBrr64:
	case PABSDrm128:
	case PABSDrm64:
	case PABSDrr128:
	case PABSDrr64:
	case PABSWrm128:
	case PABSWrm64:
	case PABSWrr128:
	case PABSWrr64:
	case PACKSSDWrm:
	case PACKSSDWrr:
	case PACKSSWBrm:
	case PACKSSWBrr:
	case PACKUSDWrm:
	case PACKUSDWrr:
	case PACKUSWBrm:
	case PACKUSWBrr:
	case PADDBrm:
	case PADDBrr:
	case PADDDrm:
	case PADDDrr:
	case PADDQrm:
	case PADDQrr:
	case PADDSBrm:
	case PADDSBrr:
	case PADDSWrm:
	case PADDSWrr:
	case PADDUSBrm:
	case PADDUSBrr:
	case PADDUSWrm:
	case PADDUSWrr:
	case PADDWrm:
	case PADDWrr:
	case PALIGNR128rm:
	case PALIGNR128rr:
	case PALIGNR64rm:
	case PALIGNR64rr:
	case PANDNrm:
	case PANDNrr:
	case PANDrm:
	case PANDrr:
	case PAVGBrm:
	case PAVGBrr:
	case PAVGWrm:
	case PAVGWrr:
	case PBLENDVBrm0:
	case PBLENDVBrr0:
	case PBLENDWrmi:
	case PBLENDWrri:
	case PCMPEQBrm:
	case PCMPEQBrr:
	case PCMPEQDrm:
	case PCMPEQDrr:
	case PCMPEQQrm:
	case PCMPEQQrr:
	case PCMPEQWrm:
	case PCMPEQWrr:
	case PCMPGTBrm:
	case PCMPGTBrr:
	case PCMPGTDrm:
	case PCMPGTDrr:
	case PCMPGTWrm:
	case PCMPGTWrr:
	case PEXTRBmr:
	case PEXTRBrr:
	case PEXTRDmr:
	case PEXTRDrr:
	case PEXTRQmr:
	case PEXTRQrr:
	case PEXTRWmr:
	case PEXTRWri:
	case PHADDDrm128:
	case PHADDDrm64:
	case PHADDDrr128:
	case PHADDDrr64:
	case PHADDSWrm128:
	case PHADDSWrm64:
	case PHADDSWrr128:
	case PHADDSWrr64:
	case PHADDWrm128:
	case PHADDWrm64:
	case PHADDWrr128:
	case PHADDWrr64:
	case PHMINPOSUWrm128:
	case PHMINPOSUWrr128:
	case PHSUBDrm128:
	case PHSUBDrm64:
	case PHSUBDrr128:
	case PHSUBDrr64:
	case PHSUBSWrm128:
	case PHSUBSWrm64:
	case PHSUBSWrr128:
	case PHSUBSWrr64:
	case PHSUBWrm128:
	case PHSUBWrm64:
	case PHSUBWrr128:
	case PHSUBWrr64:
	case PINSRBrm:
	case PINSRBrr:
	case PINSRDrm:
	case PINSRDrr:
	case PINSRQrm:
	case PINSRQrr:
	case PINSRWrmi:
	case PINSRWrri:
	case PMADDUBSWrm128:
	case PMADDUBSWrm64:
	case PMADDUBSWrr128:
	case PMADDUBSWrr64:
	case PMADDWDrm:
	case PMADDWDrr:
	case PMAXSBrm:
	case PMAXSBrr:
	case PMAXSDrm:
	case PMAXSDrr:
	case PMAXSWrm:
	case PMAXSWrr:
	case PMAXUBrm:
	case PMAXUBrr:
	case PMAXUDrm:
	case PMAXUDrr:
	case PMAXUWrm:
	case PMAXUWrr:
	case PMINSBrm:
	case PMINSBrr:
	case PMINSDrm:
	case PMINSDrr:
	case PMINSWrm:
	case PMINSWrr:
	case PMINUBrm:
	case PMINUBrr:
	case PMINUDrm:
	case PMINUDrr:
	case PMINUWrm:
	case PMINUWrr:
	case PMOVMSKBrr:
	case PMOVSXBDrm:
	case PMOVSXBDrr:
	case PMOVSXBQrm:
	case PMOVSXBQrr:
	case PMOVSXBWrm:
	case PMOVSXBWrr:
	case PMOVSXDQrm:
	case PMOVSXDQrr:
	case PMOVSXWDrm:
	case PMOVSXWDrr:
	case PMOVSXWQrm:
	case PMOVSXWQrr:
	case PMOVZXBDrm:
	case PMOVZXBDrr:
	case PMOVZXBQrm:
	case PMOVZXBQrr:
	case PMOVZXBWrm:
	case PMOVZXBWrr:
	case PMOVZXDQrm:
	case PMOVZXDQrr:
	case PMOVZXWDrm:
	case PMOVZXWDrr:
	case PMOVZXWQrm:
	case PMOVZXWQrr:
	case PMULDQrm:
	case PMULDQrr:
	case PMULHRSWrm128:
	case PMULHRSWrm64:
	case PMULHRSWrr128:
	case PMULHRSWrr64:
	case PMULHUWrm:
	case PMULHUWrr:
	case PMULHWrm:
	case PMULHWrr:
	case PMULLDrm:
	case PMULLDrm_int:
	case PMULLDrr:
	case PMULLDrr_int:
	case PMULLWrm:
	case PMULLWrr:
	case PMULUDQrm:
	case PMULUDQrr:
	case POP32r:
	case POP64r:
	case POPFD:
	case POPFQ:
	case PORrm:
	case PORrr:
	case PREFETCHNTA:
	case PREFETCHT0:
	case PREFETCHT1:
	case PREFETCHT2:
	case PSADBWrm:
	case PSADBWrr:
	case PSHUFBrm128:
	case PSHUFBrm64:
	case PSHUFBrr128:
	case PSHUFBrr64:
	case PSHUFDmi:
	case PSHUFDri:
	case PSHUFHWmi:
	case PSHUFHWri:
	case PSHUFLWmi:
	case PSHUFLWri:
	case PSIGNBrm128:
	case PSIGNBrm64:
	case PSIGNBrr128:
	case PSIGNBrr64:
	case PSIGNDrm128:
	case PSIGNDrm64:
	case PSIGNDrr128:
	case PSIGNDrr64:
	case PSIGNWrm128:
	case PSIGNWrm64:
	case PSIGNWrr128:
	case PSIGNWrr64:
	case PSLLDQri:
	case PSLLDri:
	case PSLLDrm:
	case PSLLDrr:
	case PSLLQri:
	case PSLLQrm:
	case PSLLQrr:
	case PSLLWri:
	case PSLLWrm:
	case PSLLWrr:
	case PSRADri:
	case PSRADrm:
	case PSRADrr:
	case PSRAWri:
	case PSRAWrm:
	case PSRAWrr:
	case PSRLDQri:
	case PSRLDri:
	case PSRLDrm:
	case PSRLDrr:
	case PSRLQri:
	case PSRLQrm:
	case PSRLQrr:
	case PSRLWri:
	case PSRLWrm:
	case PSRLWrr:
	case PSUBBrm:
	case PSUBBrr:
	case PSUBDrm:
	case PSUBDrr:
	case PSUBQrm:
	case PSUBQrr:
	case PSUBSBrm:
	case PSUBSBrr:
	case PSUBSWrm:
	case PSUBSWrr:
	case PSUBUSBrm:
	case PSUBUSBrr:
	case PSUBUSWrm:
	case PSUBUSWrr:
	case PSUBWrm:
	case PSUBWrr:
	case PTESTrm:
	case PTESTrr:
	case PUNPCKHBWrm:
	case PUNPCKHBWrr:
	case PUNPCKHDQrm:
	case PUNPCKHDQrr:
	case PUNPCKHQDQrm:
	case PUNPCKHQDQrr:
	case PUNPCKHWDrm:
	case PUNPCKHWDrr:
	case PUNPCKLBWrm:
	case PUNPCKLBWrr:
	case PUNPCKLDQrm:
	case PUNPCKLDQrr:
	case PUNPCKLQDQrm:
	case PUNPCKLQDQrr:
	case PUNPCKLWDrm:
	case PUNPCKLWDrr:
	case PUSH32r:
	case PUSH64r:
	case PUSHFD:
	case PUSHFQ:
	case PXORrm:
	case PXORrr:
	case RCPPSm:
	case RCPPSm_Int:
	case RCPPSr:
	case RCPPSr_Int:
	case RCPSSm:
	case RCPSSm_Int:
	case RCPSSr:
	case RCPSSr_Int:
	case RDTSC:
	case REP_MOVSB:
	case REP_MOVSD:
	case REP_MOVSQ:
	case REP_MOVSW:
	case REP_STOSB:
	case REP_STOSD:
	case REP_STOSQ:
	case REP_STOSW:
	case RET:
	case RETI:
	case ROL16m1:
	case ROL16mCL:
	case ROL16mi:
	case ROL16r1:
	case ROL16rCL:
	case ROL16ri:
	case ROL32m1:
	case ROL32mCL:
	case ROL32mi:
	case ROL32r1:
	case ROL32rCL:
	case ROL32ri:
	case ROL64m1:
	case ROL64mCL:
	case ROL64mi:
	case ROL64r1:
	case ROL64rCL:
	case ROL64ri:
	case ROL8m1:
	case ROL8mCL:
	case ROL8mi:
	case ROL8r1:
	case ROL8rCL:
	case ROL8ri:
	case ROR16m1:
	case ROR16mCL:
	case ROR16mi:
	case ROR16r1:
	case ROR16rCL:
	case ROR16ri:
	case ROR32m1:
	case ROR32mCL:
	case ROR32mi:
	case ROR32r1:
	case ROR32rCL:
	case ROR32ri:
	case ROR64m1:
	case ROR64mCL:
	case ROR64mi:
	case ROR64r1:
	case ROR64rCL:
	case ROR64ri:
	case ROR8m1:
	case ROR8mCL:
	case ROR8mi:
	case ROR8r1:
	case ROR8rCL:
	case ROR8ri:
	case ROUNDPDm_Int:
	case ROUNDPDr_Int:
	case ROUNDPSm_Int:
	case ROUNDPSr_Int:
	case ROUNDSDm_Int:
	case ROUNDSDr_Int:
	case ROUNDSSm_Int:
	case ROUNDSSr_Int:
	case RSQRTPSm:
	case RSQRTPSm_Int:
	case RSQRTPSr:
	case RSQRTPSr_Int:
	case RSQRTSSm:
	case RSQRTSSm_Int:
	case RSQRTSSr:
	case RSQRTSSr_Int:
	case SAHF:
	case SAR16m1:
	case SAR16mCL:
	case SAR16mi:
	case SAR16r1:
	case SAR16rCL:
	case SAR16ri:
	case SAR32m1:
	case SAR32mCL:
	case SAR32mi:
	case SAR32r1:
	case SAR32rCL:
	case SAR32ri:
	case SAR64m1:
	case SAR64mCL:
	case SAR64mi:
	case SAR64r1:
	case SAR64rCL:
	case SAR64ri:
	case SAR8m1:
	case SAR8mCL:
	case SAR8mi:
	case SAR8r1:
	case SAR8rCL:
	case SAR8ri:
	case SBB32mi:
	case SBB32mi8:
	case SBB32mr:
	case SBB32ri:
	case SBB32ri8:
	case SBB32rm:
	case SBB32rr:
	case SBB64mi32:
	case SBB64mi8:
	case SBB64mr:
	case SBB64ri32:
	case SBB64ri8:
	case SBB64rm:
	case SBB64rr:
	case SBB8mi:
	case SETAEm:
	case SETAEr:
	case SETAm:
	case SETAr:
	case SETBEm:
	case SETBEr:
	case SETBm:
	case SETBr:
	case SETEm:
	case SETEr:
	case SETGEm:
	case SETGEr:
	case SETGm:
	case SETGr:
	case SETLEm:
	case SETLEr:
	case SETLm:
	case SETLr:
	case SETNEm:
	case SETNEr:
	case SETNPm:
	case SETNPr:
	case SETNSm:
	case SETNSr:
	case SETPm:
	case SETPr:
	case SETSm:
	case SETSr:
	case SFENCE:
	case SHL16m1:
	case SHL16mCL:
	case SHL16mi:
	case SHL16rCL:
	case SHL16ri:
	case SHL32m1:
	case SHL32mCL:
	case SHL32mi:
	case SHL32rCL:
	case SHL32ri:
	case SHL64m1:
	case SHL64mCL:
	case SHL64mi:
	case SHL64rCL:
	case SHL64ri:
	case SHL8m1:
	case SHL8mCL:
	case SHL8mi:
	case SHL8rCL:
	case SHL8ri:
	case SHLD16mrCL:
	case SHLD16mri8:
	case SHLD16rrCL:
	case SHLD16rri8:
	case SHLD32mrCL:
	case SHLD32mri8:
	case SHLD32rrCL:
	case SHLD32rri8:
	case SHLD64mrCL:
	case SHLD64mri8:
	case SHLD64rrCL:
	case SHLD64rri8:
	case SHR16m1:
	case SHR16mCL:
	case SHR16mi:
	case SHR16r1:
	case SHR16rCL:
	case SHR16ri:
	case SHR32m1:
	case SHR32mCL:
	case SHR32mi:
	case SHR32r1:
	case SHR32rCL:
	case SHR32ri:
	case SHR64m1:
	case SHR64mCL:
	case SHR64mi:
	case SHR64r1:
	case SHR64rCL:
	case SHR64ri:
	case SHR8m1:
	case SHR8mCL:
	case SHR8mi:
	case SHR8r1:
	case SHR8rCL:
	case SHR8ri:
	case SHRD16mrCL:
	case SHRD16mri8:
	case SHRD16rrCL:
	case SHRD16rri8:
	case SHRD32mrCL:
	case SHRD32mri8:
	case SHRD32rrCL:
	case SHRD32rri8:
	case SHRD64mrCL:
	case SHRD64mri8:
	case SHRD64rrCL:
	case SHRD64rri8:
	case SHUFPDrmi:
	case SHUFPDrri:
	case SHUFPSrmi:
	case SHUFPSrri:
	case SIN_F:
	case SIN_Fp32:
	case SIN_Fp64:
	case SIN_Fp80:
	case SQRTPDm:
	case SQRTPDm_Int:
	case SQRTPDr:
	case SQRTPDr_Int:
	case SQRTPSm:
	case SQRTPSm_Int:
	case SQRTPSr:
	case SQRTPSr_Int:
	case SQRTSDm:
	case SQRTSDm_Int:
	case SQRTSDr:
	case SQRTSDr_Int:
	case SQRTSSm:
	case SQRTSSm_Int:
	case SQRTSSr:
	case SQRTSSr_Int:
	case SQRT_F:
	case SQRT_Fp32:
	case SQRT_Fp64:
	case SQRT_Fp80:
	case STMXCSR:
	case ST_F32m:
	case ST_F64m:
	case ST_FP32m:
	case ST_FP64m:
	case ST_FP80m:
	case ST_FPrr:
	case ST_Fp32m:
	case ST_Fp64m:
	case ST_Fp64m32:
	case ST_Fp80m32:
	case ST_Fp80m64:
	case ST_FpP32m:
	case ST_FpP64m:
	case ST_FpP64m32:
	case ST_FpP80m:
	case ST_FpP80m32:
	case ST_FpP80m64:
	case ST_Frr:
		RETURN_ON_ALL;
		break;

	case SUB16mi:
	case SUB16mi8:
	case SUB16mr:
	case SUB16ri:
	case SUB16ri8:
	case SUB16rm:
	case SUB16rr:
	case SUB32mi:
	case SUB32mi8:
	case SUB32mr:
	case SUB32ri:
	case SUB32ri8:
	case SUB32rm:
	case SUB32rr:
	case SUB64mi32:
	case SUB64mi8:
	case SUB64mr:
	case SUB64ri32:
	case SUB64ri8:
	case SUB64rm:
	case SUB64rr:
	case SUB8mi:
	case SUB8mr:
	case SUB8ri:
	case SUB8rm:
	case SUB8rr:
	case SUBPDrm:
	case SUBPDrr:
	case SUBPSrm:
	case SUBPSrr:
	case SUBR_F32m:
	case SUBR_F64m:
	case SUBR_FI16m:
	case SUBR_FI32m:
	case SUBR_FPrST0:
	case SUBR_FST0r:
	case SUBR_Fp32m:
	case SUBR_Fp64m:
	case SUBR_Fp64m32:
	case SUBR_Fp80m32:
	case SUBR_Fp80m64:
	case SUBR_FpI16m32:
	case SUBR_FpI16m64:
	case SUBR_FpI16m80:
	case SUBR_FpI32m32:
	case SUBR_FpI32m64:
	case SUBR_FpI32m80:
	case SUBR_FrST0:
	case SUBSDrm:
	case SUBSDrm_Int:
	case SUBSDrr:
	case SUBSDrr_Int:
	case SUBSSrm:
	case SUBSSrm_Int:
	case SUBSSrr:
	case SUBSSrr_Int:
		RETURN_ON FUT_INT_ADDER;
		break;

	case SUB_F32m:
	case SUB_F64m:
	case SUB_FI16m:
	case SUB_FI32m:
	case SUB_FPrST0:
	case SUB_FST0r:
	case SUB_Fp32:
	case SUB_Fp32m:
	case SUB_Fp64:
	case SUB_Fp64m:
	case SUB_Fp64m32:
	case SUB_Fp80:
	case SUB_Fp80m32:
	case SUB_Fp80m64:
	case SUB_FpI16m32:
	case SUB_FpI16m64:
	case SUB_FpI16m80:
	case SUB_FpI32m32:
	case SUB_FpI32m64:
	case SUB_FpI32m80:
	case SUB_FrST0:
		RETURN_ON FUT_FP_ADDER
		break;

	case TCRETURNdi:
	case TCRETURNdi64:
	case TCRETURNri:
	case TCRETURNri64:
	case TEST16mi:
	case TEST16ri:
	case TEST16rm:
	case TEST16rr:
	case TEST32mi:
	case TEST32ri:
	case TEST32rm:
	case TEST32rr:
	case TEST64mi32:
	case TEST64ri32:
	case TEST64rm:
	case TEST64rr:
	case TEST8mi:
	case TEST8ri:
	case TEST8rm:
	case TEST8rr:
	case TLS_addr32:
	case TLS_addr64:
	case TLS_gs_ri:
	case TLS_gs_rr:
	case TLS_tp:
	case TRAP:
	case TST_F:
	case TST_Fp32:
	case TST_Fp64:
	case TST_Fp80:
	case UCOMISDrm:
	case UCOMISDrr:
	case UCOMISSrm:
	case UCOMISSrr:
	case UCOM_FIPr:
	case UCOM_FIr:
	case UCOM_FPPr:
	case UCOM_FPr:
	case UCOM_FpIr32:
	case UCOM_FpIr64:
	case UCOM_FpIr80:
	case UCOM_Fpr32:
	case UCOM_Fpr64:
	case UCOM_Fpr80:
	case UCOM_Fr:
	case UNPCKHPDrm:
	case UNPCKHPDrr:
	case UNPCKHPSrm:
	case UNPCKHPSrr:
	case UNPCKLPDrm:
	case UNPCKLPDrr:
	case UNPCKLPSrm:
	case UNPCKLPSrr:
	case V_SET0:
	case V_SETALLONES:
	case XCHG16rm:
	case XCHG32rm:
	case XCHG64rm:
	case XCHG8rm:
	case XCH_F:
	case XOR16mi:
	case XOR16mi8:
	case XOR16mr:
	case XOR16ri:
	case XOR16ri8:
	case XOR16rm:
	case XOR16rr:
	case XOR32mi:
	case XOR32mi8:
	case XOR32mr:
	case XOR32ri:
	case XOR32ri8:
	case XOR32rm:
	case XOR32rr:
	case XOR64mi32:
	case XOR64mi8:
	case XOR64mr:
	case XOR64ri32:
	case XOR64ri8:
	case XOR64rm:
	case XOR64rr:
	case XOR8mi:
	case XOR8mr:
	case XOR8ri:
	case XOR8rm:
	case XOR8rr:
	case XORPDrm:
	case XORPDrr:
	case XORPSrm:
	case XORPSrr:
	case INSTRUCTION_LIST_END:
	case INSTRUCTION_LIST_END:
	case INSTRUCTION_LIST_END:
	case INSTRUCTION_LIST_END:
	default:
		RETURN_ON_ALL;
		break;
